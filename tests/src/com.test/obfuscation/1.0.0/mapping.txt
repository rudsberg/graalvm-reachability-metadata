com_test.obfuscation.ObfuscationTest -> com_test.obfuscation.ObfuscationTest:
    void <init>() -> <init>
    void test() -> test
org.json.CDL -> a.a.a:
    void <init>() -> <init>
    java.lang.String getValue(org.json.JSONTokener,char) -> getValue
    org.json.JSONArray rowToJSONArray(org.json.JSONTokener) -> rowToJSONArray
    org.json.JSONArray rowToJSONArray(org.json.JSONTokener,char) -> rowToJSONArray
    org.json.JSONObject rowToJSONObject(org.json.JSONArray,org.json.JSONTokener) -> rowToJSONObject
    org.json.JSONObject rowToJSONObject(org.json.JSONArray,org.json.JSONTokener,char) -> rowToJSONObject
    java.lang.String rowToString(org.json.JSONArray) -> rowToString
    java.lang.String rowToString(org.json.JSONArray,char) -> rowToString
    org.json.JSONArray toJSONArray(java.lang.String) -> toJSONArray
    org.json.JSONArray toJSONArray(java.lang.String,char) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.JSONTokener) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.JSONTokener,char) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.JSONArray,java.lang.String) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.JSONArray,java.lang.String,char) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.JSONArray,org.json.JSONTokener) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.JSONArray,org.json.JSONTokener,char) -> toJSONArray
    java.lang.String toString(org.json.JSONArray) -> toString
    java.lang.String toString(org.json.JSONArray,char) -> toString
    java.lang.String toString(org.json.JSONArray,org.json.JSONArray) -> toString
    java.lang.String toString(org.json.JSONArray,org.json.JSONArray,char) -> toString
org.json.Cookie -> a.a.b:
    void <init>() -> <init>
    java.lang.String escape(java.lang.String) -> escape
    org.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    java.lang.String toString(org.json.JSONObject) -> toString
    java.lang.String unescape(java.lang.String) -> unescape
org.json.CookieList -> a.a.c:
    void <init>() -> <init>
    org.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    java.lang.String toString(org.json.JSONObject) -> toString
org.json.HTTP -> a.a.d:
    java.lang.String CRLF -> a
    void <init>() -> <init>
    org.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    java.lang.String toString(org.json.JSONObject) -> toString
org.json.HTTPTokener -> a.a.e:
    void <init>(java.lang.String) -> <init>
    java.lang.String nextToken() -> nextToken
org.json.JSONArray -> a.a.f:
    java.util.ArrayList myArrayList -> a
    void <init>() -> <init>
    void <init>(org.json.JSONTokener) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.util.Collection) -> <init>
    void <init>(java.util.Collection,org.json.JSONParserConfiguration) -> <init>
    void <init>(java.util.Collection,int,org.json.JSONParserConfiguration) -> <init>
    void <init>(java.lang.Iterable) -> <init>
    void <init>(org.json.JSONArray) -> <init>
    void <init>(java.lang.Object) -> <init>
    void <init>(int) -> <init>
    java.util.Iterator iterator() -> iterator
    java.lang.Object get(int) -> get
    boolean getBoolean(int) -> getBoolean
    double getDouble(int) -> getDouble
    float getFloat(int) -> getFloat
    java.lang.Number getNumber(int) -> getNumber
    java.lang.Enum getEnum(java.lang.Class,int) -> getEnum
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    java.math.BigInteger getBigInteger(int) -> getBigInteger
    int getInt(int) -> getInt
    org.json.JSONArray getJSONArray(int) -> getJSONArray
    org.json.JSONObject getJSONObject(int) -> getJSONObject
    long getLong(int) -> getLong
    java.lang.String getString(int) -> getString
    boolean isNull(int) -> isNull
    java.lang.String join(java.lang.String) -> join
    int length() -> length
    void clear() -> clear
    java.lang.Object opt(int) -> opt
    boolean optBoolean(int) -> optBoolean
    boolean optBoolean(int,boolean) -> optBoolean
    java.lang.Boolean optBooleanObject(int) -> optBooleanObject
    java.lang.Boolean optBooleanObject(int,java.lang.Boolean) -> optBooleanObject
    double optDouble(int) -> optDouble
    double optDouble(int,double) -> optDouble
    java.lang.Double optDoubleObject(int) -> optDoubleObject
    java.lang.Double optDoubleObject(int,java.lang.Double) -> optDoubleObject
    float optFloat(int) -> optFloat
    float optFloat(int,float) -> optFloat
    java.lang.Float optFloatObject(int) -> optFloatObject
    java.lang.Float optFloatObject(int,java.lang.Float) -> optFloatObject
    int optInt(int) -> optInt
    int optInt(int,int) -> optInt
    java.lang.Integer optIntegerObject(int) -> optIntegerObject
    java.lang.Integer optIntegerObject(int,java.lang.Integer) -> optIntegerObject
    java.lang.Enum optEnum(java.lang.Class,int) -> optEnum
    java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> optEnum
    java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> optBigInteger
    java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> optBigDecimal
    org.json.JSONArray optJSONArray(int) -> optJSONArray
    org.json.JSONArray optJSONArray(int,org.json.JSONArray) -> optJSONArray
    org.json.JSONObject optJSONObject(int) -> optJSONObject
    org.json.JSONObject optJSONObject(int,org.json.JSONObject) -> optJSONObject
    long optLong(int) -> optLong
    long optLong(int,long) -> optLong
    java.lang.Long optLongObject(int) -> optLongObject
    java.lang.Long optLongObject(int,java.lang.Long) -> optLongObject
    java.lang.Number optNumber(int) -> optNumber
    java.lang.Number optNumber(int,java.lang.Number) -> optNumber
    java.lang.String optString(int) -> optString
    java.lang.String optString(int,java.lang.String) -> optString
    org.json.JSONArray put(boolean) -> put
    org.json.JSONArray put(java.util.Collection) -> put
    org.json.JSONArray put(double) -> put
    org.json.JSONArray put(float) -> put
    org.json.JSONArray put(int) -> put
    org.json.JSONArray put(long) -> put
    org.json.JSONArray put(java.util.Map) -> put
    org.json.JSONArray put(java.lang.Object) -> put
    org.json.JSONArray put(int,boolean) -> put
    org.json.JSONArray put(int,java.util.Collection) -> put
    org.json.JSONArray put(int,double) -> put
    org.json.JSONArray put(int,float) -> put
    org.json.JSONArray put(int,int) -> put
    org.json.JSONArray put(int,long) -> put
    org.json.JSONArray put(int,java.util.Map) -> put
    org.json.JSONArray put(int,java.util.Map,org.json.JSONParserConfiguration) -> put
    org.json.JSONArray put(int,java.lang.Object) -> put
    org.json.JSONArray putAll(java.util.Collection) -> putAll
    org.json.JSONArray putAll(java.lang.Iterable) -> putAll
    org.json.JSONArray putAll(org.json.JSONArray) -> putAll
    org.json.JSONArray putAll(java.lang.Object) -> putAll
    java.lang.Object query(java.lang.String) -> query
    java.lang.Object query(org.json.JSONPointer) -> query
    java.lang.Object optQuery(java.lang.String) -> optQuery
    java.lang.Object optQuery(org.json.JSONPointer) -> optQuery
    java.lang.Object remove(int) -> remove
    boolean similar(java.lang.Object) -> similar
    org.json.JSONObject toJSONObject(org.json.JSONArray) -> toJSONObject
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.io.Writer write(java.io.Writer) -> write
    java.io.Writer write(java.io.Writer,int,int) -> write
    java.util.List toList() -> toList
    boolean isEmpty() -> isEmpty
    void addAll(java.util.Collection,boolean,int,org.json.JSONParserConfiguration) -> addAll
    void addAll(java.lang.Iterable,boolean) -> addAll
    void addAll(java.lang.Object,boolean) -> addAll
    void addAll(java.lang.Object,boolean,int) -> addAll
    void addAll(java.lang.Object,boolean,int,org.json.JSONParserConfiguration) -> addAll
    org.json.JSONException wrongValueFormatException(int,java.lang.String,java.lang.Object,java.lang.Throwable) -> wrongValueFormatException
org.json.JSONException -> a.a.g:
    long serialVersionUID -> a
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Throwable) -> <init>
org.json.JSONML -> a.a.h:
    void <init>() -> <init>
    java.lang.Object parse(org.json.XMLTokener,boolean,org.json.JSONArray,boolean,int) -> parse
    java.lang.Object parse(org.json.XMLTokener,boolean,org.json.JSONArray,org.json.JSONMLParserConfiguration,int) -> parse
    org.json.JSONArray toJSONArray(java.lang.String) -> toJSONArray
    org.json.JSONArray toJSONArray(java.lang.String,boolean) -> toJSONArray
    org.json.JSONArray toJSONArray(java.lang.String,org.json.JSONMLParserConfiguration) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.XMLTokener,org.json.JSONMLParserConfiguration) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.XMLTokener,boolean) -> toJSONArray
    org.json.JSONArray toJSONArray(org.json.XMLTokener) -> toJSONArray
    org.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    org.json.JSONObject toJSONObject(java.lang.String,boolean) -> toJSONObject
    org.json.JSONObject toJSONObject(java.lang.String,org.json.JSONMLParserConfiguration) -> toJSONObject
    org.json.JSONObject toJSONObject(org.json.XMLTokener) -> toJSONObject
    org.json.JSONObject toJSONObject(org.json.XMLTokener,boolean) -> toJSONObject
    org.json.JSONObject toJSONObject(org.json.XMLTokener,org.json.JSONMLParserConfiguration) -> toJSONObject
    java.lang.String toString(org.json.JSONArray) -> toString
    java.lang.String toString(org.json.JSONObject) -> toString
org.json.JSONMLParserConfiguration -> a.a.i:
    int DEFAULT_MAXIMUM_NESTING_DEPTH -> a
    org.json.JSONMLParserConfiguration ORIGINAL -> b
    org.json.JSONMLParserConfiguration KEEP_STRINGS -> c
    void <init>() -> <init>
    void <init>(boolean,int) -> <init>
    org.json.JSONMLParserConfiguration clone() -> clone
    org.json.JSONMLParserConfiguration withKeepStrings(boolean) -> withKeepStrings
    org.json.JSONMLParserConfiguration withMaxNestingDepth(int) -> withMaxNestingDepth
    org.json.ParserConfiguration withMaxNestingDepth(int) -> withMaxNestingDepth
    org.json.ParserConfiguration withKeepStrings(boolean) -> withKeepStrings
    org.json.ParserConfiguration clone() -> clone
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
org.json.JSONObject -> a.a.j:
    java.util.regex.Pattern NUMBER_PATTERN -> a
    java.util.Map map -> c
    java.lang.Object NULL -> b
    java.lang.Class getMapType() -> getMapType
    void <init>() -> <init>
    void <init>(org.json.JSONObject,java.lang.String[]) -> <init>
    void <init>(org.json.JSONTokener) -> <init>
    void <init>(java.util.Map) -> <init>
    void <init>(java.util.Map,org.json.JSONParserConfiguration) -> <init>
    void <init>(java.util.Map,int,org.json.JSONParserConfiguration) -> <init>
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,java.util.Set) -> <init>
    void <init>(java.lang.Object,java.lang.String[]) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.util.Locale) -> <init>
    void <init>(int) -> <init>
    org.json.JSONObject accumulate(java.lang.String,java.lang.Object) -> accumulate
    org.json.JSONObject append(java.lang.String,java.lang.Object) -> append
    java.lang.String doubleToString(double) -> doubleToString
    java.lang.Object get(java.lang.String) -> get
    java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    boolean getBoolean(java.lang.String) -> getBoolean
    java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    double getDouble(java.lang.String) -> getDouble
    float getFloat(java.lang.String) -> getFloat
    java.lang.Number getNumber(java.lang.String) -> getNumber
    int getInt(java.lang.String) -> getInt
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    long getLong(java.lang.String) -> getLong
    java.lang.String[] getNames(org.json.JSONObject) -> getNames
    java.lang.String[] getNames(java.lang.Object) -> getNames
    java.lang.String getString(java.lang.String) -> getString
    boolean has(java.lang.String) -> has
    org.json.JSONObject increment(java.lang.String) -> increment
    boolean isNull(java.lang.String) -> isNull
    java.util.Iterator keys() -> keys
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    int length() -> length
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    org.json.JSONArray names() -> names
    java.lang.String numberToString(java.lang.Number) -> numberToString
    java.lang.Object opt(java.lang.String) -> opt
    java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> optEnum
    java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> optEnum
    boolean optBoolean(java.lang.String) -> optBoolean
    boolean optBoolean(java.lang.String,boolean) -> optBoolean
    java.lang.Boolean optBooleanObject(java.lang.String) -> optBooleanObject
    java.lang.Boolean optBooleanObject(java.lang.String,java.lang.Boolean) -> optBooleanObject
    java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> optBigDecimal
    java.math.BigDecimal objectToBigDecimal(java.lang.Object,java.math.BigDecimal) -> objectToBigDecimal
    java.math.BigDecimal objectToBigDecimal(java.lang.Object,java.math.BigDecimal,boolean) -> objectToBigDecimal
    java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> optBigInteger
    java.math.BigInteger objectToBigInteger(java.lang.Object,java.math.BigInteger) -> objectToBigInteger
    double optDouble(java.lang.String) -> optDouble
    double optDouble(java.lang.String,double) -> optDouble
    java.lang.Double optDoubleObject(java.lang.String) -> optDoubleObject
    java.lang.Double optDoubleObject(java.lang.String,java.lang.Double) -> optDoubleObject
    float optFloat(java.lang.String) -> optFloat
    float optFloat(java.lang.String,float) -> optFloat
    java.lang.Float optFloatObject(java.lang.String) -> optFloatObject
    java.lang.Float optFloatObject(java.lang.String,java.lang.Float) -> optFloatObject
    int optInt(java.lang.String) -> optInt
    int optInt(java.lang.String,int) -> optInt
    java.lang.Integer optIntegerObject(java.lang.String) -> optIntegerObject
    java.lang.Integer optIntegerObject(java.lang.String,java.lang.Integer) -> optIntegerObject
    org.json.JSONArray optJSONArray(java.lang.String) -> optJSONArray
    org.json.JSONArray optJSONArray(java.lang.String,org.json.JSONArray) -> optJSONArray
    org.json.JSONObject optJSONObject(java.lang.String) -> optJSONObject
    org.json.JSONObject optJSONObject(java.lang.String,org.json.JSONObject) -> optJSONObject
    long optLong(java.lang.String) -> optLong
    long optLong(java.lang.String,long) -> optLong
    java.lang.Long optLongObject(java.lang.String) -> optLongObject
    java.lang.Long optLongObject(java.lang.String,java.lang.Long) -> optLongObject
    java.lang.Number optNumber(java.lang.String) -> optNumber
    java.lang.Number optNumber(java.lang.String,java.lang.Number) -> optNumber
    java.lang.String optString(java.lang.String) -> optString
    java.lang.String optString(java.lang.String,java.lang.String) -> optString
    void populateMap(java.lang.Object) -> populateMap
    void populateMap(java.lang.Object,java.util.Set) -> populateMap
    boolean isValidMethodName(java.lang.String) -> isValidMethodName
    java.lang.String getKeyNameFromMethod(java.lang.reflect.Method) -> getKeyNameFromMethod
    java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Method,java.lang.Class) -> getAnnotation
    int getAnnotationDepth(java.lang.reflect.Method,java.lang.Class) -> getAnnotationDepth
    org.json.JSONObject put(java.lang.String,boolean) -> put
    org.json.JSONObject put(java.lang.String,java.util.Collection) -> put
    org.json.JSONObject put(java.lang.String,double) -> put
    org.json.JSONObject put(java.lang.String,float) -> put
    org.json.JSONObject put(java.lang.String,int) -> put
    org.json.JSONObject put(java.lang.String,long) -> put
    org.json.JSONObject put(java.lang.String,java.util.Map) -> put
    org.json.JSONObject put(java.lang.String,java.lang.Object) -> put
    org.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> putOnce
    org.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> putOpt
    java.lang.Object query(java.lang.String) -> query
    java.lang.Object query(org.json.JSONPointer) -> query
    java.lang.Object optQuery(java.lang.String) -> optQuery
    java.lang.Object optQuery(org.json.JSONPointer) -> optQuery
    java.lang.String quote(java.lang.String) -> quote
    java.io.Writer quote(java.lang.String,java.io.Writer) -> quote
    java.lang.Object remove(java.lang.String) -> remove
    boolean similar(java.lang.Object) -> similar
    boolean isNumberSimilar(java.lang.Number,java.lang.Number) -> isNumberSimilar
    boolean numberIsFinite(java.lang.Number) -> numberIsFinite
    boolean isDecimalNotation(java.lang.String) -> isDecimalNotation
    java.lang.Object stringToValue(java.lang.String) -> stringToValue
    java.lang.Number stringToNumber(java.lang.String) -> stringToNumber
    void testValidity(java.lang.Object) -> testValidity
    org.json.JSONArray toJSONArray(org.json.JSONArray) -> toJSONArray
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String valueToString(java.lang.Object) -> valueToString
    java.lang.Object wrap(java.lang.Object) -> wrap
    java.lang.Object wrap(java.lang.Object,int,org.json.JSONParserConfiguration) -> wrap
    java.lang.Object wrap(java.lang.Object,java.util.Set) -> wrap
    java.lang.Object wrap(java.lang.Object,java.util.Set,int,org.json.JSONParserConfiguration) -> wrap
    java.io.Writer write(java.io.Writer) -> write
    java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> writeValue
    void indent(java.io.Writer,int) -> indent
    java.io.Writer write(java.io.Writer,int,int) -> write
    java.util.Map toMap() -> toMap
    org.json.JSONException wrongValueFormatException(java.lang.String,java.lang.String,java.lang.Object,java.lang.Throwable) -> wrongValueFormatException
    org.json.JSONException recursivelyDefinedObjectException(java.lang.String) -> recursivelyDefinedObjectException
    java.lang.String removeLeadingZerosOfNumber(java.lang.String) -> removeLeadingZerosOfNumber
    void <clinit>() -> <clinit>
org.json.JSONObject$1 -> a.a.j$1:
org.json.JSONObject$Null -> a.a.j$a:
    void <init>() -> <init>
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void <init>(org.json.JSONObject$1) -> <init>
org.json.JSONParserConfiguration -> a.a.k:
    void <init>() -> <init>
    org.json.JSONParserConfiguration clone() -> clone
    org.json.JSONParserConfiguration withMaxNestingDepth(int) -> withMaxNestingDepth
    org.json.ParserConfiguration withMaxNestingDepth(int) -> withMaxNestingDepth
    org.json.ParserConfiguration clone() -> clone
    java.lang.Object clone() -> clone
org.json.JSONPointer -> a.a.l:
    java.lang.String ENCODING -> a
    java.util.List refTokens -> b
    org.json.JSONPointer$Builder builder() -> builder
    void <init>(java.lang.String) -> <init>
    void <init>(java.util.List) -> <init>
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.Object queryFrom(java.lang.Object) -> queryFrom
    java.lang.Object readByIndexToken(java.lang.Object,java.lang.String) -> readByIndexToken
    java.lang.String toString() -> toString
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String toURIFragment() -> toURIFragment
org.json.JSONPointer$Builder -> a.a.l$a:
    java.util.List refTokens -> a
    void <init>() -> <init>
    org.json.JSONPointer build() -> build
    org.json.JSONPointer$Builder append(java.lang.String) -> append
    org.json.JSONPointer$Builder append(int) -> append
org.json.JSONPointerException -> a.a.m:
    long serialVersionUID -> a
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.json.JSONPropertyIgnore -> a.a.n:
org.json.JSONPropertyName -> a.a.o:
    java.lang.String value() -> value
org.json.JSONString -> a.a.p:
    java.lang.String toJSONString() -> toJSONString
org.json.JSONStringer -> a.a.q:
    void <init>() -> <init>
    java.lang.String toString() -> toString
org.json.JSONTokener -> a.a.r:
    long character -> a
    boolean eof -> b
    long index -> c
    long line -> d
    char previous -> e
    java.io.Reader reader -> f
    boolean usePrevious -> g
    long characterPreviousLine -> h
    void <init>(java.io.Reader) -> <init>
    void <init>(java.io.InputStream) -> <init>
    void <init>(java.lang.String) -> <init>
    void back() -> back
    void decrementIndexes() -> decrementIndexes
    int dehexchar(char) -> dehexchar
    boolean end() -> end
    boolean more() -> more
    char next() -> next
    char getPrevious() -> getPrevious
    void incrementIndexes(int) -> incrementIndexes
    char next(char) -> next
    java.lang.String next(int) -> next
    char nextClean() -> nextClean
    java.lang.String nextString(char) -> nextString
    java.lang.String nextTo(char) -> nextTo
    java.lang.String nextTo(java.lang.String) -> nextTo
    java.lang.Object nextValue() -> nextValue
    java.lang.Object nextSimpleValue(char) -> nextSimpleValue
    char skipTo(char) -> skipTo
    org.json.JSONException syntaxError(java.lang.String) -> syntaxError
    org.json.JSONException syntaxError(java.lang.String,java.lang.Throwable) -> syntaxError
    java.lang.String toString() -> toString
    void close() -> close
org.json.JSONWriter -> a.a.s:
    int maxdepth -> c
    boolean comma -> d
    char mode -> a
    org.json.JSONObject[] stack -> e
    int top -> f
    java.lang.Appendable writer -> b
    void <init>(java.lang.Appendable) -> <init>
    org.json.JSONWriter append(java.lang.String) -> append
    org.json.JSONWriter array() -> array
    org.json.JSONWriter end(char,char) -> end
    org.json.JSONWriter endArray() -> endArray
    org.json.JSONWriter endObject() -> endObject
    org.json.JSONWriter key(java.lang.String) -> key
    org.json.JSONWriter object() -> object
    void pop(char) -> pop
    void push(org.json.JSONObject) -> push
    java.lang.String valueToString(java.lang.Object) -> valueToString
    org.json.JSONWriter value(boolean) -> value
    org.json.JSONWriter value(double) -> value
    org.json.JSONWriter value(long) -> value
    org.json.JSONWriter value(java.lang.Object) -> value
org.json.ParserConfiguration -> a.a.t:
    int UNDEFINED_MAXIMUM_NESTING_DEPTH -> d
    int DEFAULT_MAXIMUM_NESTING_DEPTH -> e
    boolean keepStrings -> f
    int maxNestingDepth -> g
    void <init>() -> <init>
    void <init>(boolean,int) -> <init>
    org.json.ParserConfiguration clone() -> clone
    boolean isKeepStrings() -> isKeepStrings
    org.json.ParserConfiguration withKeepStrings(boolean) -> withKeepStrings
    int getMaxNestingDepth() -> getMaxNestingDepth
    org.json.ParserConfiguration withMaxNestingDepth(int) -> withMaxNestingDepth
    java.lang.Object clone() -> clone
org.json.Property -> a.a.u:
    void <init>() -> <init>
    org.json.JSONObject toJSONObject(java.util.Properties) -> toJSONObject
    java.util.Properties toProperties(org.json.JSONObject) -> toProperties
org.json.XML -> a.a.v:
    java.lang.Character AMP -> a
    java.lang.Character APOS -> b
    java.lang.Character BANG -> c
    java.lang.Character EQ -> d
    java.lang.Character GT -> e
    java.lang.Character LT -> f
    java.lang.Character QUEST -> g
    java.lang.Character QUOT -> h
    java.lang.Character SLASH -> i
    java.lang.String NULL_ATTR -> j
    java.lang.String TYPE_ATTR -> k
    void <init>() -> <init>
    java.lang.Iterable codePointIterator(java.lang.String) -> codePointIterator
    java.lang.String escape(java.lang.String) -> escape
    boolean mustEscape(int) -> mustEscape
    java.lang.String unescape(java.lang.String) -> unescape
    void noSpace(java.lang.String) -> noSpace
    boolean parse(org.json.XMLTokener,org.json.JSONObject,java.lang.String,org.json.XMLParserConfiguration,int) -> parse
    void removeEmpty(org.json.JSONObject,org.json.XMLParserConfiguration) -> removeEmpty
    boolean isStringAllWhiteSpace(java.lang.String) -> isStringAllWhiteSpace
    java.lang.Number stringToNumber(java.lang.String) -> stringToNumber
    boolean isDecimalNotation(java.lang.String) -> isDecimalNotation
    java.lang.Object stringToValue(java.lang.String,org.json.XMLXsiTypeConverter) -> stringToValue
    java.lang.Object stringToValue(java.lang.String) -> stringToValue
    org.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    org.json.JSONObject toJSONObject(java.io.Reader) -> toJSONObject
    org.json.JSONObject toJSONObject(java.io.Reader,boolean) -> toJSONObject
    org.json.JSONObject toJSONObject(java.io.Reader,org.json.XMLParserConfiguration) -> toJSONObject
    org.json.JSONObject toJSONObject(java.lang.String,boolean) -> toJSONObject
    org.json.JSONObject toJSONObject(java.lang.String,org.json.XMLParserConfiguration) -> toJSONObject
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String,org.json.XMLParserConfiguration) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String,org.json.XMLParserConfiguration,int,int) -> toString
    java.lang.String toString(java.lang.Object,int) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String,int) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String,org.json.XMLParserConfiguration,int) -> toString
    java.lang.String indent(int) -> indent
    void <clinit>() -> <clinit>
org.json.XML$1 -> a.a.v$1:
    java.lang.String val$string -> a
    void <init>(java.lang.String) -> <init>
    java.util.Iterator iterator() -> iterator
org.json.XML$1$1 -> a.a.v$1$1:
    int nextIndex -> b
    int length -> c
    org.json.XML$1 this$0 -> a
    void <init>(org.json.XML$1) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Integer next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.json.XMLParserConfiguration -> a.a.w:
    org.json.XMLParserConfiguration ORIGINAL -> a
    org.json.XMLParserConfiguration KEEP_STRINGS -> b
    java.lang.String cDataTagName -> c
    boolean convertNilAttributeToNull -> h
    boolean closeEmptyTag -> i
    java.util.Map xsiTypeMap -> j
    java.util.Set forceList -> k
    boolean shouldTrimWhiteSpace -> l
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(boolean,java.lang.String) -> <init>
    void <init>(boolean,java.lang.String,boolean) -> <init>
    void <init>(boolean,java.lang.String,boolean,java.util.Map,java.util.Set,int,boolean) -> <init>
    org.json.XMLParserConfiguration clone() -> clone
    org.json.XMLParserConfiguration withKeepStrings(boolean) -> withKeepStrings
    java.lang.String getcDataTagName() -> getcDataTagName
    org.json.XMLParserConfiguration withcDataTagName(java.lang.String) -> withcDataTagName
    boolean isConvertNilAttributeToNull() -> isConvertNilAttributeToNull
    org.json.XMLParserConfiguration withConvertNilAttributeToNull(boolean) -> withConvertNilAttributeToNull
    java.util.Map getXsiTypeMap() -> getXsiTypeMap
    org.json.XMLParserConfiguration withXsiTypeMap(java.util.Map) -> withXsiTypeMap
    java.util.Set getForceList() -> getForceList
    org.json.XMLParserConfiguration withForceList(java.util.Set) -> withForceList
    org.json.XMLParserConfiguration withMaxNestingDepth(int) -> withMaxNestingDepth
    org.json.XMLParserConfiguration withCloseEmptyTag(boolean) -> withCloseEmptyTag
    org.json.XMLParserConfiguration withShouldTrimWhitespace(boolean) -> withShouldTrimWhitespace
    boolean isCloseEmptyTag() -> isCloseEmptyTag
    boolean shouldTrimWhiteSpace() -> shouldTrimWhiteSpace
    org.json.ParserConfiguration withMaxNestingDepth(int) -> withMaxNestingDepth
    org.json.ParserConfiguration withKeepStrings(boolean) -> withKeepStrings
    org.json.ParserConfiguration clone() -> clone
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
org.json.XMLTokener -> a.a.x:
    java.util.HashMap entity -> a
    org.json.XMLParserConfiguration configuration -> b
    void <init>(java.io.Reader) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.io.Reader,org.json.XMLParserConfiguration) -> <init>
    java.lang.String nextCDATA() -> nextCDATA
    java.lang.Object nextContent() -> nextContent
    java.lang.Object nextEntity(char) -> nextEntity
    java.lang.String unescapeEntity(java.lang.String) -> unescapeEntity
    java.lang.Object nextMeta() -> nextMeta
    java.lang.Object nextToken() -> nextToken
    void skipPast(java.lang.String) -> skipPast
    void <clinit>() -> <clinit>
org.json.XMLXsiTypeConverter -> a.a.y:
    java.lang.Object convert(java.lang.String) -> convert
