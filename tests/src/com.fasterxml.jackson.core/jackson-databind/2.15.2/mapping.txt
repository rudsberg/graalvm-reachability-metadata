com.fasterxml.jackson.annotation.JacksonAnnotation -> com.fasterxml.jackson.annotation.a:
# {"fileName":"JacksonAnnotation.java","id":"sourceFile"}
com.fasterxml.jackson.annotation.JacksonAnnotationValue -> com.fasterxml.jackson.annotation.b:
# {"fileName":"JacksonAnnotationValue.java","id":"sourceFile"}
    java.lang.Class valueFor() -> valueFor
com.fasterxml.jackson.annotation.JacksonAnnotationsInside -> com.fasterxml.jackson.annotation.c:
# {"fileName":"JacksonAnnotationsInside.java","id":"sourceFile"}
com.fasterxml.jackson.annotation.JacksonInject -> com.fasterxml.jackson.annotation.d:
# {"fileName":"JacksonInject.java","id":"sourceFile"}
    java.lang.String value() -> value
    com.fasterxml.jackson.annotation.OptBoolean useInput() -> useInput
com.fasterxml.jackson.annotation.JacksonInject$Value -> com.fasterxml.jackson.annotation.d$a:
# {"fileName":"JacksonInject.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.annotation.JacksonInject$Value EMPTY -> a
    java.lang.Object _id -> b
    java.lang.Boolean _useInput -> c
    76:79:void <init>(java.lang.Object,java.lang.Boolean) -> <init>
    83:83:java.lang.Class valueFor() -> valueFor
    93:93:com.fasterxml.jackson.annotation.JacksonInject$Value empty() -> empty
    97:103:com.fasterxml.jackson.annotation.JacksonInject$Value construct(java.lang.Object,java.lang.Boolean) -> construct
    107:110:com.fasterxml.jackson.annotation.JacksonInject$Value from(com.fasterxml.jackson.annotation.JacksonInject) -> from
    114:114:com.fasterxml.jackson.annotation.JacksonInject$Value forId(java.lang.Object) -> forId
    124:131:com.fasterxml.jackson.annotation.JacksonInject$Value withId(java.lang.Object) -> withId
    135:142:com.fasterxml.jackson.annotation.JacksonInject$Value withUseInput(java.lang.Boolean) -> withUseInput
    151:151:java.lang.Object getId() -> getId
    152:152:java.lang.Boolean getUseInput() -> getUseInput
    155:155:boolean hasId() -> hasId
    159:159:boolean willUseInput(boolean) -> willUseInput
    170:170:java.lang.String toString() -> toString
    176:183:int hashCode() -> hashCode
    188:199:boolean equals(java.lang.Object) -> equals
    209:209:boolean _empty(java.lang.Object,java.lang.Boolean) -> _empty
    66:66:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAlias -> com.fasterxml.jackson.annotation.e:
# {"fileName":"JsonAlias.java","id":"sourceFile"}
    java.lang.String[] value() -> value
com.fasterxml.jackson.annotation.JsonAnyGetter -> com.fasterxml.jackson.annotation.f:
# {"fileName":"JsonAnyGetter.java","id":"sourceFile"}
    boolean enabled() -> enabled
com.fasterxml.jackson.annotation.JsonAnySetter -> com.fasterxml.jackson.annotation.g:
# {"fileName":"JsonAnySetter.java","id":"sourceFile"}
    boolean enabled() -> enabled
com.fasterxml.jackson.annotation.JsonAutoDetect -> com.fasterxml.jackson.annotation.h:
# {"fileName":"JsonAutoDetect.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getterVisibility() -> getterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility isGetterVisibility() -> isGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility setterVisibility() -> setterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility creatorVisibility() -> creatorVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility fieldVisibility() -> fieldVisibility
com.fasterxml.jackson.annotation.JsonAutoDetect$1 -> com.fasterxml.jackson.annotation.h$1:
# {"fileName":"JsonAutoDetect.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility -> a
    int[] $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor -> b
    75:206:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAutoDetect$Value -> com.fasterxml.jackson.annotation.h$a:
# {"fileName":"JsonAutoDetect.java","id":"sourceFile"}
    long serialVersionUID -> h
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT_FIELD_VISIBILITY -> i
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value DEFAULT -> a
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value NO_OVERRIDES -> b
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldVisibility -> c
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterVisibility -> d
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterVisibility -> e
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterVisibility -> f
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorVisibility -> g
    172:178:void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    181:181:com.fasterxml.jackson.annotation.JsonAutoDetect$Value defaultVisibility() -> defaultVisibility
    185:185:com.fasterxml.jackson.annotation.JsonAutoDetect$Value noOverrides() -> noOverrides
    189:191:com.fasterxml.jackson.annotation.JsonAutoDetect$Value from(com.fasterxml.jackson.annotation.JsonAutoDetect) -> from
    201:228:com.fasterxml.jackson.annotation.JsonAutoDetect$Value construct(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> construct
    235:239:com.fasterxml.jackson.annotation.JsonAutoDetect$Value construct(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> construct
    243:243:com.fasterxml.jackson.annotation.JsonAutoDetect$Value withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    248:248:com.fasterxml.jackson.annotation.JsonAutoDetect$Value withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    253:253:com.fasterxml.jackson.annotation.JsonAutoDetect$Value withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    258:258:com.fasterxml.jackson.annotation.JsonAutoDetect$Value withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    263:263:com.fasterxml.jackson.annotation.JsonAutoDetect$Value withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    269:270:com.fasterxml.jackson.annotation.JsonAutoDetect$Value merge(com.fasterxml.jackson.annotation.JsonAutoDetect$Value,com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> merge
    274:300:com.fasterxml.jackson.annotation.JsonAutoDetect$Value withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    305:305:java.lang.Class valueFor() -> valueFor
    308:308:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getFieldVisibility() -> getFieldVisibility
    309:309:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getGetterVisibility() -> getGetterVisibility
    310:310:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getIsGetterVisibility() -> getIsGetterVisibility
    311:311:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getSetterVisibility() -> getSetterVisibility
    312:312:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getCreatorVisibility() -> getCreatorVisibility
    316:318:java.lang.Object readResolve() -> readResolve
    323:323:java.lang.String toString() -> toString
    331:335:int hashCode() -> hashCode
    341:343:boolean equals(java.lang.Object) -> equals
    350:365:com.fasterxml.jackson.annotation.JsonAutoDetect$Value _predefined(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> _predefined
    370:370:boolean _equals(com.fasterxml.jackson.annotation.JsonAutoDetect$Value,com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> _equals
    141:160:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility -> com.fasterxml.jackson.annotation.h$b:
# {"fileName":"JsonAutoDetect.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility ANY -> a
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NON_PRIVATE -> b
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> c
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PUBLIC_ONLY -> d
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NONE -> e
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT -> f
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $VALUES -> g
    38:38:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] values() -> values
    38:38:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    75:90:boolean isVisible(java.lang.reflect.Member) -> isVisible
    38:72:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonBackReference -> com.fasterxml.jackson.annotation.i:
# {"fileName":"JsonBackReference.java","id":"sourceFile"}
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonClassDescription -> com.fasterxml.jackson.annotation.j:
# {"fileName":"JsonClassDescription.java","id":"sourceFile"}
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonCreator -> com.fasterxml.jackson.annotation.k:
# {"fileName":"JsonCreator.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonCreator$Mode mode() -> mode
com.fasterxml.jackson.annotation.JsonCreator$Mode -> com.fasterxml.jackson.annotation.k$a:
# {"fileName":"JsonCreator.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonCreator$Mode DEFAULT -> a
    com.fasterxml.jackson.annotation.JsonCreator$Mode DELEGATING -> b
    com.fasterxml.jackson.annotation.JsonCreator$Mode PROPERTIES -> c
    com.fasterxml.jackson.annotation.JsonCreator$Mode DISABLED -> d
    com.fasterxml.jackson.annotation.JsonCreator$Mode[] $VALUES -> e
    67:67:com.fasterxml.jackson.annotation.JsonCreator$Mode[] values() -> values
    67:67:com.fasterxml.jackson.annotation.JsonCreator$Mode valueOf(java.lang.String) -> valueOf
    67:67:void <init>(java.lang.String,int) -> <init>
    67:97:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonEnumDefaultValue -> com.fasterxml.jackson.annotation.l:
# {"fileName":"JsonEnumDefaultValue.java","id":"sourceFile"}
com.fasterxml.jackson.annotation.JsonFilter -> com.fasterxml.jackson.annotation.m:
# {"fileName":"JsonFilter.java","id":"sourceFile"}
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonFormat -> com.fasterxml.jackson.annotation.n:
# {"fileName":"JsonFormat.java","id":"sourceFile"}
    java.lang.String DEFAULT_LOCALE -> a
    java.lang.String DEFAULT_TIMEZONE -> b
    java.lang.String pattern() -> pattern
    com.fasterxml.jackson.annotation.JsonFormat$Shape shape() -> shape
    java.lang.String locale() -> locale
    java.lang.String timezone() -> timezone
    com.fasterxml.jackson.annotation.OptBoolean lenient() -> lenient
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] with() -> with
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] without() -> without
com.fasterxml.jackson.annotation.JsonFormat$Feature -> com.fasterxml.jackson.annotation.n$a:
# {"fileName":"JsonFormat.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY -> a
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_PROPERTIES -> b
    com.fasterxml.jackson.annotation.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_AS_NULL -> c
    com.fasterxml.jackson.annotation.JsonFormat$Feature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE -> d
    com.fasterxml.jackson.annotation.JsonFormat$Feature READ_DATE_TIMESTAMPS_AS_NANOSECONDS -> e
    com.fasterxml.jackson.annotation.JsonFormat$Feature ACCEPT_CASE_INSENSITIVE_VALUES -> f
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS -> g
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_DATES_WITH_ZONE_ID -> h
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> i
    com.fasterxml.jackson.annotation.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES -> j
    com.fasterxml.jackson.annotation.JsonFormat$Feature ADJUST_DATES_TO_CONTEXT_TIME_ZONE -> k
    com.fasterxml.jackson.annotation.JsonFormat$Feature[] $VALUES -> l
    245:245:com.fasterxml.jackson.annotation.JsonFormat$Feature[] values() -> values
    245:245:com.fasterxml.jackson.annotation.JsonFormat$Feature valueOf(java.lang.String) -> valueOf
    245:245:void <init>(java.lang.String,int) -> <init>
    245:339:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Features -> com.fasterxml.jackson.annotation.n$b:
# {"fileName":"JsonFormat.java","id":"sourceFile"}
    int _enabled -> a
    int _disabled -> b
    com.fasterxml.jackson.annotation.JsonFormat$Features EMPTY -> c
    354:357:void <init>(int,int) -> <init>
    360:360:com.fasterxml.jackson.annotation.JsonFormat$Features empty() -> empty
    364:364:com.fasterxml.jackson.annotation.JsonFormat$Features construct(com.fasterxml.jackson.annotation.JsonFormat) -> construct
    369:377:com.fasterxml.jackson.annotation.JsonFormat$Features construct(com.fasterxml.jackson.annotation.JsonFormat$Feature[],com.fasterxml.jackson.annotation.JsonFormat$Feature[]) -> construct
    382:402:com.fasterxml.jackson.annotation.JsonFormat$Features withOverrides(com.fasterxml.jackson.annotation.JsonFormat$Features) -> withOverrides
    406:410:com.fasterxml.jackson.annotation.JsonFormat$Features with(com.fasterxml.jackson.annotation.JsonFormat$Feature[]) -> with
    414:418:com.fasterxml.jackson.annotation.JsonFormat$Features without(com.fasterxml.jackson.annotation.JsonFormat$Feature[]) -> without
    422:429:java.lang.Boolean get(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> get
    434:437:java.lang.String toString() -> toString
    442:442:int hashCode() -> hashCode
    447:451:boolean equals(java.lang.Object) -> equals
    352:352:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Shape -> com.fasterxml.jackson.annotation.n$c:
# {"fileName":"JsonFormat.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonFormat$Shape ANY -> a
    com.fasterxml.jackson.annotation.JsonFormat$Shape NATURAL -> b
    com.fasterxml.jackson.annotation.JsonFormat$Shape SCALAR -> c
    com.fasterxml.jackson.annotation.JsonFormat$Shape ARRAY -> d
    com.fasterxml.jackson.annotation.JsonFormat$Shape OBJECT -> e
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER -> f
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_FLOAT -> g
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_INT -> h
    com.fasterxml.jackson.annotation.JsonFormat$Shape STRING -> i
    com.fasterxml.jackson.annotation.JsonFormat$Shape BOOLEAN -> j
    com.fasterxml.jackson.annotation.JsonFormat$Shape BINARY -> k
    com.fasterxml.jackson.annotation.JsonFormat$Shape[] $VALUES -> l
    148:148:com.fasterxml.jackson.annotation.JsonFormat$Shape[] values() -> values
    148:148:com.fasterxml.jackson.annotation.JsonFormat$Shape valueOf(java.lang.String) -> valueOf
    148:148:void <init>(java.lang.String,int) -> <init>
    224:224:boolean isNumeric() -> isNumeric
    228:228:boolean isStructured() -> isStructured
    148:220:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonFormat$Value -> com.fasterxml.jackson.annotation.n$d:
# {"fileName":"JsonFormat.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY -> b
    java.lang.String _pattern -> c
    com.fasterxml.jackson.annotation.JsonFormat$Shape _shape -> d
    java.util.Locale _locale -> e
    java.lang.String _timezoneStr -> f
    java.lang.Boolean _lenient -> g
    com.fasterxml.jackson.annotation.JsonFormat$Features _features -> h
    java.util.TimeZone _timezone -> i
    487:488:void <init>() -> <init>
    491:493:void <init>(com.fasterxml.jackson.annotation.JsonFormat) -> <init>
    501:507:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    514:522:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    529:537:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features,java.lang.Boolean) -> <init>
    541:542:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features) -> <init>
    546:547:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Features) -> <init>
    550:551:void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat$Features) -> <init>
    557:557:com.fasterxml.jackson.annotation.JsonFormat$Value empty() -> empty
    573:574:com.fasterxml.jackson.annotation.JsonFormat$Value merge(com.fasterxml.jackson.annotation.JsonFormat$Value,com.fasterxml.jackson.annotation.JsonFormat$Value) -> merge
    582:588:com.fasterxml.jackson.annotation.JsonFormat$Value mergeAll(com.fasterxml.jackson.annotation.JsonFormat$Value[]) -> mergeAll
    595:595:com.fasterxml.jackson.annotation.JsonFormat$Value from(com.fasterxml.jackson.annotation.JsonFormat) -> from
    602:641:com.fasterxml.jackson.annotation.JsonFormat$Value withOverrides(com.fasterxml.jackson.annotation.JsonFormat$Value) -> withOverrides
    648:648:com.fasterxml.jackson.annotation.JsonFormat$Value forPattern(java.lang.String) -> forPattern
    655:655:com.fasterxml.jackson.annotation.JsonFormat$Value forShape(com.fasterxml.jackson.annotation.JsonFormat$Shape) -> forShape
    662:663:com.fasterxml.jackson.annotation.JsonFormat$Value forLeniency(boolean) -> forLeniency
    670:670:com.fasterxml.jackson.annotation.JsonFormat$Value withPattern(java.lang.String) -> withPattern
    678:681:com.fasterxml.jackson.annotation.JsonFormat$Value withShape(com.fasterxml.jackson.annotation.JsonFormat$Shape) -> withShape
    689:689:com.fasterxml.jackson.annotation.JsonFormat$Value withLocale(java.util.Locale) -> withLocale
    697:697:com.fasterxml.jackson.annotation.JsonFormat$Value withTimeZone(java.util.TimeZone) -> withTimeZone
    705:708:com.fasterxml.jackson.annotation.JsonFormat$Value withLenient(java.lang.Boolean) -> withLenient
    716:717:com.fasterxml.jackson.annotation.JsonFormat$Value withFeature(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> withFeature
    726:727:com.fasterxml.jackson.annotation.JsonFormat$Value withoutFeature(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> withoutFeature
    734:734:java.lang.Class valueFor() -> valueFor
    737:737:java.lang.String getPattern() -> getPattern
    738:738:com.fasterxml.jackson.annotation.JsonFormat$Shape getShape() -> getShape
    739:739:java.util.Locale getLocale() -> getLocale
    749:749:java.lang.Boolean getLenient() -> getLenient
    763:763:boolean isLenient() -> isLenient
    774:777:java.lang.String timeZoneAsString() -> timeZoneAsString
    781:789:java.util.TimeZone getTimeZone() -> getTimeZone
    795:795:boolean hasShape() -> hasShape
    801:801:boolean hasPattern() -> hasPattern
    807:807:boolean hasLocale() -> hasLocale
    813:813:boolean hasTimeZone() -> hasTimeZone
    824:824:boolean hasLenient() -> hasLenient
    837:837:java.lang.Boolean getFeature(com.fasterxml.jackson.annotation.JsonFormat$Feature) -> getFeature
    846:846:com.fasterxml.jackson.annotation.JsonFormat$Features getFeatures() -> getFeatures
    851:851:java.lang.String toString() -> toString
    857:869:int hashCode() -> hashCode
    874:887:boolean equals(java.lang.Object) -> equals
    892:898:boolean _equal(java.lang.Object,java.lang.Object) -> _equal
    465:465:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonGetter -> com.fasterxml.jackson.annotation.o:
# {"fileName":"JsonGetter.java","id":"sourceFile"}
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonIdentityInfo -> com.fasterxml.jackson.annotation.p:
# {"fileName":"JsonIdentityInfo.java","id":"sourceFile"}
    java.lang.String property() -> property
    java.lang.Class generator() -> generator
    java.lang.Class resolver() -> resolver
    java.lang.Class scope() -> scope
com.fasterxml.jackson.annotation.JsonIdentityReference -> com.fasterxml.jackson.annotation.q:
# {"fileName":"JsonIdentityReference.java","id":"sourceFile"}
    boolean alwaysAsId() -> alwaysAsId
com.fasterxml.jackson.annotation.JsonIgnore -> com.fasterxml.jackson.annotation.r:
# {"fileName":"JsonIgnore.java","id":"sourceFile"}
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonIgnoreProperties -> com.fasterxml.jackson.annotation.s:
# {"fileName":"JsonIgnoreProperties.java","id":"sourceFile"}
    java.lang.String[] value() -> value
    boolean ignoreUnknown() -> ignoreUnknown
    boolean allowGetters() -> allowGetters
    boolean allowSetters() -> allowSetters
com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value -> com.fasterxml.jackson.annotation.s$a:
# {"fileName":"JsonIgnoreProperties.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value EMPTY -> a
    java.util.Set _ignored -> b
    boolean _ignoreUnknown -> c
    boolean _allowGetters -> d
    boolean _allowSetters -> e
    boolean _merge -> f
    135:145:void <init>(java.util.Set,boolean,boolean,boolean,boolean) -> <init>
    148:152:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value from(com.fasterxml.jackson.annotation.JsonIgnoreProperties) -> from
    169:172:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value construct(java.util.Set,boolean,boolean,boolean,boolean) -> construct
    192:192:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value empty() -> empty
    206:207:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value merge(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> merge
    215:221:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value mergeAll(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value[]) -> mergeAll
    225:225:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value forIgnoredProperties(java.util.Set) -> forIgnoredProperties
    229:232:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value forIgnoredProperties(java.lang.String[]) -> forIgnoredProperties
    236:237:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value forIgnoreUnknown(boolean) -> forIgnoreUnknown
    247:266:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withOverrides(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> withOverrides
    270:270:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withIgnored(java.util.Set) -> withIgnored
    274:274:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withIgnored(java.lang.String[]) -> withIgnored
    278:278:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutIgnored() -> withoutIgnored
    282:283:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withIgnoreUnknown() -> withIgnoreUnknown
    286:287:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutIgnoreUnknown() -> withoutIgnoreUnknown
    291:292:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withAllowGetters() -> withAllowGetters
    295:296:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutAllowGetters() -> withoutAllowGetters
    300:301:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withAllowSetters() -> withAllowSetters
    304:305:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutAllowSetters() -> withoutAllowSetters
    309:310:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withMerge() -> withMerge
    314:315:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value withoutMerge() -> withoutMerge
    320:320:java.lang.Class valueFor() -> valueFor
    325:328:java.lang.Object readResolve() -> readResolve
    332:332:java.util.Set getIgnored() -> getIgnored
    343:346:java.util.Set findIgnoredForSerialization() -> findIgnoredForSerialization
    357:360:java.util.Set findIgnoredForDeserialization() -> findIgnoredForDeserialization
    364:364:boolean getIgnoreUnknown() -> getIgnoreUnknown
    368:368:boolean getAllowGetters() -> getAllowGetters
    372:372:boolean getAllowSetters() -> getAllowSetters
    376:376:boolean getMerge() -> getMerge
    381:382:java.lang.String toString() -> toString
    387:387:int hashCode() -> hashCode
    397:400:boolean equals(java.lang.Object) -> equals
    405:410:boolean _equals(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> _equals
    415:422:java.util.Set _asSet(java.lang.String[]) -> _asSet
    427:435:java.util.Set _merge(java.util.Set,java.util.Set) -> _merge
    441:447:boolean _empty(java.util.Set,boolean,boolean,boolean,boolean) -> _empty
    118:118:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonIgnoreType -> com.fasterxml.jackson.annotation.t:
# {"fileName":"JsonIgnoreType.java","id":"sourceFile"}
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonInclude -> com.fasterxml.jackson.annotation.u:
# {"fileName":"JsonInclude.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonInclude$Include value() -> value
    com.fasterxml.jackson.annotation.JsonInclude$Include content() -> content
    java.lang.Class valueFilter() -> valueFilter
    java.lang.Class contentFilter() -> contentFilter
com.fasterxml.jackson.annotation.JsonInclude$Include -> com.fasterxml.jackson.annotation.u$a:
# {"fileName":"JsonInclude.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonInclude$Include ALWAYS -> a
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_NULL -> b
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_ABSENT -> c
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_EMPTY -> d
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_DEFAULT -> e
    com.fasterxml.jackson.annotation.JsonInclude$Include CUSTOM -> f
    com.fasterxml.jackson.annotation.JsonInclude$Include USE_DEFAULTS -> g
    com.fasterxml.jackson.annotation.JsonInclude$Include[] $VALUES -> h
    113:113:com.fasterxml.jackson.annotation.JsonInclude$Include[] values() -> values
    113:113:com.fasterxml.jackson.annotation.JsonInclude$Include valueOf(java.lang.String) -> valueOf
    113:113:void <init>(java.lang.String,int) -> <init>
    113:239:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonInclude$Value -> com.fasterxml.jackson.annotation.u$b:
# {"fileName":"JsonInclude.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY -> a
    com.fasterxml.jackson.annotation.JsonInclude$Include _valueInclusion -> b
    com.fasterxml.jackson.annotation.JsonInclude$Include _contentInclusion -> c
    java.lang.Class _valueFilter -> d
    java.lang.Class _contentFilter -> e
    278:280:void <init>(com.fasterxml.jackson.annotation.JsonInclude) -> <init>
    283:288:void <init>(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include,java.lang.Class,java.lang.Class) -> <init>
    291:291:com.fasterxml.jackson.annotation.JsonInclude$Value empty() -> empty
    307:308:com.fasterxml.jackson.annotation.JsonInclude$Value merge(com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonInclude$Value) -> merge
    316:322:com.fasterxml.jackson.annotation.JsonInclude$Value mergeAll(com.fasterxml.jackson.annotation.JsonInclude$Value[]) -> mergeAll
    327:334:java.lang.Object readResolve() -> readResolve
    344:366:com.fasterxml.jackson.annotation.JsonInclude$Value withOverrides(com.fasterxml.jackson.annotation.JsonInclude$Value) -> withOverrides
    373:377:com.fasterxml.jackson.annotation.JsonInclude$Value construct(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include) -> construct
    388:401:com.fasterxml.jackson.annotation.JsonInclude$Value construct(com.fasterxml.jackson.annotation.JsonInclude$Include,com.fasterxml.jackson.annotation.JsonInclude$Include,java.lang.Class,java.lang.Class) -> construct
    409:426:com.fasterxml.jackson.annotation.JsonInclude$Value from(com.fasterxml.jackson.annotation.JsonInclude) -> from
    430:430:com.fasterxml.jackson.annotation.JsonInclude$Value withValueInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> withValueInclusion
    448:454:com.fasterxml.jackson.annotation.JsonInclude$Value withValueFilter(java.lang.Class) -> withValueFilter
    471:477:com.fasterxml.jackson.annotation.JsonInclude$Value withContentFilter(java.lang.Class) -> withContentFilter
    481:481:com.fasterxml.jackson.annotation.JsonInclude$Value withContentInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> withContentInclusion
    487:487:java.lang.Class valueFor() -> valueFor
    491:491:com.fasterxml.jackson.annotation.JsonInclude$Include getValueInclusion() -> getValueInclusion
    495:495:com.fasterxml.jackson.annotation.JsonInclude$Include getContentInclusion() -> getContentInclusion
    499:499:java.lang.Class getValueFilter() -> getValueFilter
    503:503:java.lang.Class getContentFilter() -> getContentFilter
    508:519:java.lang.String toString() -> toString
    524:525:int hashCode() -> hashCode
    530:535:boolean equals(java.lang.Object) -> equals
    261:261:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonIncludeProperties -> com.fasterxml.jackson.annotation.v:
# {"fileName":"JsonIncludeProperties.java","id":"sourceFile"}
    java.lang.String[] value() -> value
com.fasterxml.jackson.annotation.JsonIncludeProperties$Value -> com.fasterxml.jackson.annotation.v$a:
# {"fileName":"JsonIncludeProperties.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value ALL -> a
    java.util.Set _included -> b
    66:68:void <init>(java.util.Set) -> <init>
    72:75:com.fasterxml.jackson.annotation.JsonIncludeProperties$Value from(com.fasterxml.jackson.annotation.JsonIncludeProperties) -> from
    80:80:com.fasterxml.jackson.annotation.JsonIncludeProperties$Value all() -> all
    86:86:java.lang.Class valueFor() -> valueFor
    94:94:java.util.Set getIncluded() -> getIncluded
    109:124:com.fasterxml.jackson.annotation.JsonIncludeProperties$Value withOverrides(com.fasterxml.jackson.annotation.JsonIncludeProperties$Value) -> withOverrides
    129:129:java.lang.String toString() -> toString
    135:135:int hashCode() -> hashCode
    140:142:boolean equals(java.lang.Object) -> equals
    147:149:boolean _equals(java.util.Set,java.util.Set) -> _equals
    154:161:java.util.Set _asSet(java.lang.String[]) -> _asSet
    57:57:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonKey -> com.fasterxml.jackson.annotation.w:
# {"fileName":"JsonKey.java","id":"sourceFile"}
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonManagedReference -> com.fasterxml.jackson.annotation.x:
# {"fileName":"JsonManagedReference.java","id":"sourceFile"}
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonMerge -> com.fasterxml.jackson.annotation.y:
# {"fileName":"JsonMerge.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.OptBoolean value() -> value
com.fasterxml.jackson.annotation.JsonProperty -> com.fasterxml.jackson.annotation.z:
# {"fileName":"JsonProperty.java","id":"sourceFile"}
    java.lang.String USE_DEFAULT_NAME -> a
    int INDEX_UNKNOWN -> b
    java.lang.String value() -> value
    java.lang.String namespace() -> namespace
    boolean required() -> required
    int index() -> index
    java.lang.String defaultValue() -> defaultValue
    com.fasterxml.jackson.annotation.JsonProperty$Access access() -> access
com.fasterxml.jackson.annotation.JsonProperty$Access -> com.fasterxml.jackson.annotation.z$a:
# {"fileName":"JsonProperty.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonProperty$Access AUTO -> a
    com.fasterxml.jackson.annotation.JsonProperty$Access READ_ONLY -> b
    com.fasterxml.jackson.annotation.JsonProperty$Access WRITE_ONLY -> c
    com.fasterxml.jackson.annotation.JsonProperty$Access READ_WRITE -> d
    com.fasterxml.jackson.annotation.JsonProperty$Access[] $VALUES -> e
    166:166:com.fasterxml.jackson.annotation.JsonProperty$Access[] values() -> values
    166:166:com.fasterxml.jackson.annotation.JsonProperty$Access valueOf(java.lang.String) -> valueOf
    166:166:void <init>(java.lang.String,int) -> <init>
    166:198:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonPropertyDescription -> com.fasterxml.jackson.annotation.aa:
# {"fileName":"JsonPropertyDescription.java","id":"sourceFile"}
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonPropertyOrder -> com.fasterxml.jackson.annotation.ab:
# {"fileName":"JsonPropertyOrder.java","id":"sourceFile"}
    java.lang.String[] value() -> value
    boolean alphabetic() -> alphabetic
com.fasterxml.jackson.annotation.JsonRawValue -> com.fasterxml.jackson.annotation.ac:
# {"fileName":"JsonRawValue.java","id":"sourceFile"}
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonRootName -> com.fasterxml.jackson.annotation.ad:
# {"fileName":"JsonRootName.java","id":"sourceFile"}
    java.lang.String value() -> value
    java.lang.String namespace() -> namespace
com.fasterxml.jackson.annotation.JsonSetter -> com.fasterxml.jackson.annotation.ae:
# {"fileName":"JsonSetter.java","id":"sourceFile"}
    java.lang.String value() -> value
    com.fasterxml.jackson.annotation.Nulls nulls() -> nulls
    com.fasterxml.jackson.annotation.Nulls contentNulls() -> contentNulls
com.fasterxml.jackson.annotation.JsonSetter$Value -> com.fasterxml.jackson.annotation.ae$a:
# {"fileName":"JsonSetter.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.annotation.Nulls _nulls -> c
    com.fasterxml.jackson.annotation.Nulls _contentNulls -> d
    com.fasterxml.jackson.annotation.JsonSetter$Value EMPTY -> a
    77:80:void <init>(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> <init>
    84:84:java.lang.Class valueFor() -> valueFor
    89:92:java.lang.Object readResolve() -> readResolve
    96:99:com.fasterxml.jackson.annotation.JsonSetter$Value from(com.fasterxml.jackson.annotation.JsonSetter) -> from
    110:119:com.fasterxml.jackson.annotation.JsonSetter$Value construct(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> construct
    130:130:com.fasterxml.jackson.annotation.JsonSetter$Value empty() -> empty
    144:145:com.fasterxml.jackson.annotation.JsonSetter$Value merge(com.fasterxml.jackson.annotation.JsonSetter$Value,com.fasterxml.jackson.annotation.JsonSetter$Value) -> merge
    149:149:com.fasterxml.jackson.annotation.JsonSetter$Value forValueNulls(com.fasterxml.jackson.annotation.Nulls) -> forValueNulls
    153:153:com.fasterxml.jackson.annotation.JsonSetter$Value forValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> forValueNulls
    157:157:com.fasterxml.jackson.annotation.JsonSetter$Value forContentNulls(com.fasterxml.jackson.annotation.Nulls) -> forContentNulls
    167:183:com.fasterxml.jackson.annotation.JsonSetter$Value withOverrides(com.fasterxml.jackson.annotation.JsonSetter$Value) -> withOverrides
    187:193:com.fasterxml.jackson.annotation.JsonSetter$Value withValueNulls(com.fasterxml.jackson.annotation.Nulls) -> withValueNulls
    197:206:com.fasterxml.jackson.annotation.JsonSetter$Value withValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> withValueNulls
    210:216:com.fasterxml.jackson.annotation.JsonSetter$Value withContentNulls(com.fasterxml.jackson.annotation.Nulls) -> withContentNulls
    219:219:com.fasterxml.jackson.annotation.Nulls getValueNulls() -> getValueNulls
    220:220:com.fasterxml.jackson.annotation.Nulls getContentNulls() -> getContentNulls
    227:227:com.fasterxml.jackson.annotation.Nulls nonDefaultValueNulls() -> nonDefaultValueNulls
    235:235:com.fasterxml.jackson.annotation.Nulls nonDefaultContentNulls() -> nonDefaultContentNulls
    246:246:java.lang.String toString() -> toString
    252:252:int hashCode() -> hashCode
    257:264:boolean equals(java.lang.Object) -> equals
    274:274:boolean _empty(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> _empty
    75:75:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonSubTypes -> com.fasterxml.jackson.annotation.af:
# {"fileName":"JsonSubTypes.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonSubTypes$Type[] value() -> value
    boolean failOnRepeatedNames() -> failOnRepeatedNames
com.fasterxml.jackson.annotation.JsonSubTypes$Type -> com.fasterxml.jackson.annotation.af$a:
# {"fileName":"JsonSubTypes.java","id":"sourceFile"}
    java.lang.Class value() -> value
    java.lang.String name() -> name
    java.lang.String[] names() -> names
com.fasterxml.jackson.annotation.JsonTypeId -> com.fasterxml.jackson.annotation.ag:
# {"fileName":"JsonTypeId.java","id":"sourceFile"}
com.fasterxml.jackson.annotation.JsonTypeInfo -> com.fasterxml.jackson.annotation.ah:
# {"fileName":"JsonTypeInfo.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id use() -> use
    com.fasterxml.jackson.annotation.JsonTypeInfo$As include() -> include
    java.lang.String property() -> property
    java.lang.Class defaultImpl() -> defaultImpl
    boolean visible() -> visible
com.fasterxml.jackson.annotation.JsonTypeInfo$As -> com.fasterxml.jackson.annotation.ah$a:
# {"fileName":"JsonTypeInfo.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_OBJECT -> b
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_ARRAY -> c
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXTERNAL_PROPERTY -> d
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXISTING_PROPERTY -> e
    com.fasterxml.jackson.annotation.JsonTypeInfo$As[] $VALUES -> f
    156:156:com.fasterxml.jackson.annotation.JsonTypeInfo$As[] values() -> values
    156:156:com.fasterxml.jackson.annotation.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
    156:156:void <init>(java.lang.String,int) -> <init>
    156:218:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonTypeInfo$Id -> com.fasterxml.jackson.annotation.ah$b:
# {"fileName":"JsonTypeInfo.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NONE -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CLASS -> b
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id MINIMAL_CLASS -> c
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NAME -> d
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id DEDUCTION -> e
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CUSTOM -> f
    java.lang.String _defaultPropertyName -> g
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] $VALUES -> h
    78:78:com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] values() -> values
    78:78:com.fasterxml.jackson.annotation.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    144:146:void <init>(java.lang.String,int,java.lang.String) -> <init>
    148:148:java.lang.String getDefaultPropertyName() -> getDefaultPropertyName
    78:139:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.JsonTypeInfo$None -> com.fasterxml.jackson.annotation.ah$c:
# {"fileName":"JsonTypeInfo.java","id":"sourceFile"}
    333:333:void <init>() -> <init>
com.fasterxml.jackson.annotation.JsonTypeName -> com.fasterxml.jackson.annotation.ai:
# {"fileName":"JsonTypeName.java","id":"sourceFile"}
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonUnwrapped -> com.fasterxml.jackson.annotation.aj:
# {"fileName":"JsonUnwrapped.java","id":"sourceFile"}
    boolean enabled() -> enabled
    java.lang.String prefix() -> prefix
    java.lang.String suffix() -> suffix
com.fasterxml.jackson.annotation.JsonValue -> com.fasterxml.jackson.annotation.ak:
# {"fileName":"JsonValue.java","id":"sourceFile"}
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonView -> com.fasterxml.jackson.annotation.al:
# {"fileName":"JsonView.java","id":"sourceFile"}
    java.lang.Class[] value() -> value
com.fasterxml.jackson.annotation.Nulls -> com.fasterxml.jackson.annotation.am:
# {"fileName":"Nulls.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.Nulls SET -> a
    com.fasterxml.jackson.annotation.Nulls SKIP -> b
    com.fasterxml.jackson.annotation.Nulls FAIL -> c
    com.fasterxml.jackson.annotation.Nulls AS_EMPTY -> d
    com.fasterxml.jackson.annotation.Nulls DEFAULT -> e
    com.fasterxml.jackson.annotation.Nulls[] $VALUES -> f
    9:9:com.fasterxml.jackson.annotation.Nulls[] values() -> values
    9:9:com.fasterxml.jackson.annotation.Nulls valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    9:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.ObjectIdGenerator -> com.fasterxml.jackson.annotation.an:
# {"fileName":"ObjectIdGenerator.java","id":"sourceFile"}
    12:12:void <init>() -> <init>
    java.lang.Class getScope() -> getScope
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    49:49:boolean maySerializeAsObject() -> maySerializeAsObject
    64:64:boolean isValidReferencePropertyName(java.lang.String,java.lang.Object) -> isValidReferencePropertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey -> com.fasterxml.jackson.annotation.an$a:
# {"fileName":"ObjectIdGenerator.java","id":"sourceFile"}
    long serialVersionUID -> d
    java.lang.Class type -> a
    java.lang.Class scope -> b
    java.lang.Object key -> c
    int hashCode -> e
    150:163:void <init>(java.lang.Class,java.lang.Class,java.lang.Object) -> <init>
    166:166:int hashCode() -> hashCode
    171:175:boolean equals(java.lang.Object) -> equals
    180:182:java.lang.String toString() -> toString
com.fasterxml.jackson.annotation.ObjectIdGenerators -> com.fasterxml.jackson.annotation.ao:
# {"fileName":"ObjectIdGenerators.java","id":"sourceFile"}
    21:21:void <init>() -> <init>
com.fasterxml.jackson.annotation.ObjectIdGenerators$Base -> com.fasterxml.jackson.annotation.ao$a:
# {"fileName":"ObjectIdGenerators.java","id":"sourceFile"}
    java.lang.Class _scope -> a
    31:33:void <init>(java.lang.Class) -> <init>
    37:37:java.lang.Class getScope() -> getScope
    42:42:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator -> com.fasterxml.jackson.annotation.ao$b:
# {"fileName":"ObjectIdGenerators.java","id":"sourceFile"}
    long serialVersionUID -> c
    int _nextValue -> b
    88:88:void <init>() -> <init>
    90:92:void <init>(java.lang.Class,int) -> <init>
    94:94:int initialValue() -> initialValue
    98:98:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    103:103:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    109:112:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    118:123:java.lang.Integer generateId(java.lang.Object) -> generateId
    82:82:java.lang.Object generateId(java.lang.Object) -> generateId
    82:82:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
com.fasterxml.jackson.annotation.ObjectIdGenerators$None -> com.fasterxml.jackson.annotation.ao$c:
# {"fileName":"ObjectIdGenerators.java","id":"sourceFile"}
    61:61:void <init>() -> <init>
com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator -> com.fasterxml.jackson.annotation.ao$d:
# {"fileName":"ObjectIdGenerators.java","id":"sourceFile"}
    long serialVersionUID -> b
    75:75:void <init>(java.lang.Class) -> <init>
    72:72:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
com.fasterxml.jackson.annotation.ObjectIdGenerators$StringIdGenerator -> com.fasterxml.jackson.annotation.ao$e:
# {"fileName":"ObjectIdGenerators.java","id":"sourceFile"}
    long serialVersionUID -> b
    201:201:void <init>() -> <init>
    203:204:void <init>(java.lang.Class) -> <init>
    209:209:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    215:215:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    220:220:java.lang.String generateId(java.lang.Object) -> generateId
    225:228:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    234:234:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    197:197:java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerators$UUIDGenerator -> com.fasterxml.jackson.annotation.ao$f:
# {"fileName":"ObjectIdGenerators.java","id":"sourceFile"}
    long serialVersionUID -> b
    140:140:void <init>() -> <init>
    142:143:void <init>(java.lang.Class) -> <init>
    150:150:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    158:158:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    163:163:java.util.UUID generateId(java.lang.Object) -> generateId
    169:172:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    180:180:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    136:136:java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdResolver -> com.fasterxml.jackson.annotation.ap:
# {"fileName":"ObjectIdResolver.java","id":"sourceFile"}
    void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object) -> bindItem
    java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> resolveId
    com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object) -> newForDeserialization
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver) -> canUseFor
com.fasterxml.jackson.annotation.OptBoolean -> com.fasterxml.jackson.annotation.aq:
# {"fileName":"OptBoolean.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.OptBoolean TRUE -> a
    com.fasterxml.jackson.annotation.OptBoolean FALSE -> b
    com.fasterxml.jackson.annotation.OptBoolean DEFAULT -> c
    com.fasterxml.jackson.annotation.OptBoolean[] $VALUES -> d
    17:17:com.fasterxml.jackson.annotation.OptBoolean[] values() -> values
    17:17:com.fasterxml.jackson.annotation.OptBoolean valueOf(java.lang.String) -> valueOf
    17:17:void <init>(java.lang.String,int) -> <init>
    40:41:java.lang.Boolean asBoolean() -> asBoolean
    45:45:boolean asPrimitive() -> asPrimitive
    49:52:com.fasterxml.jackson.annotation.OptBoolean fromBoolean(java.lang.Boolean) -> fromBoolean
    56:59:boolean equals(java.lang.Boolean,java.lang.Boolean) -> equals
    17:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.PropertyAccessor -> com.fasterxml.jackson.annotation.ar:
# {"fileName":"PropertyAccessor.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.PropertyAccessor GETTER -> a
    com.fasterxml.jackson.annotation.PropertyAccessor SETTER -> b
    com.fasterxml.jackson.annotation.PropertyAccessor CREATOR -> c
    com.fasterxml.jackson.annotation.PropertyAccessor FIELD -> d
    com.fasterxml.jackson.annotation.PropertyAccessor IS_GETTER -> e
    com.fasterxml.jackson.annotation.PropertyAccessor NONE -> f
    com.fasterxml.jackson.annotation.PropertyAccessor ALL -> g
    com.fasterxml.jackson.annotation.PropertyAccessor[] $VALUES -> h
    13:13:com.fasterxml.jackson.annotation.PropertyAccessor[] values() -> values
    13:13:com.fasterxml.jackson.annotation.PropertyAccessor valueOf(java.lang.String) -> valueOf
    66:66:void <init>(java.lang.String,int) -> <init>
    69:69:boolean creatorEnabled() -> creatorEnabled
    73:73:boolean getterEnabled() -> getterEnabled
    77:77:boolean isGetterEnabled() -> isGetterEnabled
    81:81:boolean setterEnabled() -> setterEnabled
    85:85:boolean fieldEnabled() -> fieldEnabled
    13:63:void <clinit>() -> <clinit>
com.fasterxml.jackson.annotation.SimpleObjectIdResolver -> com.fasterxml.jackson.annotation.as:
# {"fileName":"SimpleObjectIdResolver.java","id":"sourceFile"}
    java.util.Map _items -> a
    16:16:void <init>() -> <init>
    21:35:void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object) -> bindItem
    39:39:java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> resolveId
    44:44:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver) -> canUseFor
    51:51:com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object) -> newForDeserialization
com.fasterxml.jackson.annotation.package-info -> com.fasterxml.jackson.annotation.at:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.Base64Variant -> com.fasterxml.jackson.core.a:
# {"fileName":"Base64Variant.java","id":"sourceFile"}
    int INT_SPACE -> e
    long serialVersionUID -> f
    char PADDING_CHAR_NONE -> a
    int BASE64_VALUE_INVALID -> b
    int BASE64_VALUE_PADDING -> c
    int[] _asciiToBase64 -> g
    char[] _base64ToAsciiC -> h
    byte[] _base64ToAsciiB -> i
    java.lang.String _name -> d
    char _paddingChar -> j
    int _maxLineLength -> k
    boolean _writePadding -> l
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour _paddingReadBehaviour -> m
    82:181:void <init>(java.lang.String,java.lang.String,boolean,char,int) -> <init>
    196:197:void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int) -> <init>
    214:215:void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int) -> <init>
    82:232:void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour,int) -> <init>
    235:236:void <init>(com.fasterxml.jackson.core.Base64Variant,com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour) -> <init>
    244:244:com.fasterxml.jackson.core.Base64Variant withPaddingAllowed() -> withPaddingAllowed
    252:252:com.fasterxml.jackson.core.Base64Variant withPaddingRequired() -> withPaddingRequired
    260:260:com.fasterxml.jackson.core.Base64Variant withPaddingForbidden() -> withPaddingForbidden
    272:272:com.fasterxml.jackson.core.Base64Variant withReadPadding(com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour) -> withReadPadding
    284:284:com.fasterxml.jackson.core.Base64Variant withWritePadding(boolean) -> withWritePadding
    299:309:java.lang.Object readResolve() -> readResolve
    318:318:java.lang.String getName() -> getName
    324:324:boolean usesPadding() -> usesPadding
    332:332:boolean requiresPaddingOnRead() -> requiresPaddingOnRead
    341:341:boolean acceptsPaddingOnRead() -> acceptsPaddingOnRead
    344:344:boolean usesPaddingChar(char) -> usesPaddingChar
    345:345:boolean usesPaddingChar(int) -> usesPaddingChar
    353:353:com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour paddingReadBehaviour() -> paddingReadBehaviour
    355:355:char getPaddingChar() -> getPaddingChar
    356:356:byte getPaddingByte() -> getPaddingByte
    358:358:int getMaxLineLength() -> getMaxLineLength
    373:374:int decodeBase64Char(char) -> decodeBase64Char
    379:379:int decodeBase64Char(int) -> decodeBase64Char
    384:389:int decodeBase64Byte(byte) -> decodeBase64Byte
    402:402:char encodeBase64BitsAsChar(int) -> encodeBase64BitsAsChar
    419:423:int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    428:432:void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    449:460:int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    465:476:void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    481:481:byte encodeBase64BitsAsByte(int) -> encodeBase64BitsAsByte
    496:500:int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    518:530:int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    550:550:java.lang.String encode(byte[]) -> encode
    567:606:java.lang.String encode(byte[],boolean) -> encode
    624:657:java.lang.String encode(byte[],boolean,java.lang.String) -> encode
    675:677:byte[] decode(java.lang.String) -> decode
    698:789:void decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder) -> decode
    798:798:java.lang.String toString() -> toString
    804:812:boolean equals(java.lang.Object) -> equals
    818:818:int hashCode() -> hashCode
    837:850:void _reportInvalidBase64(char,int,java.lang.String) -> _reportInvalidBase64
    854:854:void _reportBase64EOF() -> _reportBase64EOF
    858:858:void _reportBase64UnexpectedPadding() -> _reportBase64UnexpectedPadding
    870:871:java.lang.String unexpectedPaddingMessage() -> unexpectedPaddingMessage
    883:884:java.lang.String missingPaddingMessage() -> missingPaddingMessage
com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour -> com.fasterxml.jackson.core.a$a:
# {"fileName":"Base64Variant.java","id":"sourceFile"}
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour PADDING_FORBIDDEN -> a
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour PADDING_REQUIRED -> b
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour PADDING_ALLOWED -> c
    com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour[] $VALUES -> d
    27:27:com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour[] values() -> values
    27:27:com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    27:45:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.Base64Variants -> com.fasterxml.jackson.core.b:
# {"fileName":"Base64Variants.java","id":"sourceFile"}
    java.lang.String STD_BASE64_ALPHABET -> a
    com.fasterxml.jackson.core.Base64Variant MIME -> b
    com.fasterxml.jackson.core.Base64Variant MIME_NO_LINEFEEDS -> c
    com.fasterxml.jackson.core.Base64Variant PEM -> d
    com.fasterxml.jackson.core.Base64Variant MODIFIED_FOR_URL -> e
    33:33:void <init>() -> <init>
    107:107:com.fasterxml.jackson.core.Base64Variant getDefaultVariant() -> getDefaultVariant
    123:140:com.fasterxml.jackson.core.Base64Variant valueOf(java.lang.String) -> valueOf
    51:96:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.FormatFeature -> com.fasterxml.jackson.core.c:
# {"fileName":"FormatFeature.java","id":"sourceFile"}
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
com.fasterxml.jackson.core.FormatSchema -> com.fasterxml.jackson.core.d:
# {"fileName":"FormatSchema.java","id":"sourceFile"}
    java.lang.String getSchemaType() -> getSchemaType
com.fasterxml.jackson.core.JacksonException -> com.fasterxml.jackson.core.e:
# {"fileName":"JacksonException.java","id":"sourceFile"}
    long serialVersionUID -> a
    18:19:void <init>(java.lang.String) -> <init>
    22:23:void <init>(java.lang.Throwable) -> <init>
    26:33:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    java.lang.String getOriginalMessage() -> getOriginalMessage
    java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.JsonEncoding -> com.fasterxml.jackson.core.f:
# {"fileName":"JsonEncoding.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonEncoding UTF8 -> a
    com.fasterxml.jackson.core.JsonEncoding UTF16_BE -> b
    com.fasterxml.jackson.core.JsonEncoding UTF16_LE -> c
    com.fasterxml.jackson.core.JsonEncoding UTF32_BE -> d
    com.fasterxml.jackson.core.JsonEncoding UTF32_LE -> e
    java.lang.String _javaName -> f
    boolean _bigEndian -> g
    int _bits -> h
    com.fasterxml.jackson.core.JsonEncoding[] $VALUES -> i
    18:18:com.fasterxml.jackson.core.JsonEncoding[] values() -> values
    18:18:com.fasterxml.jackson.core.JsonEncoding valueOf(java.lang.String) -> valueOf
    33:37:void <init>(java.lang.String,int,java.lang.String,boolean,int) -> <init>
    44:44:java.lang.String getJavaName() -> getJavaName
    54:54:boolean isBigEndian() -> isBigEndian
    56:56:int bits() -> bits
    18:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactory -> com.fasterxml.jackson.core.g:
# {"fileName":"JsonFactory.java","id":"sourceFile"}
    long serialVersionUID -> t
    java.lang.String FORMAT_NAME_JSON -> a
    int DEFAULT_FACTORY_FEATURE_FLAGS -> b
    int DEFAULT_PARSER_FEATURE_FLAGS -> c
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> d
    com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR -> e
    char DEFAULT_QUOTE_CHAR -> f
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols -> g
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer -> h
    int _factoryFeatures -> i
    int _parserFeatures -> j
    int _generatorFeatures -> k
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> l
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> m
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> n
    com.fasterxml.jackson.core.io.InputDecorator _inputDecorator -> o
    com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator -> p
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> q
    int _maximumNonEscapedChar -> r
    char _quoteChar -> s
    336:336:void <init>() -> <init>
    218:342:void <init>(com.fasterxml.jackson.core.ObjectCodec) -> <init>
    218:370:void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    218:396:void <init>(com.fasterxml.jackson.core.JsonFactoryBuilder) -> <init>
    218:422:void <init>(com.fasterxml.jackson.core.TSFBuilder,boolean) -> <init>
    434:435:com.fasterxml.jackson.core.TSFBuilder rebuild() -> rebuild
    450:450:com.fasterxml.jackson.core.TSFBuilder builder() -> builder
    471:473:com.fasterxml.jackson.core.JsonFactory copy() -> copy
    478:482:void _checkInvalidCopy(java.lang.Class) -> _checkInvalidCopy
    500:500:java.lang.Object readResolve() -> readResolve
    528:528:boolean requiresPropertyOrdering() -> requiresPropertyOrdering
    546:546:boolean canHandleBinaryNatively() -> canHandleBinaryNatively
    563:563:boolean canUseCharArrays() -> canUseCharArrays
    580:580:boolean canParseAsync() -> canParseAsync
    585:585:java.lang.Class getFormatReadFeatureType() -> getFormatReadFeatureType
    590:590:java.lang.Class getFormatWriteFeatureType() -> getFormatWriteFeatureType
    614:618:boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    637:640:java.lang.String getFormatName() -> getFormatName
    646:649:com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    666:666:boolean requiresCustomCodec() -> requiresCustomCodec
    670:670:com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    681:681:com.fasterxml.jackson.core.Version version() -> version
    703:703:com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonFactory$Feature,boolean) -> configure
    718:719:com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonFactory$Feature) -> enable
    734:735:com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonFactory$Feature) -> disable
    746:746:boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    751:751:int getParserFeatures() -> getParserFeatures
    756:756:int getGeneratorFeatures() -> getGeneratorFeatures
    762:762:int getFormatParserFeatures() -> getFormatParserFeatures
    768:768:int getFormatGeneratorFeatures() -> getFormatGeneratorFeatures
    779:779:com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    798:799:com.fasterxml.jackson.core.JsonFactory setStreamReadConstraints(com.fasterxml.jackson.core.StreamReadConstraints) -> setStreamReadConstraints
    818:818:com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    830:831:com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    843:844:com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    856:856:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    869:869:boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature) -> isEnabled
    879:879:com.fasterxml.jackson.core.io.InputDecorator getInputDecorator() -> getInputDecorator
    893:894:com.fasterxml.jackson.core.JsonFactory setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator) -> setInputDecorator
    913:913:com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    925:926:com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    938:939:com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    951:951:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    964:964:boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature) -> isEnabled
    973:973:com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    984:985:com.fasterxml.jackson.core.JsonFactory setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    996:996:com.fasterxml.jackson.core.io.OutputDecorator getOutputDecorator() -> getOutputDecorator
    1010:1011:com.fasterxml.jackson.core.JsonFactory setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator) -> setOutputDecorator
    1024:1025:com.fasterxml.jackson.core.JsonFactory setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    1032:1032:java.lang.String getRootValueSeparator() -> getRootValueSeparator
    1053:1054:com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    1057:1057:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    1088:1090:com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    1114:1116:com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    1142:1143:com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    1163:1164:com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    1175:1182:com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    1197:1206:com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    1217:1227:com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    1238:1238:com.fasterxml.jackson.core.JsonParser createParser(char[]) -> createParser
    1248:1253:com.fasterxml.jackson.core.JsonParser createParser(char[],int,int) -> createParser
    1269:1270:com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    1300:1303:com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() -> createNonBlockingByteArrayParser
    1327:1330:com.fasterxml.jackson.core.JsonParser createNonBlockingByteBufferParser() -> createNonBlockingByteBufferParser
    1366:1372:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    1385:1385:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    1405:1406:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    1428:1436:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    1447:1447:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    1460:1460:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) -> createGenerator
    1495:1495:com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.File) -> createJsonParser
    1523:1523:com.fasterxml.jackson.core.JsonParser createJsonParser(java.net.URL) -> createJsonParser
    1554:1554:com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    1578:1578:com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    1595:1595:com.fasterxml.jackson.core.JsonParser createJsonParser(byte[]) -> createJsonParser
    1615:1615:com.fasterxml.jackson.core.JsonParser createJsonParser(byte[],int,int) -> createJsonParser
    1633:1633:com.fasterxml.jackson.core.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    1670:1670:com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createJsonGenerator
    1694:1694:com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    1713:1713:com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream) -> createJsonGenerator
    1744:1755:com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    1779:1780:com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    1801:1802:com.fasterxml.jackson.core.JsonParser _createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean) -> _createParser
    1828:1828:com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    1848:1853:com.fasterxml.jackson.core.JsonParser _createParser(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    1883:1895:com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _createGenerator
    1916:1928:com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _createUTF8Generator
    1934:1938:java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext) -> _createWriter
    1948:1954:java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1958:1964:java.io.Reader _decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1969:1975:java.io.DataInput _decorate(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1979:1985:java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    1989:1995:java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _decorate
    2017:2020:com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    2034:2037:com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean) -> _createContext
    2052:2053:com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    2070:2071:com.fasterxml.jackson.core.io.IOContext _createNonBlockingContext(java.lang.Object) -> _createNonBlockingContext
    2090:2090:com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object) -> _createContentReference
    2113:2113:com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object,int,int) -> _createContentReference
    2138:2141:void _requireJSONFactory(java.lang.String) -> _requireJSONFactory
    2146:2146:boolean _isJSONFactory() -> _isJSONFactory
    186:200:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactory$Feature -> com.fasterxml.jackson.core.g$a:
# {"fileName":"JsonFactory.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES -> a
    com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES -> b
    com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW -> c
    com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING -> d
    com.fasterxml.jackson.core.JsonFactory$Feature CHARSET_DETECTION -> e
    boolean _defaultState -> f
    com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES -> g
    63:63:com.fasterxml.jackson.core.JsonFactory$Feature[] values() -> values
    63:63:com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String) -> valueOf
    154:158:int collectDefaults() -> collectDefaults
    161:161:void <init>(java.lang.String,int,boolean) -> <init>
    164:164:boolean enabledByDefault() -> enabledByDefault
    166:166:boolean enabledIn(int) -> enabledIn
    168:168:int getMask() -> getMask
    63:138:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonFactoryBuilder -> com.fasterxml.jackson.core.h:
# {"fileName":"JsonFactoryBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> a
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> b
    int _maximumNonEscapedChar -> c
    char _quoteChar -> d
    32:38:void <init>() -> <init>
    32:45:void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    57:58:com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature) -> enable
    63:68:com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> enable
    73:74:com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature) -> disable
    79:83:com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> disable
    88:88:com.fasterxml.jackson.core.JsonFactoryBuilder configure(com.fasterxml.jackson.core.json.JsonReadFeature,boolean) -> configure
    95:99:com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> enable
    104:108:com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> enable
    113:114:com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> disable
    119:123:com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> disable
    128:128:com.fasterxml.jackson.core.JsonFactoryBuilder configure(com.fasterxml.jackson.core.json.JsonWriteFeature,boolean) -> configure
    142:143:com.fasterxml.jackson.core.JsonFactoryBuilder characterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> characterEscapes
    156:157:com.fasterxml.jackson.core.JsonFactoryBuilder rootValueSeparator(java.lang.String) -> rootValueSeparator
    170:171:com.fasterxml.jackson.core.JsonFactoryBuilder rootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> rootValueSeparator
    195:196:com.fasterxml.jackson.core.JsonFactoryBuilder highestNonEscapedChar(int) -> highestNonEscapedChar
    217:221:com.fasterxml.jackson.core.JsonFactoryBuilder quoteChar(char) -> quoteChar
    226:226:com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes() -> characterEscapes
    227:227:com.fasterxml.jackson.core.SerializableString rootValueSeparator() -> rootValueSeparator
    229:229:int highestNonEscapedChar() -> highestNonEscapedChar
    231:231:char quoteChar() -> quoteChar
    236:236:com.fasterxml.jackson.core.JsonFactory build() -> build
    19:19:com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.json.JsonWriteFeature,boolean) -> configure
    19:19:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> disable
    19:19:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> disable
    19:19:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> enable
    19:19:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> enable
    19:19:com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.json.JsonReadFeature,boolean) -> configure
    19:19:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> disable
    19:19:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature) -> disable
    19:19:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> enable
    19:19:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature) -> enable
com.fasterxml.jackson.core.JsonGenerationException -> com.fasterxml.jackson.core.i:
# {"fileName":"JsonGenerationException.java","id":"sourceFile"}
    long serialVersionUID -> c
    22:23:void <init>(java.lang.Throwable) -> <init>
    27:28:void <init>(java.lang.String) -> <init>
    32:33:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    37:38:void <init>(java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    42:44:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    48:50:void <init>(java.lang.String,java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    64:65:com.fasterxml.jackson.core.JsonGenerationException withGenerator(com.fasterxml.jackson.core.JsonGenerator) -> withGenerator
    70:70:com.fasterxml.jackson.core.JsonGenerator getProcessor() -> getProcessor
    15:15:com.fasterxml.jackson.core.exc.StreamWriteException withGenerator(com.fasterxml.jackson.core.JsonGenerator) -> withGenerator
    15:15:java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.JsonGenerator -> com.fasterxml.jackson.core.j:
# {"fileName":"JsonGenerator.java","id":"sourceFile"}
    com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_WRITE_CAPABILITIES -> a
    com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_TEXTUAL_WRITE_CAPABILITIES -> b
    com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_BINARY_WRITE_CAPABILITIES -> c
    com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter -> d
    322:322:void <init>() -> <init>
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    385:385:java.lang.Object getOutputTarget() -> getOutputTarget
    405:405:java.lang.Object currentValue() -> currentValue
    420:421:void assignCurrentValue(java.lang.Object) -> assignCurrentValue
    431:432:java.lang.Object getCurrentValue() -> getCurrentValue
    443:447:void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    485:486:com.fasterxml.jackson.core.JsonGenerator configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    510:510:boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature) -> isEnabled
    int getFeatureMask() -> getFeatureMask
    com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    556:558:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    570:570:int getFormatFeatures() -> getFormatFeatures
    592:592:com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int,int) -> overrideFormatFeatures
    617:619:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    628:628:com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    650:651:com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setPrettyPrinter
    661:661:com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> getPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    696:696:com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    710:710:int getHighestEscapedChar() -> getHighestEscapedChar
    718:718:com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    730:730:com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    744:744:com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    772:772:int getOutputBuffered() -> getOutputBuffered
    789:789:boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    809:809:boolean canWriteObjectId() -> canWriteObjectId
    829:829:boolean canWriteTypeId() -> canWriteTypeId
    846:846:boolean canWriteBinaryNatively() -> canWriteBinaryNatively
    859:859:boolean canOmitFields() -> canOmitFields
    878:878:boolean canWriteFormattedNumbers() -> canWriteFormattedNumbers
    889:889:com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities() -> getWriteCapabilities
    void writeStartArray() -> writeStartArray
    935:936:void writeStartArray(int) -> writeStartArray
    952:954:void writeStartArray(java.lang.Object) -> writeStartArray
    975:977:void writeStartArray(java.lang.Object,int) -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    1026:1028:void writeStartObject(java.lang.Object) -> writeStartObject
    1057:1058:void writeStartObject(java.lang.Object,int) -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    1125:1126:void writeFieldId(long) -> writeFieldId
    1150:1159:void writeArray(int[],int,int) -> writeArray
    1177:1186:void writeArray(long[],int,int) -> writeArray
    1204:1213:void writeArray(double[],int,int) -> writeArray
    1231:1240:void writeArray(java.lang.String[],int,int) -> writeArray
    void writeString(java.lang.String) -> writeString
    1287:1288:void writeString(java.io.Reader,int) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    1485:1486:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    1520:1521:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    1566:1567:void writeBinary(byte[],int,int) -> writeBinary
    1581:1582:void writeBinary(byte[]) -> writeBinary
    1604:1604:int writeBinary(java.io.InputStream,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    1652:1652:void writeNumber(short) -> writeNumber
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    1779:1780:void writeNumber(char[],int,int) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    1832:1841:void writeEmbeddedObject(java.lang.Object) -> writeEmbeddedObject
    1870:1870:void writeObjectId(java.lang.Object) -> writeObjectId
    1890:1890:void writeObjectRef(java.lang.Object) -> writeObjectRef
    1912:1912:void writeTypeId(java.lang.Object) -> writeTypeId
    1941:1995:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    2017:2048:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    2076:2077:void writePOJO(java.lang.Object) -> writePOJO
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    2131:2133:void writeBinaryField(java.lang.String,byte[]) -> writeBinaryField
    2150:2152:void writeBooleanField(java.lang.String,boolean) -> writeBooleanField
    2168:2170:void writeNullField(java.lang.String) -> writeNullField
    2187:2189:void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    2208:2210:void writeNumberField(java.lang.String,short) -> writeNumberField
    2227:2229:void writeNumberField(java.lang.String,int) -> writeNumberField
    2246:2248:void writeNumberField(java.lang.String,long) -> writeNumberField
    2267:2269:void writeNumberField(java.lang.String,java.math.BigInteger) -> writeNumberField
    2286:2288:void writeNumberField(java.lang.String,float) -> writeNumberField
    2305:2307:void writeNumberField(java.lang.String,double) -> writeNumberField
    2325:2327:void writeNumberField(java.lang.String,java.math.BigDecimal) -> writeNumberField
    2348:2350:void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    2371:2373:void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    2394:2395:void writePOJOField(java.lang.String,java.lang.Object) -> writePOJOField
    2408:2410:void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    2428:2428:void writeOmittedField(java.lang.String) -> writeOmittedField
    2453:2499:void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    2517:2563:void copyCurrentEventExact(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEventExact
    2607:2629:void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    2634:2692:void _copyCurrentContents(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentContents
    2710:2718:void _copyCurrentFloatValue(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentFloatValue
    2736:2744:void _copyCurrentFloatValueExact(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentFloatValueExact
    2756:2764:void _copyCurrentIntValue(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentIntValue
    2776:2781:void _copyCurrentStringValue(com.fasterxml.jackson.core.JsonParser) -> _copyCurrentStringValue
    void flush() -> flush
    boolean isClosed() -> isClosed
    void close() -> close
    2849:2849:void _reportError(java.lang.String) -> _reportError
    2852:2852:void _throwInternal() -> _throwInternal
    2855:2855:void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    2861:2866:void _verifyOffsets(int,int,int) -> _verifyOffsets
    2883:2937:void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
    42:60:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonGenerator$1 -> com.fasterxml.jackson.core.j$1:
# {"fileName":"JsonGenerator.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion -> a
    1961:1961:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonGenerator$Feature -> com.fasterxml.jackson.core.j$a:
# {"fileName":"JsonGenerator.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET -> a
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> b
    com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> c
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES -> d
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> e
    com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII -> f
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> g
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN -> h
    com.fasterxml.jackson.core.JsonGenerator$Feature STRICT_DUPLICATE_DETECTION -> i
    com.fasterxml.jackson.core.JsonGenerator$Feature IGNORE_UNKNOWN -> j
    com.fasterxml.jackson.core.JsonGenerator$Feature USE_FAST_DOUBLE_WRITER -> k
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_HEX_UPPER_CASE -> l
    boolean _defaultState -> m
    int _mask -> n
    com.fasterxml.jackson.core.JsonGenerator$Feature[] $VALUES -> o
    65:65:com.fasterxml.jackson.core.JsonGenerator$Feature[] values() -> values
    65:65:com.fasterxml.jackson.core.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    281:287:int collectDefaults() -> collectDefaults
    290:293:void <init>(java.lang.String,int,boolean) -> <init>
    295:295:boolean enabledByDefault() -> enabledByDefault
    298:298:boolean enabledIn(int) -> enabledIn
    300:300:int getMask() -> getMask
    65:267:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonLocation -> com.fasterxml.jackson.core.k:
# {"fileName":"JsonLocation.java","id":"sourceFile"}
    long serialVersionUID -> i
    int MAX_CONTENT_SNIPPET -> a
    com.fasterxml.jackson.core.JsonLocation NA -> b
    long _totalBytes -> c
    long _totalChars -> d
    int _lineNr -> e
    int _columnNr -> f
    com.fasterxml.jackson.core.io.ContentReference _contentReference -> g
    java.lang.String _sourceDescription -> h
    72:73:void <init>(com.fasterxml.jackson.core.io.ContentReference,long,int,int) -> <init>
    77:87:void <init>(com.fasterxml.jackson.core.io.ContentReference,long,long,int,int) -> <init>
    91:92:void <init>(java.lang.Object,long,int,int) -> <init>
    97:98:void <init>(java.lang.Object,long,long,int,int) -> <init>
    101:104:com.fasterxml.jackson.core.io.ContentReference _wrap(java.lang.Object) -> _wrap
    126:126:com.fasterxml.jackson.core.io.ContentReference contentReference() -> contentReference
    143:143:java.lang.Object getSourceRef() -> getSourceRef
    152:152:int getLineNr() -> getLineNr
    160:160:int getColumnNr() -> getColumnNr
    166:166:long getCharOffset() -> getCharOffset
    172:172:long getByteOffset() -> getByteOffset
    190:193:java.lang.String sourceDescription() -> sourceDescription
    206:206:java.lang.String offsetDescription() -> offsetDescription
    216:251:java.lang.StringBuilder appendOffsetDescription(java.lang.StringBuilder) -> appendOffsetDescription
    263:268:int hashCode() -> hashCode
    274:285:boolean equals(java.lang.Object) -> equals
    295:302:java.lang.String toString() -> toString
    38:38:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParseException -> com.fasterxml.jackson.core.l:
# {"fileName":"JsonParseException.java","id":"sourceFile"}
    long serialVersionUID -> b
    23:24:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    28:29:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    42:43:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    47:48:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> <init>
    52:53:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    57:58:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    62:63:void <init>(java.lang.String) -> <init>
    79:80:com.fasterxml.jackson.core.JsonParseException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
    97:98:com.fasterxml.jackson.core.JsonParseException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    104:104:com.fasterxml.jackson.core.JsonParser getProcessor() -> getProcessor
    110:110:com.fasterxml.jackson.core.util.RequestPayload getRequestPayload() -> getRequestPayload
    116:116:java.lang.String getRequestPayloadAsString() -> getRequestPayloadAsString
    122:122:java.lang.String getMessage() -> getMessage
    16:16:com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    16:16:com.fasterxml.jackson.core.exc.StreamReadException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
    16:16:java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.JsonParser -> com.fasterxml.jackson.core.m:
# {"fileName":"JsonParser.java","id":"sourceFile"}
    int MIN_BYTE_I -> d
    int MAX_BYTE_I -> e
    int MIN_SHORT_I -> f
    int MAX_SHORT_I -> g
    com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_READ_CAPABILITIES -> a
    int _features -> b
    com.fasterxml.jackson.core.util.RequestPayload _requestPayload -> c
    426:429:void <init>() -> <init>
    431:431:void <init>(int) -> <init>
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    468:468:java.lang.Object getInputSource() -> getInputSource
    478:479:void setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload) -> setRequestPayloadOnError
    490:491:void setRequestPayloadOnError(byte[],java.lang.String) -> setRequestPayloadOnError
    501:502:void setRequestPayloadOnError(java.lang.String) -> setRequestPayloadOnError
    516:516:com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    540:541:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    552:552:com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    562:562:boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    582:582:boolean requiresCustomCodec() -> requiresCustomCodec
    599:599:boolean canParseAsync() -> canParseAsync
    611:611:com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder() -> getNonBlockingInputFeeder
    623:623:com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    com.fasterxml.jackson.core.Version version() -> version
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    717:717:com.fasterxml.jackson.core.JsonLocation currentLocation() -> currentLocation
    737:737:com.fasterxml.jackson.core.JsonLocation currentTokenLocation() -> currentTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    775:775:java.lang.Object currentValue() -> currentValue
    790:791:void assignCurrentValue(java.lang.Object) -> assignCurrentValue
    801:802:java.lang.Object getCurrentValue() -> getCurrentValue
    813:817:void setCurrentValue(java.lang.Object) -> setCurrentValue
    842:842:int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    862:862:int releaseBuffered(java.io.Writer) -> releaseBuffered
    879:880:com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    892:893:com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    906:907:com.fasterxml.jackson.core.JsonParser configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    917:917:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    928:928:boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature) -> isEnabled
    937:937:int getFeatureMask() -> getFeatureMask
    951:952:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    973:974:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    986:986:int getFormatFeatures() -> getFormatFeatures
    1008:1008:com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int) -> overrideFormatFeatures
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    1074:1074:boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    1091:1091:java.lang.String nextFieldName() -> nextFieldName
    1112:1112:java.lang.String nextTextValue() -> nextTextValue
    1138:1138:int nextIntValue(int) -> nextIntValue
    1164:1164:long nextLongValue(long) -> nextLongValue
    1188:1191:java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    1234:1234:void finishToken() -> finishToken
    1256:1256:com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    1273:1273:int currentTokenId() -> currentTokenId
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    int getCurrentTokenId() -> getCurrentTokenId
    boolean hasCurrentToken() -> hasCurrentToken
    boolean hasTokenId(int) -> hasTokenId
    boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    1366:1366:boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    1378:1378:boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    1393:1393:boolean isExpectedNumberIntToken() -> isExpectedNumberIntToken
    1413:1413:boolean isNaN() -> isNaN
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getCurrentName() -> getCurrentName
    1492:1492:java.lang.String currentName() -> currentName
    java.lang.String getText() -> getText
    1533:1538:int getText(java.io.Writer) -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    1662:1662:java.lang.Number getNumberValueExact() -> getNumberValueExact
    1693:1693:java.lang.Object getNumberValueDeferred() -> getNumberValueDeferred
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    1735:1744:byte getByteValue() -> getByteValue
    1768:1774:short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    1914:1919:boolean getBooleanValue() -> getBooleanValue
    1940:1940:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    1986:1986:byte[] getBinaryValue() -> getBinaryValue
    2007:2007:int readBinaryValue(java.io.OutputStream) -> readBinaryValue
    2025:2026:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    2053:2053:int getValueAsInt() -> getValueAsInt
    2074:2074:int getValueAsInt(int) -> getValueAsInt
    2094:2094:long getValueAsLong() -> getValueAsLong
    2116:2116:long getValueAsLong(long) -> getValueAsLong
    2137:2137:double getValueAsDouble() -> getValueAsDouble
    2159:2159:double getValueAsDouble(double) -> getValueAsDouble
    2180:2180:boolean getValueAsBoolean() -> getValueAsBoolean
    2202:2202:boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    2222:2222:java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    2266:2266:boolean canReadObjectId() -> canReadObjectId
    2283:2283:boolean canReadTypeId() -> canReadTypeId
    2303:2303:java.lang.Object getObjectId() -> getObjectId
    2323:2323:java.lang.Object getTypeId() -> getTypeId
    2363:2363:java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    2396:2396:java.lang.Object readValueAs(com.fasterxml.jackson.core.type.TypeReference) -> readValueAs
    2414:2414:java.util.Iterator readValuesAs(java.lang.Class) -> readValuesAs
    2432:2432:java.util.Iterator readValuesAs(com.fasterxml.jackson.core.type.TypeReference) -> readValuesAs
    2451:2451:com.fasterxml.jackson.core.TreeNode readValueAsTree() -> readValueAsTree
    2455:2459:com.fasterxml.jackson.core.ObjectCodec _codec() -> _codec
    2477:2478:com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String) -> _constructError
    2488:2488:void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    2503:2503:com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String) -> _constructReadException
    2507:2507:com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String,java.lang.Object) -> _constructReadException
    2511:2511:com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String,java.lang.Object,java.lang.Object) -> _constructReadException
    2516:2516:com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> _constructReadException
    2532:2536:com.fasterxml.jackson.core.JsonParseException _constructReadException(java.lang.String,java.lang.Throwable) -> _constructReadException
    51:52:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParser$Feature -> com.fasterxml.jackson.core.m$a:
# {"fileName":"JsonParser.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE -> a
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS -> b
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_YAML_COMMENTS -> c
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> d
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES -> e
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> f
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> g
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> h
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS -> i
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS -> j
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS -> k
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> l
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_MISSING_VALUES -> m
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_TRAILING_COMMA -> n
    com.fasterxml.jackson.core.JsonParser$Feature STRICT_DUPLICATE_DETECTION -> o
    com.fasterxml.jackson.core.JsonParser$Feature IGNORE_UNDEFINED -> p
    com.fasterxml.jackson.core.JsonParser$Feature INCLUDE_SOURCE_IN_LOCATION -> q
    com.fasterxml.jackson.core.JsonParser$Feature USE_FAST_DOUBLE_PARSER -> r
    com.fasterxml.jackson.core.JsonParser$Feature USE_FAST_BIG_NUMBER_PARSER -> s
    boolean _defaultState -> t
    int _mask -> u
    com.fasterxml.jackson.core.JsonParser$Feature[] $VALUES -> v
    57:57:com.fasterxml.jackson.core.JsonParser$Feature[] values() -> values
    57:57:com.fasterxml.jackson.core.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    379:385:int collectDefaults() -> collectDefaults
    388:391:void <init>(java.lang.String,int,boolean) -> <init>
    393:393:boolean enabledByDefault() -> enabledByDefault
    395:395:boolean enabledIn(int) -> enabledIn
    397:397:int getMask() -> getMask
    57:360:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonParser$NumberType -> com.fasterxml.jackson.core.m$b:
# {"fileName":"JsonParser.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonParser$NumberType INT -> a
    com.fasterxml.jackson.core.JsonParser$NumberType LONG -> b
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER -> c
    com.fasterxml.jackson.core.JsonParser$NumberType FLOAT -> d
    com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE -> e
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL -> f
    com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES -> g
    40:40:com.fasterxml.jackson.core.JsonParser$NumberType[] values() -> values
    40:40:com.fasterxml.jackson.core.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
    40:40:void <init>(java.lang.String,int) -> <init>
    40:41:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonPointer -> com.fasterxml.jackson.core.n:
# {"fileName":"JsonPointer.java","id":"sourceFile"}
    long serialVersionUID -> j
    char SEPARATOR -> a
    com.fasterxml.jackson.core.JsonPointer EMPTY -> b
    com.fasterxml.jackson.core.JsonPointer _nextSegment -> c
    com.fasterxml.jackson.core.JsonPointer _head -> d
    java.lang.String _asString -> e
    int _asStringOffset -> f
    java.lang.String _matchingPropertyName -> g
    int _matchingElementIndex -> h
    int _hashCode -> i
    104:111:void <init>() -> <init>
    116:124:void <init>(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer) -> <init>
    127:133:void <init>(java.lang.String,int,java.lang.String,int,com.fasterxml.jackson.core.JsonPointer) -> <init>
    157:164:com.fasterxml.jackson.core.JsonPointer compile(java.lang.String) -> compile
    175:175:com.fasterxml.jackson.core.JsonPointer valueOf(java.lang.String) -> valueOf
    188:188:com.fasterxml.jackson.core.JsonPointer empty() -> empty
    207:277:com.fasterxml.jackson.core.JsonPointer forPath(com.fasterxml.jackson.core.JsonStreamContext,boolean) -> forPath
    282:294:void _appendEscaped(java.lang.StringBuilder,java.lang.String) -> _appendEscaped
    312:312:int length() -> length
    315:315:boolean matches() -> matches
    316:316:java.lang.String getMatchingProperty() -> getMatchingProperty
    317:317:int getMatchingIndex() -> getMatchingIndex
    323:323:boolean mayMatchProperty() -> mayMatchProperty
    329:329:boolean mayMatchElement() -> mayMatchElement
    338:346:com.fasterxml.jackson.core.JsonPointer last() -> last
    366:380:com.fasterxml.jackson.core.JsonPointer append(com.fasterxml.jackson.core.JsonPointer) -> append
    403:414:com.fasterxml.jackson.core.JsonPointer appendProperty(java.lang.String) -> appendProperty
    430:438:com.fasterxml.jackson.core.JsonPointer appendIndex(int) -> appendIndex
    452:452:boolean matchesProperty(java.lang.String) -> matchesProperty
    467:470:com.fasterxml.jackson.core.JsonPointer matchProperty(java.lang.String) -> matchProperty
    484:484:boolean matchesElement(int) -> matchesElement
    501:504:com.fasterxml.jackson.core.JsonPointer matchElement(int) -> matchElement
    521:521:com.fasterxml.jackson.core.JsonPointer tail() -> tail
    541:548:com.fasterxml.jackson.core.JsonPointer head() -> head
    558:561:java.lang.String toString() -> toString
    565:576:int hashCode() -> hashCode
    580:587:boolean equals(java.lang.Object) -> equals
    593:606:boolean _compare(java.lang.String,int,java.lang.String,int) -> _compare
    616:642:int _parseIndex(java.lang.String) -> _parseIndex
    647:682:com.fasterxml.jackson.core.JsonPointer _parseTail(java.lang.String) -> _parseTail
    687:691:com.fasterxml.jackson.core.JsonPointer _buildPath(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer$PointerParent) -> _buildPath
    712:731:int _extractEscapedSegment(java.lang.String,int,int,java.lang.StringBuilder) -> _extractEscapedSegment
    735:743:void _appendEscape(java.lang.StringBuilder,char) -> _appendEscape
    748:759:com.fasterxml.jackson.core.JsonPointer _constructHead() -> _constructHead
    764:772:com.fasterxml.jackson.core.JsonPointer _constructHead(int,com.fasterxml.jackson.core.JsonPointer) -> _constructHead
    832:832:java.lang.Object writeReplace() -> writeReplace
    42:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonPointer$PointerParent -> com.fasterxml.jackson.core.n$a:
# {"fileName":"JsonPointer.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonPointer$PointerParent parent -> a
    int fullPathOffset -> b
    java.lang.String segment -> c
    790:794:void <init>(com.fasterxml.jackson.core.JsonPointer$PointerParent,int,java.lang.String) -> <init>
com.fasterxml.jackson.core.JsonPointer$PointerSegment -> com.fasterxml.jackson.core.n$b:
# {"fileName":"JsonPointer.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonPointer$PointerSegment next -> a
    java.lang.String property -> b
    int index -> c
    int pathOffset -> d
    com.fasterxml.jackson.core.JsonPointer$PointerSegment prev -> e
    812:820:void <init>(com.fasterxml.jackson.core.JsonPointer$PointerSegment,java.lang.String,int) -> <init>
com.fasterxml.jackson.core.JsonPointer$Serialization -> com.fasterxml.jackson.core.n$c:
# {"fileName":"JsonPointer.java","id":"sourceFile"}
    java.lang.String _fullPath -> a
    847:847:void <init>() -> <init>
    849:851:void <init>(java.lang.String) -> <init>
    855:856:void writeExternal(java.io.ObjectOutput) -> writeExternal
    860:861:void readExternal(java.io.ObjectInput) -> readExternal
    866:866:java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.core.JsonProcessingException -> com.fasterxml.jackson.core.o:
# {"fileName":"JsonProcessingException.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.core.JsonLocation _location -> a
    25:27:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    38:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.Throwable) -> <init>
    52:52:com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    61:61:void clearLocation() -> clearLocation
    73:73:java.lang.String getOriginalMessage() -> getOriginalMessage
    90:90:java.lang.Object getProcessor() -> getProcessor
    105:105:java.lang.String getMessageSuffix() -> getMessageSuffix
    120:140:java.lang.String getMessage() -> getMessage
    143:143:java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonStreamContext -> com.fasterxml.jackson.core.p:
# {"fileName":"JsonStreamContext.java","id":"sourceFile"}
    int TYPE_ROOT -> a
    int TYPE_ARRAY -> b
    int TYPE_OBJECT -> c
    int _type -> d
    int _index -> e
    int _nestingDepth -> f
    69:69:void <init>() -> <init>
    79:82:void <init>(com.fasterxml.jackson.core.JsonStreamContext) -> <init>
    85:88:void <init>(int,int) -> <init>
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
    110:110:boolean inArray() -> inArray
    119:119:boolean inRoot() -> inRoot
    127:127:boolean inObject() -> inObject
    136:136:int getNestingDepth() -> getNestingDepth
    146:151:java.lang.String getTypeDesc() -> getTypeDesc
    164:169:java.lang.String typeDesc() -> typeDesc
    175:175:int getEntryCount() -> getEntryCount
    180:180:int getCurrentIndex() -> getCurrentIndex
    191:191:boolean hasCurrentIndex() -> hasCurrentIndex
    213:218:boolean hasPathSegment() -> hasPathSegment
    java.lang.String getCurrentName() -> getCurrentName
    236:236:boolean hasCurrentName() -> hasCurrentName
    253:253:java.lang.Object getCurrentValue() -> getCurrentValue
    265:265:void setCurrentValue(java.lang.Object) -> setCurrentValue
    277:277:com.fasterxml.jackson.core.JsonPointer pathAsPointer() -> pathAsPointer
    292:292:com.fasterxml.jackson.core.JsonPointer pathAsPointer(boolean) -> pathAsPointer
    310:310:com.fasterxml.jackson.core.JsonLocation startLocation(com.fasterxml.jackson.core.io.ContentReference) -> startLocation
    322:322:com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    336:360:java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonToken -> com.fasterxml.jackson.core.q:
# {"fileName":"JsonToken.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE -> a
    com.fasterxml.jackson.core.JsonToken START_OBJECT -> b
    com.fasterxml.jackson.core.JsonToken END_OBJECT -> c
    com.fasterxml.jackson.core.JsonToken START_ARRAY -> d
    com.fasterxml.jackson.core.JsonToken END_ARRAY -> e
    com.fasterxml.jackson.core.JsonToken FIELD_NAME -> f
    com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT -> g
    com.fasterxml.jackson.core.JsonToken VALUE_STRING -> h
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT -> i
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT -> j
    com.fasterxml.jackson.core.JsonToken VALUE_TRUE -> k
    com.fasterxml.jackson.core.JsonToken VALUE_FALSE -> l
    com.fasterxml.jackson.core.JsonToken VALUE_NULL -> m
    java.lang.String _serialized -> n
    char[] _serializedChars -> o
    byte[] _serializedBytes -> p
    int _id -> q
    boolean _isStructStart -> r
    boolean _isStructEnd -> s
    boolean _isNumber -> t
    boolean _isBoolean -> u
    boolean _isScalar -> v
    com.fasterxml.jackson.core.JsonToken[] $VALUES -> w
    12:12:com.fasterxml.jackson.core.JsonToken[] values() -> values
    12:12:com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String) -> valueOf
    142:168:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    170:170:int id() -> id
    172:172:java.lang.String asString() -> asString
    173:173:char[] asCharArray() -> asCharArray
    174:174:byte[] asByteArray() -> asByteArray
    180:180:boolean isNumeric() -> isNumeric
    193:193:boolean isStructStart() -> isStructStart
    206:206:boolean isStructEnd() -> isStructEnd
    217:217:boolean isScalarValue() -> isScalarValue
    223:223:boolean isBoolean() -> isBoolean
    12:117:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.JsonTokenId -> com.fasterxml.jackson.core.r:
# {"fileName":"JsonTokenId.java","id":"sourceFile"}
    int ID_NOT_AVAILABLE -> a
    int ID_NO_TOKEN -> b
    int ID_START_OBJECT -> c
    int ID_END_OBJECT -> d
    int ID_START_ARRAY -> e
    int ID_END_ARRAY -> f
    int ID_FIELD_NAME -> g
    int ID_STRING -> h
    int ID_NUMBER_INT -> i
    int ID_NUMBER_FLOAT -> j
    int ID_TRUE -> k
    int ID_FALSE -> l
    int ID_NULL -> m
    int ID_EMBEDDED_OBJECT -> n
com.fasterxml.jackson.core.JsonpCharacterEscapes -> com.fasterxml.jackson.core.s:
# {"fileName":"JsonpCharacterEscapes.java","id":"sourceFile"}
    long serialVersionUID -> d
    int[] asciiEscapes -> e
    com.fasterxml.jackson.core.io.SerializedString escapeFor2028 -> f
    com.fasterxml.jackson.core.io.SerializedString escapeFor2029 -> g
    com.fasterxml.jackson.core.JsonpCharacterEscapes sInstance -> h
    15:15:void <init>() -> <init>
    26:26:com.fasterxml.jackson.core.JsonpCharacterEscapes instance() -> instance
    32:38:com.fasterxml.jackson.core.SerializableString getEscapeSequence(int) -> getEscapeSequence
    44:44:int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    19:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.ObjectCodec -> com.fasterxml.jackson.core.t:
# {"fileName":"ObjectCodec.java","id":"sourceFile"}
    27:27:void <init>() -> <init>
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode) -> writeTree
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    270:270:com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    278:278:com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
com.fasterxml.jackson.core.PrettyPrinter -> com.fasterxml.jackson.core.u:
# {"fileName":"PrettyPrinter.java","id":"sourceFile"}
    com.fasterxml.jackson.core.util.Separators DEFAULT_SEPARATORS -> a
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> b
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    31:38:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.SerializableString -> com.fasterxml.jackson.core.v:
# {"fileName":"SerializableString.java","id":"sourceFile"}
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    int appendQuoted(char[],int) -> appendQuoted
    int appendUnquotedUTF8(byte[],int) -> appendUnquotedUTF8
    int appendUnquoted(char[],int) -> appendUnquoted
    int writeQuotedUTF8(java.io.OutputStream) -> writeQuotedUTF8
    int writeUnquotedUTF8(java.io.OutputStream) -> writeUnquotedUTF8
    int putQuotedUTF8(java.nio.ByteBuffer) -> putQuotedUTF8
    int putUnquotedUTF8(java.nio.ByteBuffer) -> putUnquotedUTF8
com.fasterxml.jackson.core.StreamReadCapability -> com.fasterxml.jackson.core.w:
# {"fileName":"StreamReadCapability.java","id":"sourceFile"}
    com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES -> a
    com.fasterxml.jackson.core.StreamReadCapability SCALARS_AS_OBJECTS -> b
    com.fasterxml.jackson.core.StreamReadCapability UNTYPED_SCALARS -> c
    com.fasterxml.jackson.core.StreamReadCapability EXACT_FLOATS -> d
    boolean _defaultState -> e
    int _mask -> f
    com.fasterxml.jackson.core.StreamReadCapability[] $VALUES -> g
    15:15:com.fasterxml.jackson.core.StreamReadCapability[] values() -> values
    15:15:com.fasterxml.jackson.core.StreamReadCapability valueOf(java.lang.String) -> valueOf
    97:100:void <init>(java.lang.String,int,boolean) -> <init>
    103:103:boolean enabledByDefault() -> enabledByDefault
    105:105:boolean enabledIn(int) -> enabledIn
    107:107:int getMask() -> getMask
    15:87:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.StreamReadConstraints -> com.fasterxml.jackson.core.x:
# {"fileName":"StreamReadConstraints.java","id":"sourceFile"}
    long serialVersionUID -> g
    int DEFAULT_MAX_DEPTH -> a
    int DEFAULT_MAX_NUM_LEN -> b
    int DEFAULT_MAX_STRING_LEN -> c
    int MAX_BIGINT_SCALE_MAGNITUDE -> h
    int _maxNestingDepth -> d
    int _maxNumLen -> e
    int _maxStringLen -> f
    com.fasterxml.jackson.core.StreamReadConstraints DEFAULT -> i
    81:86:void overrideDefaultStreamReadConstraints(com.fasterxml.jackson.core.StreamReadConstraints) -> overrideDefaultStreamReadConstraints
    179:183:void <init>(int,int,int) -> <init>
    186:186:com.fasterxml.jackson.core.StreamReadConstraints$Builder builder() -> builder
    194:194:com.fasterxml.jackson.core.StreamReadConstraints defaults() -> defaults
    202:202:com.fasterxml.jackson.core.StreamReadConstraints$Builder rebuild() -> rebuild
    218:218:int getMaxNestingDepth() -> getMaxNestingDepth
    228:228:int getMaxNumberLength() -> getMaxNumberLength
    238:238:int getMaxStringLength() -> getMaxStringLength
    260:264:void validateNestingDepth(int) -> validateNestingDepth
    285:289:void validateFPLength(int) -> validateFPLength
    304:308:void validateIntegerLength(int) -> validateIntegerLength
    323:327:void validateStringLength(int) -> validateStringLength
    348:356:void validateBigIntegerScale(int) -> validateBigIntegerScale
    60:60:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.StreamReadConstraints$Builder -> com.fasterxml.jackson.core.x$a:
# {"fileName":"StreamReadConstraints.java","id":"sourceFile"}
    int maxNestingDepth -> a
    int maxNumLen -> b
    int maxStringLen -> c
    103:107:com.fasterxml.jackson.core.StreamReadConstraints$Builder maxNestingDepth(int) -> maxNestingDepth
    120:124:com.fasterxml.jackson.core.StreamReadConstraints$Builder maxNumberLength(int) -> maxNumberLength
    145:149:com.fasterxml.jackson.core.StreamReadConstraints$Builder maxStringLength(int) -> maxStringLength
    153:154:void <init>() -> <init>
    156:160:void <init>(int,int,int) -> <init>
    162:166:void <init>(com.fasterxml.jackson.core.StreamReadConstraints) -> <init>
    169:169:com.fasterxml.jackson.core.StreamReadConstraints build() -> build
com.fasterxml.jackson.core.StreamReadFeature -> com.fasterxml.jackson.core.y:
# {"fileName":"StreamReadFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.core.StreamReadFeature AUTO_CLOSE_SOURCE -> a
    com.fasterxml.jackson.core.StreamReadFeature STRICT_DUPLICATE_DETECTION -> b
    com.fasterxml.jackson.core.StreamReadFeature IGNORE_UNDEFINED -> c
    com.fasterxml.jackson.core.StreamReadFeature INCLUDE_SOURCE_IN_LOCATION -> d
    com.fasterxml.jackson.core.StreamReadFeature USE_FAST_DOUBLE_PARSER -> e
    com.fasterxml.jackson.core.StreamReadFeature USE_FAST_BIG_NUMBER_PARSER -> f
    boolean _defaultState -> g
    int _mask -> h
    com.fasterxml.jackson.core.JsonParser$Feature _mappedFeature -> i
    com.fasterxml.jackson.core.StreamReadFeature[] $VALUES -> j
    14:14:com.fasterxml.jackson.core.StreamReadFeature[] values() -> values
    14:14:com.fasterxml.jackson.core.StreamReadFeature valueOf(java.lang.String) -> valueOf
    131:136:void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonParser$Feature) -> <init>
    146:152:int collectDefaults() -> collectDefaults
    156:156:boolean enabledByDefault() -> enabledByDefault
    158:158:boolean enabledIn(int) -> enabledIn
    160:160:int getMask() -> getMask
    162:162:com.fasterxml.jackson.core.JsonParser$Feature mappedFeature() -> mappedFeature
    14:114:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.StreamWriteCapability -> com.fasterxml.jackson.core.z:
# {"fileName":"StreamWriteCapability.java","id":"sourceFile"}
    com.fasterxml.jackson.core.StreamWriteCapability CAN_WRITE_BINARY_NATIVELY -> a
    com.fasterxml.jackson.core.StreamWriteCapability CAN_WRITE_FORMATTED_NUMBERS -> b
    boolean _defaultState -> c
    int _mask -> d
    com.fasterxml.jackson.core.StreamWriteCapability[] $VALUES -> e
    14:14:com.fasterxml.jackson.core.StreamWriteCapability[] values() -> values
    14:14:com.fasterxml.jackson.core.StreamWriteCapability valueOf(java.lang.String) -> valueOf
    44:47:void <init>(java.lang.String,int,boolean) -> <init>
    50:50:boolean enabledByDefault() -> enabledByDefault
    52:52:boolean enabledIn(int) -> enabledIn
    54:54:int getMask() -> getMask
    14:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.StreamWriteFeature -> com.fasterxml.jackson.core.aa:
# {"fileName":"StreamWriteFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_TARGET -> a
    com.fasterxml.jackson.core.StreamWriteFeature AUTO_CLOSE_CONTENT -> b
    com.fasterxml.jackson.core.StreamWriteFeature FLUSH_PASSED_TO_STREAM -> c
    com.fasterxml.jackson.core.StreamWriteFeature WRITE_BIGDECIMAL_AS_PLAIN -> d
    com.fasterxml.jackson.core.StreamWriteFeature STRICT_DUPLICATE_DETECTION -> e
    com.fasterxml.jackson.core.StreamWriteFeature IGNORE_UNKNOWN -> f
    com.fasterxml.jackson.core.StreamWriteFeature USE_FAST_DOUBLE_WRITER -> g
    boolean _defaultState -> h
    int _mask -> i
    com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature -> j
    com.fasterxml.jackson.core.StreamWriteFeature[] $VALUES -> k
    15:15:com.fasterxml.jackson.core.StreamWriteFeature[] values() -> values
    15:15:com.fasterxml.jackson.core.StreamWriteFeature valueOf(java.lang.String) -> valueOf
    143:148:void <init>(java.lang.String,int,com.fasterxml.jackson.core.JsonGenerator$Feature) -> <init>
    158:164:int collectDefaults() -> collectDefaults
    168:168:boolean enabledByDefault() -> enabledByDefault
    170:170:boolean enabledIn(int) -> enabledIn
    172:172:int getMask() -> getMask
    174:174:com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature() -> mappedFeature
    15:126:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.TSFBuilder -> com.fasterxml.jackson.core.ab:
# {"fileName":"TSFBuilder.java","id":"sourceFile"}
    int DEFAULT_FACTORY_FEATURE_FLAGS -> e
    int DEFAULT_PARSER_FEATURE_FLAGS -> f
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> g
    int _factoryFeatures -> h
    int _streamReadFeatures -> i
    int _streamWriteFeatures -> j
    com.fasterxml.jackson.core.io.InputDecorator _inputDecorator -> k
    com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator -> l
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> m
    93:99:void <init>() -> <init>
    103:106:void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    110:114:void <init>(int,int,int) -> <init>
    118:118:int factoryFeaturesMask() -> factoryFeaturesMask
    119:119:int streamReadFeatures() -> streamReadFeatures
    120:120:int streamWriteFeatures() -> streamWriteFeatures
    122:122:com.fasterxml.jackson.core.io.InputDecorator inputDecorator() -> inputDecorator
    123:123:com.fasterxml.jackson.core.io.OutputDecorator outputDecorator() -> outputDecorator
    128:129:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.JsonFactory$Feature) -> enable
    133:134:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.JsonFactory$Feature) -> disable
    138:138:com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.JsonFactory$Feature,boolean) -> configure
    144:145:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.StreamReadFeature) -> enable
    149:153:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.StreamReadFeature,com.fasterxml.jackson.core.StreamReadFeature[]) -> enable
    157:158:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.StreamReadFeature) -> disable
    162:166:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.StreamReadFeature,com.fasterxml.jackson.core.StreamReadFeature[]) -> disable
    170:170:com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.StreamReadFeature,boolean) -> configure
    176:177:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.StreamWriteFeature) -> enable
    181:185:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.StreamWriteFeature,com.fasterxml.jackson.core.StreamWriteFeature[]) -> enable
    189:190:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.StreamWriteFeature) -> disable
    194:198:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.StreamWriteFeature,com.fasterxml.jackson.core.StreamWriteFeature[]) -> disable
    202:202:com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.StreamWriteFeature,boolean) -> configure
    215:215:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature) -> enable
    219:219:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> enable
    223:223:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature) -> disable
    227:227:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature,com.fasterxml.jackson.core.json.JsonReadFeature[]) -> disable
    231:231:com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.json.JsonReadFeature,boolean) -> configure
    235:236:com.fasterxml.jackson.core.TSFBuilder _failNonJSON(java.lang.Object) -> _failNonJSON
    242:242:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> enable
    246:246:com.fasterxml.jackson.core.TSFBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> enable
    250:250:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature) -> disable
    254:254:com.fasterxml.jackson.core.TSFBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature,com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> disable
    258:258:com.fasterxml.jackson.core.TSFBuilder configure(com.fasterxml.jackson.core.json.JsonWriteFeature,boolean) -> configure
    264:265:com.fasterxml.jackson.core.TSFBuilder inputDecorator(com.fasterxml.jackson.core.io.InputDecorator) -> inputDecorator
    269:270:com.fasterxml.jackson.core.TSFBuilder outputDecorator(com.fasterxml.jackson.core.io.OutputDecorator) -> outputDecorator
    281:282:com.fasterxml.jackson.core.TSFBuilder streamReadConstraints(com.fasterxml.jackson.core.StreamReadConstraints) -> streamReadConstraints
    com.fasterxml.jackson.core.JsonFactory build() -> build
    297:297:com.fasterxml.jackson.core.TSFBuilder _this() -> _this
    302:305:void _legacyEnable(com.fasterxml.jackson.core.JsonParser$Feature) -> _legacyEnable
    308:311:void _legacyDisable(com.fasterxml.jackson.core.JsonParser$Feature) -> _legacyDisable
    314:317:void _legacyEnable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> _legacyEnable
    319:322:void _legacyDisable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> _legacyDisable
    26:38:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.TokenStreamFactory -> com.fasterxml.jackson.core.ac:
# {"fileName":"TokenStreamFactory.java","id":"sourceFile"}
    long serialVersionUID -> a
    16:16:void <init>() -> <init>
    boolean requiresPropertyOrdering() -> requiresPropertyOrdering
    boolean canHandleBinaryNatively() -> canHandleBinaryNatively
    boolean canParseAsync() -> canParseAsync
    java.lang.Class getFormatReadFeatureType() -> getFormatReadFeatureType
    java.lang.Class getFormatWriteFeatureType() -> getFormatWriteFeatureType
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    java.lang.String getFormatName() -> getFormatName
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    int getParserFeatures() -> getParserFeatures
    int getGeneratorFeatures() -> getGeneratorFeatures
    int getFormatParserFeatures() -> getFormatParserFeatures
    int getFormatGeneratorFeatures() -> getFormatGeneratorFeatures
    com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(char[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() -> createNonBlockingByteArrayParser
    com.fasterxml.jackson.core.JsonParser createNonBlockingByteBufferParser() -> createNonBlockingByteBufferParser
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    229:229:java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput) -> _createDataOutputWrapper
    244:262:java.io.InputStream _optimizedStreamFromURL(java.net.URL) -> _optimizedStreamFromURL
    278:278:java.io.InputStream _fileInputStream(java.io.File) -> _fileInputStream
    294:294:java.io.OutputStream _fileOutputStream(java.io.File) -> _fileOutputStream
    307:327:void _checkRangeBoundsForByteArray(byte[],int,int) -> _checkRangeBoundsForByteArray
    333:345:void _checkRangeBoundsForCharArray(char[],int,int) -> _checkRangeBoundsForCharArray
    349:349:java.lang.Object _reportRangeError(java.lang.String) -> _reportRangeError
com.fasterxml.jackson.core.TreeCodec -> com.fasterxml.jackson.core.ad:
# {"fileName":"TreeCodec.java","id":"sourceFile"}
    11:11:void <init>() -> <init>
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode) -> writeTree
    23:23:com.fasterxml.jackson.core.TreeNode missingNode() -> missingNode
    32:32:com.fasterxml.jackson.core.TreeNode nullNode() -> nullNode
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
com.fasterxml.jackson.core.TreeNode -> com.fasterxml.jackson.core.ae:
# {"fileName":"TreeNode.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    int size() -> size
    boolean isValueNode() -> isValueNode
    boolean isContainerNode() -> isContainerNode
    boolean isMissingNode() -> isMissingNode
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
    com.fasterxml.jackson.core.TreeNode get(int) -> get
    com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    com.fasterxml.jackson.core.TreeNode path(int) -> path
    java.util.Iterator fieldNames() -> fieldNames
    com.fasterxml.jackson.core.TreeNode at(com.fasterxml.jackson.core.JsonPointer) -> at
    com.fasterxml.jackson.core.TreeNode at(java.lang.String) -> at
    com.fasterxml.jackson.core.JsonParser traverse() -> traverse
    com.fasterxml.jackson.core.JsonParser traverse(com.fasterxml.jackson.core.ObjectCodec) -> traverse
com.fasterxml.jackson.core.Version -> com.fasterxml.jackson.core.af:
# {"fileName":"Version.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.core.Version UNKNOWN_VERSION -> h
    int _majorVersion -> a
    int _minorVersion -> b
    int _patchLevel -> c
    java.lang.String _groupId -> d
    java.lang.String _artifactId -> e
    java.lang.String _snapshotInfo -> f
    51:52:void <init>(int,int,int,java.lang.String) -> <init>
    56:63:void <init>(int,int,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    72:72:com.fasterxml.jackson.core.Version unknownVersion() -> unknownVersion
    80:80:boolean isUnknownVersion() -> isUnknownVersion
    82:82:boolean isSnapshot() -> isSnapshot
    91:91:boolean isUknownVersion() -> isUknownVersion
    93:93:int getMajorVersion() -> getMajorVersion
    94:94:int getMinorVersion() -> getMinorVersion
    95:95:int getPatchLevel() -> getPatchLevel
    97:97:java.lang.String getGroupId() -> getGroupId
    98:98:java.lang.String getArtifactId() -> getArtifactId
    101:101:java.lang.String toFullString() -> toFullString
    105:112:java.lang.String toString() -> toString
    116:116:int hashCode() -> hashCode
    122:130:boolean equals(java.lang.Object) -> equals
    137:152:int compareTo(com.fasterxml.jackson.core.Version) -> compareTo
    16:16:int compareTo(java.lang.Object) -> compareTo
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.Versioned -> com.fasterxml.jackson.core.ag:
# {"fileName":"Versioned.java","id":"sourceFile"}
    com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.core.async.ByteArrayFeeder -> com.fasterxml.jackson.core.async.a:
# {"fileName":"ByteArrayFeeder.java","id":"sourceFile"}
    void feedInput(byte[],int,int) -> feedInput
com.fasterxml.jackson.core.async.ByteBufferFeeder -> com.fasterxml.jackson.core.async.b:
# {"fileName":"ByteBufferFeeder.java","id":"sourceFile"}
    void feedInput(java.nio.ByteBuffer) -> feedInput
com.fasterxml.jackson.core.async.NonBlockingInputFeeder -> com.fasterxml.jackson.core.async.c:
# {"fileName":"NonBlockingInputFeeder.java","id":"sourceFile"}
    boolean needMoreInput() -> needMoreInput
    void endOfInput() -> endOfInput
com.fasterxml.jackson.core.async.package-info -> com.fasterxml.jackson.core.async.d:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.base.GeneratorBase -> com.fasterxml.jackson.core.base.a:
# {"fileName":"GeneratorBase.java","id":"sourceFile"}
    int SURR1_FIRST -> e
    int SURR1_LAST -> f
    int SURR2_FIRST -> g
    int SURR2_LAST -> h
    int DERIVED_FEATURES_MASK -> i
    java.lang.String WRITE_BINARY -> j
    java.lang.String WRITE_BOOLEAN -> k
    java.lang.String WRITE_NULL -> l
    java.lang.String WRITE_NUMBER -> m
    java.lang.String WRITE_RAW -> n
    java.lang.String WRITE_STRING -> o
    int MAX_BIG_DECIMAL_SCALE -> p
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> q
    int _features -> r
    boolean _cfgNumbersAsStrings -> s
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> t
    boolean _closed -> u
    106:113:void <init>(int,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    118:123:void <init>(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.json.JsonWriteContext) -> <init>
    133:133:com.fasterxml.jackson.core.Version version() -> version
    137:137:java.lang.Object getCurrentValue() -> getCurrentValue
    142:145:void setCurrentValue(java.lang.Object) -> setCurrentValue
    154:154:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    155:155:int getFeatureMask() -> getFeatureMask
    162:176:com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    182:193:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    199:204:com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    209:216:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    231:251:void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    255:258:com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    262:263:com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    266:266:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    279:279:com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    295:299:void writeStartObject(java.lang.Object) -> writeStartObject
    308:309:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    323:324:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    327:329:void writeRawValue(java.lang.String) -> writeRawValue
    332:334:void writeRawValue(java.lang.String,int,int) -> writeRawValue
    337:339:void writeRawValue(char[],int,int) -> writeRawValue
    342:344:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    349:350:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    379:394:void writeObject(java.lang.Object) -> writeObject
    399:407:void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void flush() -> flush
    416:416:void close() -> close
    417:417:boolean isClosed() -> isClosed
    void _releaseBuffers() -> _releaseBuffers
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    453:453:com.fasterxml.jackson.core.PrettyPrinter _constructDefaultPrettyPrinter() -> _constructDefaultPrettyPrinter
    469:479:java.lang.String _asString(java.math.BigDecimal) -> _asString
    492:498:int _decodeSurrogate(int,int) -> _decodeSurrogate
    511:531:void _checkRangeBoundsForByteArray(byte[],int,int) -> _checkRangeBoundsForByteArray
    537:549:void _checkRangeBoundsForCharArray(char[],int,int) -> _checkRangeBoundsForCharArray
    555:567:void _checkRangeBoundsForString(java.lang.String,int,int) -> _checkRangeBoundsForString
    32:35:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.ParserBase -> com.fasterxml.jackson.core.base.b:
# {"fileName":"ParserBase.java","id":"sourceFile"}
    com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_READ_CAPABILITIES -> d
    com.fasterxml.jackson.core.io.IOContext _ioContext -> e
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> f
    boolean _closed -> g
    int _inputPtr -> h
    int _inputEnd -> i
    long _currInputProcessed -> j
    int _currInputRow -> k
    int _currInputRowStart -> l
    long _tokenInputTotal -> m
    int _tokenInputRow -> n
    int _tokenInputCol -> o
    com.fasterxml.jackson.core.json.JsonReadContext _parsingContext -> p
    com.fasterxml.jackson.core.JsonToken _nextToken -> q
    com.fasterxml.jackson.core.util.TextBuffer _textBuffer -> r
    char[] _nameCopyBuffer -> s
    boolean _nameCopied -> t
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder -> u
    byte[] _binaryValue -> v
    int _numTypesValid -> w
    int _numberInt -> x
    long _numberLong -> y
    float _numberFloat -> z
    double _numberDouble -> A
    java.math.BigInteger _numberBigInt -> B
    java.math.BigDecimal _numberBigDecimal -> C
    java.lang.String _numberString -> D
    boolean _numberNegative -> E
    int _intLength -> F
    int _fractLength -> G
    int _expLength -> H
    89:263:void <init>(com.fasterxml.jackson.core.io.IOContext,int) -> <init>
    265:265:com.fasterxml.jackson.core.Version version() -> version
    269:269:java.lang.Object getCurrentValue() -> getCurrentValue
    274:275:void setCurrentValue(java.lang.Object) -> setCurrentValue
    285:291:com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    296:300:com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    306:311:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    316:323:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    337:348:void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    362:368:java.lang.String getCurrentName() -> getCurrentName
    373:384:void overrideCurrentName(java.lang.String) -> overrideCurrentName
    387:399:void close() -> close
    401:401:boolean isClosed() -> isClosed
    402:402:com.fasterxml.jackson.core.json.JsonReadContext getParsingContext() -> getParsingContext
    411:414:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    423:424:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    437:439:boolean hasTextCharacters() -> hasTextCharacters
    446:454:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    463:463:long getTokenCharacterOffset() -> getTokenCharacterOffset
    464:464:int getTokenLineNr() -> getTokenLineNr
    467:468:int getTokenColumnNr() -> getTokenColumnNr
    void _closeInput() -> _closeInput
    495:501:void _releaseBuffers() -> _releaseBuffers
    510:518:void _handleEOF() -> _handleEOF
    529:530:int _eofAsNextChar() -> _eofAsNextChar
    541:546:com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    560:563:com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int) -> reset
    570:576:com.fasterxml.jackson.core.JsonToken resetInt(boolean,int) -> resetInt
    583:589:com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    595:598:com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    603:608:boolean isNaN() -> isNaN
    620:648:java.lang.Number getNumberValue() -> getNumberValue
    655:683:java.lang.Number getNumberValueExact() -> getNumberValueExact
    689:727:java.lang.Object getNumberValueDeferred() -> getNumberValueDeferred
    733:758:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    764:772:int getIntValue() -> getIntValue
    778:786:long getLongValue() -> getLongValue
    792:800:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    814:822:float getFloatValue() -> getFloatValue
    828:836:double getDoubleValue() -> getDoubleValue
    842:850:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    855:855:com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    881:937:void _parseNumericValue(int) -> _parseNumericValue
    945:962:int _parseIntValue() -> _parseIntValue
    974:993:void _parseSlowFloat(int) -> _parseSlowFloat
    997:1011:void _parseSlowInt(int) -> _parseSlowInt
    1016:1021:void _reportTooLongIntegral(int,java.lang.String) -> _reportTooLongIntegral
    1032:1064:void convertNumberToInt() -> convertNumberToInt
    1068:1095:void convertNumberToLong() -> convertNumberToLong
    1099:1116:void convertNumberToBigInteger() -> convertNumberToBigInteger
    1126:1152:void convertNumberToDouble() -> convertNumberToDouble
    1162:1188:void convertNumberToFloat() -> convertNumberToFloat
    1198:1215:void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    1221:1222:java.math.BigInteger _convertBigDecimalToBigInteger(java.math.BigDecimal) -> _convertBigDecimalToBigInteger
    1232:1246:java.math.BigInteger _getBigInteger() -> _getBigInteger
    1256:1270:java.math.BigDecimal _getBigDecimal() -> _getBigDecimal
    1280:1289:double _getNumberDouble() -> _getNumberDouble
    1299:1308:float _getNumberFloat() -> _getNumberFloat
    1319:1321:void createChildArrayContext(int,int) -> createChildArrayContext
    1325:1327:void createChildObjectContext(int,int) -> createChildObjectContext
    1336:1341:void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    1346:1354:char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    1371:1376:void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    1388:1388:java.lang.String _validJsonTokenList() -> _validJsonTokenList
    1402:1405:java.lang.String _validJsonValueList() -> _validJsonValueList
    1424:1424:char _decodeEscaped() -> _decodeEscaped
    1430:1447:int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int) -> _decodeBase64Escape
    1452:1470:int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int) -> _decodeBase64Escape
    1474:1474:java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int) -> reportInvalidBase64Char
    1483:1497:java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
    1503:1504:void _handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant) -> _handleBase64MissingPadding
    1519:1522:java.lang.Object _getSourceReference() -> _getSourceReference
    1534:1537:com.fasterxml.jackson.core.io.ContentReference _contentReference() -> _contentReference
    1542:1545:int[] growArrayBy(int[],int) -> growArrayBy
    1557:1558:void loadMoreGuaranteed() -> loadMoreGuaranteed
    1561:1561:boolean loadMore() -> loadMore
    1564:1564:void _finishString() -> _finishString
    24:24:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.ParserMinimalBase -> com.fasterxml.jackson.core.base.c:
# {"fileName":"ParserMinimalBase.java","id":"sourceFile"}
    int INT_TAB -> I
    int INT_LF -> J
    int INT_CR -> K
    int INT_SPACE -> L
    int INT_LBRACKET -> M
    int INT_RBRACKET -> N
    int INT_LCURLY -> O
    int INT_RCURLY -> P
    int INT_QUOTE -> Q
    int INT_APOS -> R
    int INT_BACKSLASH -> S
    int INT_SLASH -> T
    int INT_ASTERISK -> U
    int INT_COLON -> V
    int INT_COMMA -> W
    int INT_HASH -> X
    int INT_0 -> Y
    int INT_9 -> Z
    int INT_MINUS -> aa
    int INT_PLUS -> ab
    int INT_PERIOD -> ac
    int INT_e -> ad
    int INT_E -> ae
    char CHAR_NULL -> af
    byte[] NO_BYTES -> ag
    int[] NO_INTS -> ah
    int NR_UNKNOWN -> ai
    int NR_INT -> aj
    int NR_LONG -> ak
    int NR_BIGINT -> al
    int NR_DOUBLE -> am
    int NR_BIGDECIMAL -> an
    int NR_FLOAT -> ao
    java.math.BigInteger BI_MIN_INT -> ap
    java.math.BigInteger BI_MAX_INT -> aq
    java.math.BigInteger BI_MIN_LONG -> ar
    java.math.BigInteger BI_MAX_LONG -> as
    java.math.BigDecimal BD_MIN_LONG -> at
    java.math.BigDecimal BD_MAX_LONG -> au
    java.math.BigDecimal BD_MIN_INT -> av
    java.math.BigDecimal BD_MAX_INT -> aw
    long MIN_INT_L -> ax
    long MAX_INT_L -> ay
    double MIN_LONG_D -> az
    double MAX_LONG_D -> aA
    double MIN_INT_D -> aB
    double MAX_INT_D -> aC
    int MAX_ERROR_TOKEN_LENGTH -> aD
    com.fasterxml.jackson.core.JsonToken _currToken -> aE
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> aF
    159:159:void <init>() -> <init>
    160:160:void <init>(int) -> <init>
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    186:186:com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    188:189:int currentTokenId() -> currentTokenId
    192:192:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    196:197:int getCurrentTokenId() -> getCurrentTokenId
    200:200:boolean hasCurrentToken() -> hasCurrentToken
    202:206:boolean hasTokenId(int) -> hasTokenId
    210:210:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    213:213:boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    214:214:boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    215:215:boolean isExpectedNumberIntToken() -> isExpectedNumberIntToken
    221:225:com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    231:262:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    294:298:void clearCurrentToken() -> clearCurrentToken
    300:300:com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    boolean hasTextCharacters() -> hasTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    333:364:boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    370:374:int getValueAsInt() -> getValueAsInt
    380:405:int getValueAsInt(int) -> getValueAsInt
    411:415:long getValueAsLong() -> getValueAsLong
    421:445:long getValueAsLong(long) -> getValueAsLong
    451:476:double getValueAsDouble(double) -> getValueAsDouble
    482:482:java.lang.String getValueAsString() -> getValueAsString
    487:496:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    519:523:void _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    545:545:boolean _hasTextualNull(java.lang.String) -> _hasTextualNull
    562:567:java.lang.Object _reportUnexpectedNumberChar(int,java.lang.String) -> _reportUnexpectedNumberChar
    572:573:void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    586:587:void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    597:598:void reportOverflowInt() -> reportOverflowInt
    602:603:void reportOverflowInt(java.lang.String) -> reportOverflowInt
    607:610:void reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> reportOverflowInt
    620:621:void reportOverflowLong() -> reportOverflowLong
    625:626:void reportOverflowLong(java.lang.String) -> reportOverflowLong
    630:633:void reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> reportOverflowLong
    638:638:void _reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class) -> _reportInputCoercion
    643:650:java.lang.String _longIntegerDesc(java.lang.String) -> _longIntegerDesc
    655:662:java.lang.String _longNumberDesc(java.lang.String) -> _longNumberDesc
    667:675:void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    678:679:void _reportInvalidEOF() -> _reportInvalidEOF
    684:693:void _reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken) -> _reportInvalidEOFInValue
    697:697:void _reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> _reportInvalidEOF
    707:708:void _reportInvalidEOFInValue() -> _reportInvalidEOFInValue
    718:718:void _reportInvalidEOF(java.lang.String) -> _reportInvalidEOF
    722:723:void _reportMissingRootWS(int) -> _reportMissingRootWS
    726:729:void _throwInvalidSpace(int) -> _throwInvalidSpace
    739:746:java.lang.String _getCharDesc(int) -> _getCharDesc
    750:750:void _reportError(java.lang.String) -> _reportError
    755:755:void _reportError(java.lang.String,java.lang.Object) -> _reportError
    760:760:void _reportError(java.lang.String,java.lang.Object,java.lang.Object) -> _reportError
    764:764:void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    768:769:void _throwInternal() -> _throwInternal
    772:772:com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
    777:781:byte[] _asciiBytes(java.lang.String) -> _asciiBytes
    787:789:java.lang.String _ascii(byte[]) -> _ascii
    62:107:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.base.package-info -> com.fasterxml.jackson.core.base.d:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.exc.InputCoercionException -> com.fasterxml.jackson.core.exc.a:
# {"fileName":"InputCoercionException.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.core.JsonToken _inputType -> b
    java.lang.Class _targetType -> c
    40:43:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class) -> <init>
    53:54:com.fasterxml.jackson.core.exc.InputCoercionException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
    59:60:com.fasterxml.jackson.core.exc.InputCoercionException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    70:70:com.fasterxml.jackson.core.JsonToken getInputType() -> getInputType
    80:80:java.lang.Class getTargetType() -> getTargetType
    15:15:com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    15:15:com.fasterxml.jackson.core.exc.StreamReadException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
com.fasterxml.jackson.core.exc.StreamConstraintsException -> com.fasterxml.jackson.core.exc.b:
# {"fileName":"StreamConstraintsException.java","id":"sourceFile"}
    long serialVersionUID -> b
    19:20:void <init>(java.lang.String) -> <init>
    23:24:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
com.fasterxml.jackson.core.exc.StreamReadException -> com.fasterxml.jackson.core.exc.c:
# {"fileName":"StreamReadException.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.core.JsonParser _processor -> e
    com.fasterxml.jackson.core.util.RequestPayload _requestPayload -> f
    30:32:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    35:37:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> <init>
    40:42:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    47:49:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    52:53:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    57:58:void <init>(java.lang.String) -> <init>
    com.fasterxml.jackson.core.exc.StreamReadException withParser(com.fasterxml.jackson.core.JsonParser) -> withParser
    com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload) -> withRequestPayload
    86:86:com.fasterxml.jackson.core.JsonParser getProcessor() -> getProcessor
    96:96:com.fasterxml.jackson.core.util.RequestPayload getRequestPayload() -> getRequestPayload
    106:106:java.lang.String getRequestPayloadAsString() -> getRequestPayloadAsString
    114:118:java.lang.String getMessage() -> getMessage
    14:14:java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.exc.StreamWriteException -> com.fasterxml.jackson.core.exc.d:
# {"fileName":"StreamWriteException.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.core.JsonGenerator _processor -> b
    21:23:void <init>(java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    26:28:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    31:33:void <init>(java.lang.String,java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator) -> <init>
    com.fasterxml.jackson.core.exc.StreamWriteException withGenerator(com.fasterxml.jackson.core.JsonGenerator) -> withGenerator
    46:46:com.fasterxml.jackson.core.JsonGenerator getProcessor() -> getProcessor
    13:13:java.lang.Object getProcessor() -> getProcessor
com.fasterxml.jackson.core.exc.package-info -> com.fasterxml.jackson.core.exc.e:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate -> com.fasterxml.jackson.core.filter.a:
# {"fileName":"FilteringGeneratorDelegate.java","id":"sourceFile"}
    com.fasterxml.jackson.core.filter.TokenFilter rootFilter -> e
    boolean _allowMultipleMatches -> f
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion _inclusion -> g
    com.fasterxml.jackson.core.filter.TokenFilterContext _filterContext -> h
    com.fasterxml.jackson.core.filter.TokenFilter _itemFilter -> i
    int _matchCount -> j
    97:98:void <init>(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.filter.TokenFilter,boolean,boolean) -> <init>
    112:119:void <init>(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.filter.TokenFilter,com.fasterxml.jackson.core.filter.TokenFilter$Inclusion,boolean) -> <init>
    127:127:com.fasterxml.jackson.core.filter.TokenFilter getFilter() -> getFilter
    130:130:com.fasterxml.jackson.core.JsonStreamContext getFilterContext() -> getFilterContext
    140:140:int getMatchCount() -> getMatchCount
    155:155:com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    168:197:void writeStartArray() -> writeStartArray
    203:231:void writeStartArray(int) -> writeStartArray
    236:264:void writeStartArray(java.lang.Object) -> writeStartArray
    269:297:void writeStartArray(java.lang.Object,int) -> writeStartArray
    302:307:void writeEndArray() -> writeEndArray
    312:342:void writeStartObject() -> writeStartObject
    347:377:void writeStartObject(java.lang.Object) -> writeStartObject
    382:408:void writeStartObject(java.lang.Object,int) -> writeStartObject
    413:417:void writeEndObject() -> writeEndObject
    422:437:void writeFieldName(java.lang.String) -> writeFieldName
    442:457:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    462:463:void writeFieldId(long) -> writeFieldId
    474:490:void writeString(java.lang.String) -> writeString
    495:512:void writeString(char[],int,int) -> writeString
    517:533:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    537:555:void writeString(java.io.Reader,int) -> writeString
    560:563:void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    569:572:void writeUTF8String(byte[],int,int) -> writeUTF8String
    583:586:void writeRaw(java.lang.String) -> writeRaw
    591:594:void writeRaw(java.lang.String,int,int) -> writeRaw
    599:602:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    607:610:void writeRaw(char[],int,int) -> writeRaw
    615:618:void writeRaw(char) -> writeRaw
    623:626:void writeRawValue(java.lang.String) -> writeRawValue
    631:634:void writeRawValue(java.lang.String,int,int) -> writeRawValue
    639:642:void writeRawValue(char[],int,int) -> writeRawValue
    647:650:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    655:658:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    670:686:void writeNumber(short) -> writeNumber
    691:707:void writeNumber(int) -> writeNumber
    712:728:void writeNumber(long) -> writeNumber
    733:749:void writeNumber(java.math.BigInteger) -> writeNumber
    754:770:void writeNumber(double) -> writeNumber
    775:791:void writeNumber(float) -> writeNumber
    796:812:void writeNumber(java.math.BigDecimal) -> writeNumber
    817:833:void writeNumber(java.lang.String) -> writeNumber
    838:854:void writeNumber(char[],int,int) -> writeNumber
    859:875:void writeBoolean(boolean) -> writeBoolean
    880:896:void writeNull() -> writeNull
    907:910:void writeOmittedField(java.lang.String) -> writeOmittedField
    923:926:void writeObjectId(java.lang.Object) -> writeObjectId
    930:933:void writeObjectRef(java.lang.Object) -> writeObjectRef
    937:940:void writeTypeId(java.lang.Object) -> writeTypeId
    1017:1018:void _checkParentPath() -> _checkParentPath
    1022:1037:void _checkParentPath(boolean) -> _checkParentPath
    1048:1061:void _checkPropertyParentPath() -> _checkPropertyParentPath
    1065:1075:boolean _checkBinaryWrite() -> _checkBinaryWrite
    1080:1090:boolean _checkRawValueWrite() -> _checkRawValueWrite
com.fasterxml.jackson.core.filter.FilteringParserDelegate -> com.fasterxml.jackson.core.filter.b:
# {"fileName":"FilteringParserDelegate.java","id":"sourceFile"}
    com.fasterxml.jackson.core.filter.TokenFilter rootFilter -> d
    boolean _allowMultipleMatches -> e
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion _inclusion -> f
    com.fasterxml.jackson.core.JsonToken _currToken -> g
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> h
    com.fasterxml.jackson.core.filter.TokenFilterContext _headContext -> i
    com.fasterxml.jackson.core.filter.TokenFilterContext _exposedContext -> j
    com.fasterxml.jackson.core.filter.TokenFilter _itemFilter -> k
    int _matchCount -> l
    108:109:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.filter.TokenFilter,boolean,boolean) -> <init>
    120:127:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.filter.TokenFilter,com.fasterxml.jackson.core.filter.TokenFilter$Inclusion,boolean) -> <init>
    135:135:com.fasterxml.jackson.core.filter.TokenFilter getFilter() -> getFilter
    144:144:int getMatchCount() -> getMatchCount
    153:153:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    154:154:com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    158:158:int getCurrentTokenId() -> getCurrentTokenId
    161:162:int currentTokenId() -> currentTokenId
    165:165:boolean hasCurrentToken() -> hasCurrentToken
    167:171:boolean hasTokenId(int) -> hasTokenId
    175:175:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    178:178:boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    179:179:boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    181:181:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    185:185:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    191:196:java.lang.String getCurrentName() -> getCurrentName
    202:207:java.lang.String currentName() -> currentName
    218:222:void clearCurrentToken() -> clearCurrentToken
    225:225:com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    232:232:void overrideCurrentName(java.lang.String) -> overrideCurrentName
    252:476:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    487:664:com.fasterxml.jackson.core.JsonToken _nextToken2() -> _nextToken2
    673:835:com.fasterxml.jackson.core.JsonToken _nextTokenWithBuffering(com.fasterxml.jackson.core.filter.TokenFilterContext) -> _nextTokenWithBuffering
    847:870:com.fasterxml.jackson.core.JsonToken _nextBuffered(com.fasterxml.jackson.core.filter.TokenFilterContext) -> _nextBuffered
    876:880:boolean _verifyAllowedMatches() -> _verifyAllowedMatches
    886:890:com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    901:921:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    934:937:java.lang.String getText() -> getText
    941:944:boolean hasTextCharacters() -> hasTextCharacters
    950:953:char[] getTextCharacters() -> getTextCharacters
    957:960:int getTextLength() -> getTextLength
    963:966:int getTextOffset() -> getTextOffset
    976:976:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    979:979:boolean getBooleanValue() -> getBooleanValue
    982:982:byte getByteValue() -> getByteValue
    985:985:short getShortValue() -> getShortValue
    988:988:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    991:991:double getDoubleValue() -> getDoubleValue
    994:994:float getFloatValue() -> getFloatValue
    997:997:int getIntValue() -> getIntValue
    1000:1000:long getLongValue() -> getLongValue
    1003:1003:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    1006:1006:java.lang.Number getNumberValue() -> getNumberValue
    1014:1014:int getValueAsInt() -> getValueAsInt
    1015:1015:int getValueAsInt(int) -> getValueAsInt
    1016:1016:long getValueAsLong() -> getValueAsLong
    1017:1017:long getValueAsLong(long) -> getValueAsLong
    1018:1018:double getValueAsDouble() -> getValueAsDouble
    1019:1019:double getValueAsDouble(double) -> getValueAsDouble
    1020:1020:boolean getValueAsBoolean() -> getValueAsBoolean
    1021:1021:boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    1024:1027:java.lang.String getValueAsString() -> getValueAsString
    1030:1033:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    1042:1042:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    1043:1043:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    1044:1044:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    1045:1045:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    1054:1057:com.fasterxml.jackson.core.JsonStreamContext _filterContext() -> _filterContext
com.fasterxml.jackson.core.filter.JsonPointerBasedFilter -> com.fasterxml.jackson.core.filter.c:
# {"fileName":"JsonPointerBasedFilter.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonPointer _pathToMatch -> a
    18:19:void <init>(java.lang.String) -> <init>
    21:23:void <init>(com.fasterxml.jackson.core.JsonPointer) -> <init>
    27:34:com.fasterxml.jackson.core.filter.TokenFilter includeElement(int) -> includeElement
    39:46:com.fasterxml.jackson.core.filter.TokenFilter includeProperty(java.lang.String) -> includeProperty
    51:51:com.fasterxml.jackson.core.filter.TokenFilter filterStartArray() -> filterStartArray
    56:56:com.fasterxml.jackson.core.filter.TokenFilter filterStartObject() -> filterStartObject
    62:62:boolean _includeScalar() -> _includeScalar
    67:67:java.lang.String toString() -> toString
com.fasterxml.jackson.core.filter.TokenFilter -> com.fasterxml.jackson.core.filter.d:
# {"fileName":"TokenFilter.java","id":"sourceFile"}
    com.fasterxml.jackson.core.filter.TokenFilter INCLUDE_ALL -> b
    57:57:void <init>() -> <init>
    89:89:com.fasterxml.jackson.core.filter.TokenFilter filterStartObject() -> filterStartObject
    116:116:com.fasterxml.jackson.core.filter.TokenFilter filterStartArray() -> filterStartArray
    125:125:void filterFinishObject() -> filterFinishObject
    133:133:void filterFinishArray() -> filterFinishArray
    166:166:com.fasterxml.jackson.core.filter.TokenFilter includeProperty(java.lang.String) -> includeProperty
    194:194:com.fasterxml.jackson.core.filter.TokenFilter includeElement(int) -> includeElement
    222:222:com.fasterxml.jackson.core.filter.TokenFilter includeRootValue(int) -> includeRootValue
    247:247:boolean includeValue(com.fasterxml.jackson.core.JsonParser) -> includeValue
    266:266:boolean includeBoolean(boolean) -> includeBoolean
    277:277:boolean includeNull() -> includeNull
    290:290:boolean includeString(java.lang.String) -> includeString
    310:310:boolean includeString(java.io.Reader,int) -> includeString
    325:325:boolean includeNumber(int) -> includeNumber
    338:338:boolean includeNumber(long) -> includeNumber
    351:351:boolean includeNumber(float) -> includeNumber
    364:364:boolean includeNumber(double) -> includeNumber
    377:377:boolean includeNumber(java.math.BigDecimal) -> includeNumber
    390:390:boolean includeNumber(java.math.BigInteger) -> includeNumber
    403:403:boolean includeBinary() -> includeBinary
    418:418:boolean includeRawValue() -> includeRawValue
    431:431:boolean includeEmbeddedValue(java.lang.Object) -> includeEmbeddedValue
    446:446:boolean includeEmptyArray(boolean) -> includeEmptyArray
    461:461:boolean includeEmptyObject(boolean) -> includeEmptyObject
    472:475:java.lang.String toString() -> toString
    493:493:boolean _includeScalar() -> _includeScalar
    53:53:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.filter.TokenFilter$Inclusion -> com.fasterxml.jackson.core.filter.d$a:
# {"fileName":"TokenFilter.java","id":"sourceFile"}
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion ONLY_INCLUDE_ALL -> a
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion INCLUDE_ALL_AND_PATH -> b
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion INCLUDE_NON_NULL -> c
    com.fasterxml.jackson.core.filter.TokenFilter$Inclusion[] $VALUES -> d
    23:23:com.fasterxml.jackson.core.filter.TokenFilter$Inclusion[] values() -> values
    23:23:com.fasterxml.jackson.core.filter.TokenFilter$Inclusion valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    23:39:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.filter.TokenFilterContext -> com.fasterxml.jackson.core.filter.e:
# {"fileName":"TokenFilterContext.java","id":"sourceFile"}
    com.fasterxml.jackson.core.filter.TokenFilterContext _parent -> g
    com.fasterxml.jackson.core.filter.TokenFilterContext _child -> h
    java.lang.String _currentName -> i
    com.fasterxml.jackson.core.filter.TokenFilter _filter -> j
    boolean _startHandled -> k
    boolean _needToHandleName -> l
    71:78:void <init>(int,com.fasterxml.jackson.core.filter.TokenFilterContext,com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> <init>
    83:89:com.fasterxml.jackson.core.filter.TokenFilterContext reset(int,com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> reset
    100:100:com.fasterxml.jackson.core.filter.TokenFilterContext createRootContext(com.fasterxml.jackson.core.filter.TokenFilter) -> createRootContext
    104:109:com.fasterxml.jackson.core.filter.TokenFilterContext createChildArrayContext(com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> createChildArrayContext
    113:118:com.fasterxml.jackson.core.filter.TokenFilterContext createChildObjectContext(com.fasterxml.jackson.core.filter.TokenFilter,boolean) -> createChildObjectContext
    128:130:com.fasterxml.jackson.core.filter.TokenFilter setFieldName(java.lang.String) -> setFieldName
    143:151:com.fasterxml.jackson.core.filter.TokenFilter checkValue(com.fasterxml.jackson.core.filter.TokenFilter) -> checkValue
    165:169:void ensureFieldNameWritten(com.fasterxml.jackson.core.JsonGenerator) -> ensureFieldNameWritten
    182:202:void writePath(com.fasterxml.jackson.core.JsonGenerator) -> writePath
    206:230:void _writePath(com.fasterxml.jackson.core.JsonGenerator) -> _writePath
    234:250:com.fasterxml.jackson.core.filter.TokenFilterContext closeArray(com.fasterxml.jackson.core.JsonGenerator) -> closeArray
    255:271:com.fasterxml.jackson.core.filter.TokenFilterContext closeObject(com.fasterxml.jackson.core.JsonGenerator) -> closeObject
    275:279:void skipParentChecks() -> skipParentChecks
    288:288:java.lang.Object getCurrentValue() -> getCurrentValue
    291:291:void setCurrentValue(java.lang.Object) -> setCurrentValue
    293:293:com.fasterxml.jackson.core.filter.TokenFilterContext getParent() -> getParent
    294:294:java.lang.String getCurrentName() -> getCurrentName
    296:296:boolean hasCurrentName() -> hasCurrentName
    298:298:com.fasterxml.jackson.core.filter.TokenFilter getFilter() -> getFilter
    299:299:boolean isStartHandled() -> isStartHandled
    302:315:com.fasterxml.jackson.core.JsonToken nextTokenToRead() -> nextTokenToRead
    319:331:com.fasterxml.jackson.core.filter.TokenFilterContext findChildOf(com.fasterxml.jackson.core.filter.TokenFilterContext) -> findChildOf
    337:359:void appendDesc(java.lang.StringBuilder) -> appendDesc
    366:368:java.lang.String toString() -> toString
    13:13:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.format.DataFormatDetector -> com.fasterxml.jackson.core.format.a:
# {"fileName":"DataFormatDetector.java","id":"sourceFile"}
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> a
    com.fasterxml.jackson.core.JsonFactory[] _detectors -> b
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> c
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> d
    int _maxInputLookahead -> e
    58:60:void <init>(com.fasterxml.jackson.core.JsonFactory[]) -> <init>
    63:64:void <init>(java.util.Collection) -> <init>
    67:72:void <init>(com.fasterxml.jackson.core.JsonFactory[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int) -> <init>
    84:87:com.fasterxml.jackson.core.format.DataFormatDetector withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withOptimalMatch
    99:102:com.fasterxml.jackson.core.format.DataFormatDetector withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withMinimalMatch
    114:117:com.fasterxml.jackson.core.format.DataFormatDetector withMaxInputLookahead(int) -> withMaxInputLookahead
    139:139:com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(java.io.InputStream) -> findFormat
    154:154:com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[]) -> findFormat
    173:173:com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[],int,int) -> findFormat
    183:194:java.lang.String toString() -> toString
    204:226:com.fasterxml.jackson.core.format.DataFormatMatcher _findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std) -> _findFormat
com.fasterxml.jackson.core.format.DataFormatMatcher -> com.fasterxml.jackson.core.format.b:
# {"fileName":"DataFormatMatcher.java","id":"sourceFile"}
    java.io.InputStream _originalStream -> a
    byte[] _bufferedData -> b
    int _bufferedStart -> c
    int _bufferedLength -> d
    com.fasterxml.jackson.core.JsonFactory _match -> e
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> f
    45:59:void <init>(java.io.InputStream,byte[],int,int,com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength) -> <init>
    73:73:boolean hasMatch() -> hasMatch
    82:82:com.fasterxml.jackson.core.format.MatchStrength getMatchStrength() -> getMatchStrength
    90:90:com.fasterxml.jackson.core.JsonFactory getMatch() -> getMatch
    102:102:java.lang.String getMatchedFormatName() -> getMatchedFormatName
    115:121:com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> createParserWithMatch
    134:137:java.io.InputStream getDataStream() -> getDataStream
com.fasterxml.jackson.core.format.InputAccessor -> com.fasterxml.jackson.core.format.c:
# {"fileName":"InputAccessor.java","id":"sourceFile"}
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
com.fasterxml.jackson.core.format.InputAccessor$Std -> com.fasterxml.jackson.core.format.c$a:
# {"fileName":"InputAccessor.java","id":"sourceFile"}
    java.io.InputStream _in -> a
    byte[] _buffer -> b
    int _bufferedStart -> c
    int _bufferedEnd -> d
    int _ptr -> e
    71:77:void <init>(java.io.InputStream,byte[]) -> <init>
    82:83:void <init>(byte[]) -> <init>
    88:94:void <init>(byte[],int,int) -> <init>
    99:114:boolean hasMoreBytes() -> hasMoreBytes
    121:126:byte nextByte() -> nextByte
    131:132:void reset() -> reset
    142:142:com.fasterxml.jackson.core.format.DataFormatMatcher createMatcher(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength) -> createMatcher
com.fasterxml.jackson.core.format.MatchStrength -> com.fasterxml.jackson.core.format.d:
# {"fileName":"MatchStrength.java","id":"sourceFile"}
    com.fasterxml.jackson.core.format.MatchStrength NO_MATCH -> a
    com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE -> b
    com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH -> c
    com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH -> d
    com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH -> e
    com.fasterxml.jackson.core.format.MatchStrength[] $VALUES -> f
    10:10:com.fasterxml.jackson.core.format.MatchStrength[] values() -> values
    10:10:com.fasterxml.jackson.core.format.MatchStrength valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    10:60:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.format.package-info -> com.fasterxml.jackson.core.format.e:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.io.BigDecimalParser -> com.fasterxml.jackson.core.io.a:
# {"fileName":"BigDecimalParser.java","id":"sourceFile"}
    int MAX_CHARS_TO_REPORT -> a
    28:28:void <init>() -> <init>
    31:31:java.math.BigDecimal parse(java.lang.String) -> parse
    36:56:java.math.BigDecimal parse(char[],int,int) -> parse
    62:62:java.math.BigDecimal parse(char[]) -> parse
    67:72:java.math.BigDecimal parseWithFastParser(java.lang.String) -> parseWithFastParser
    78:83:java.math.BigDecimal parseWithFastParser(char[],int,int) -> parseWithFastParser
    88:182:java.math.BigDecimal parseBigDecimal(char[],int,int,int) -> parseBigDecimal
    186:192:int adjustScale(int,long) -> adjustScale
    197:212:java.math.BigDecimal toBigDecimalRec(char[],int,int,int,int) -> toBigDecimalRec
com.fasterxml.jackson.core.io.BigIntegerParser -> com.fasterxml.jackson.core.io.b:
# {"fileName":"BigIntegerParser.java","id":"sourceFile"}
    17:17:void <init>() -> <init>
    21:26:java.math.BigInteger parseWithFastParser(java.lang.String) -> parseWithFastParser
    32:38:java.math.BigInteger parseWithFastParser(java.lang.String,int) -> parseWithFastParser
com.fasterxml.jackson.core.io.CharTypes -> com.fasterxml.jackson.core.io.c:
# {"fileName":"CharTypes.java","id":"sourceFile"}
    char[] HC -> a
    char[] HClower -> b
    byte[] HB -> c
    byte[] HBlower -> d
    int[] sInputCodes -> e
    int[] sInputCodesUTF8 -> f
    int[] sInputCodesJsNames -> g
    int[] sInputCodesUtf8JsNames -> h
    int[] sInputCodesComment -> i
    int[] sInputCodesWS -> j
    int[] sOutputEscapes128 -> k
    int[] sHexValues -> l
    5:5:void <init>() -> <init>
    198:198:int[] getInputCodeLatin1() -> getInputCodeLatin1
    199:199:int[] getInputCodeUtf8() -> getInputCodeUtf8
    201:201:int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    202:202:int[] getInputCodeUtf8JsNames() -> getInputCodeUtf8JsNames
    204:204:int[] getInputCodeComment() -> getInputCodeComment
    205:205:int[] getInputCodeWS() -> getInputCodeWS
    216:216:int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    230:233:int[] get7BitOutputEscapes(int) -> get7BitOutputEscapes
    240:240:int charToHex(int) -> charToHex
    246:246:char hexToChar(int) -> hexToChar
    260:289:void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    296:296:char[] copyHexChars() -> copyHexChars
    300:300:char[] copyHexChars(boolean) -> copyHexChars
    308:308:byte[] copyHexBytes() -> copyHexBytes
    312:312:byte[] copyHexBytes(boolean) -> copyHexBytes
    7:196:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.CharTypes$AltEscapes -> com.fasterxml.jackson.core.io.c$a:
# {"fileName":"CharTypes.java","id":"sourceFile"}
    com.fasterxml.jackson.core.io.CharTypes$AltEscapes instance -> a
    int[][] _altEscapes -> b
    322:325:void <init>() -> <init>
    328:337:int[] escapesFor(int) -> escapesFor
    323:323:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.CharacterEscapes -> com.fasterxml.jackson.core.io.d:
# {"fileName":"CharacterEscapes.java","id":"sourceFile"}
    int ESCAPE_NONE -> a
    int ESCAPE_STANDARD -> b
    int ESCAPE_CUSTOM -> c
    13:13:void <init>() -> <init>
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    com.fasterxml.jackson.core.SerializableString getEscapeSequence(int) -> getEscapeSequence
    75:76:int[] standardAsciiEscapesForJSON() -> standardAsciiEscapesForJSON
com.fasterxml.jackson.core.io.ContentReference -> com.fasterxml.jackson.core.io.e:
# {"fileName":"ContentReference.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.core.io.ContentReference UNKNOWN_CONTENT -> a
    int DEFAULT_MAX_CONTENT_SNIPPET -> b
    java.lang.Object _rawContent -> c
    int _offset -> d
    int _length -> e
    boolean _isContentTextual -> f
    80:81:void <init>(boolean,java.lang.Object) -> <init>
    85:90:void <init>(boolean,java.lang.Object,int,int) -> <init>
    100:100:com.fasterxml.jackson.core.io.ContentReference unknown() -> unknown
    104:104:com.fasterxml.jackson.core.io.ContentReference construct(boolean,java.lang.Object) -> construct
    109:109:com.fasterxml.jackson.core.io.ContentReference construct(boolean,java.lang.Object,int,int) -> construct
    128:131:com.fasterxml.jackson.core.io.ContentReference rawReference(boolean,java.lang.Object) -> rawReference
    135:135:com.fasterxml.jackson.core.io.ContentReference rawReference(java.lang.Object) -> rawReference
    149:149:void readObject(java.io.ObjectInputStream) -> readObject
    153:153:void writeObject(java.io.ObjectOutputStream) -> writeObject
    156:156:java.lang.Object readResolve() -> readResolve
    166:166:boolean hasTextualContent() -> hasTextualContent
    170:170:java.lang.Object getRawContent() -> getRawContent
    173:173:int contentOffset() -> contentOffset
    174:174:int contentLength() -> contentLength
    184:184:int maxContentSnippetLength() -> maxContentSnippetLength
    200:200:java.lang.String buildSourceDescription() -> buildSourceDescription
    213:272:java.lang.StringBuilder appendSourceDescription(java.lang.StringBuilder) -> appendSourceDescription
    276:279:java.lang.String _truncate(java.lang.CharSequence,int[],int) -> _truncate
    283:286:java.lang.String _truncate(char[],int[],int) -> _truncate
    290:293:java.lang.String _truncate(byte[],int[],int) -> _truncate
    299:314:void _truncateOffsets(int[],int) -> _truncateOffsets
    317:329:int _append(java.lang.StringBuilder,java.lang.String) -> _append
    334:343:boolean _appendEscaped(java.lang.StringBuilder,int) -> _appendEscaped
    358:386:boolean equals(java.lang.Object) -> equals
    392:392:int hashCode() -> hashCode
    35:35:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.DataOutputAsStream -> com.fasterxml.jackson.core.io.f:
# {"fileName":"DataOutputAsStream.java","id":"sourceFile"}
    java.io.DataOutput _output -> a
    16:18:void <init>(java.io.DataOutput) -> <init>
    22:23:void write(int) -> write
    27:28:void write(byte[]) -> write
    32:33:void write(byte[],int,int) -> write
com.fasterxml.jackson.core.io.IOContext -> com.fasterxml.jackson.core.io.g:
# {"fileName":"IOContext.java","id":"sourceFile"}
    com.fasterxml.jackson.core.io.ContentReference _contentReference -> a
    java.lang.Object _sourceRef -> b
    com.fasterxml.jackson.core.JsonEncoding _encoding -> c
    boolean _managedResource -> d
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> e
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> f
    byte[] _readIOBuffer -> g
    byte[] _writeEncodingBuffer -> h
    byte[] _base64Buffer -> i
    char[] _tokenCBuffer -> j
    char[] _concatCBuffer -> k
    char[] _nameCopyBuffer -> l
    125:132:void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean) -> <init>
    144:145:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean) -> <init>
    149:150:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean) -> <init>
    157:157:com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    161:162:void setEncoding(com.fasterxml.jackson.core.JsonEncoding) -> setEncoding
    165:166:com.fasterxml.jackson.core.io.IOContext withEncoding(com.fasterxml.jackson.core.JsonEncoding) -> withEncoding
    175:175:com.fasterxml.jackson.core.JsonEncoding getEncoding() -> getEncoding
    176:176:boolean isResourceManaged() -> isResourceManaged
    187:187:com.fasterxml.jackson.core.io.ContentReference contentReference() -> contentReference
    195:195:java.lang.Object getSourceReference() -> getSourceReference
    204:204:com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    208:208:com.fasterxml.jackson.core.util.TextBuffer constructReadConstrainedTextBuffer() -> constructReadConstrainedTextBuffer
    220:221:byte[] allocReadIOBuffer() -> allocReadIOBuffer
    235:236:byte[] allocReadIOBuffer(int) -> allocReadIOBuffer
    248:249:byte[] allocWriteEncodingBuffer() -> allocWriteEncodingBuffer
    263:264:byte[] allocWriteEncodingBuffer(int) -> allocWriteEncodingBuffer
    276:277:byte[] allocBase64Buffer() -> allocBase64Buffer
    291:292:byte[] allocBase64Buffer(int) -> allocBase64Buffer
    296:297:char[] allocTokenBuffer() -> allocTokenBuffer
    302:303:char[] allocTokenBuffer(int) -> allocTokenBuffer
    307:308:char[] allocConcatBuffer() -> allocConcatBuffer
    312:313:char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    323:330:void releaseReadIOBuffer(byte[]) -> releaseReadIOBuffer
    333:340:void releaseWriteEncodingBuffer(byte[]) -> releaseWriteEncodingBuffer
    343:348:void releaseBase64Buffer(byte[]) -> releaseBase64Buffer
    351:356:void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    359:365:void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    368:374:void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
    383:384:void _verifyAlloc(java.lang.Object) -> _verifyAlloc
    388:389:void _verifyRelease(byte[],byte[]) -> _verifyRelease
    393:394:void _verifyRelease(char[],char[]) -> _verifyRelease
    398:398:java.lang.IllegalArgumentException wrongBuf() -> wrongBuf
com.fasterxml.jackson.core.io.InputDecorator -> com.fasterxml.jackson.core.io.h:
# {"fileName":"InputDecorator.java","id":"sourceFile"}
    long serialVersionUID -> a
    11:11:void <init>() -> <init>
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> decorate
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> decorate
    79:79:java.io.DataInput decorate(com.fasterxml.jackson.core.io.IOContext,java.io.DataInput) -> decorate
    java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader) -> decorate
com.fasterxml.jackson.core.io.JsonEOFException -> com.fasterxml.jackson.core.io.i:
# {"fileName":"JsonEOFException.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.core.JsonToken _token -> b
    26:28:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> <init>
    37:37:com.fasterxml.jackson.core.JsonToken getTokenBeingDecoded() -> getTokenBeingDecoded
com.fasterxml.jackson.core.io.JsonStringEncoder -> com.fasterxml.jackson.core.io.j:
# {"fileName":"JsonStringEncoder.java","id":"sourceFile"}
    char[] HC -> e
    byte[] HB -> f
    int SURR1_FIRST -> g
    int SURR1_LAST -> h
    int SURR2_FIRST -> i
    int SURR2_LAST -> j
    int MIN_CHAR_BUFFER_SIZE -> a
    int MAX_CHAR_BUFFER_SIZE -> b
    int MIN_BYTE_BUFFER_SIZE -> c
    int MAX_BYTE_BUFFER_SIZE -> d
    com.fasterxml.jackson.core.io.JsonStringEncoder instance -> k
    52:52:void <init>() -> <init>
    61:61:com.fasterxml.jackson.core.io.JsonStringEncoder getInstance() -> getInstance
    80:155:char[] quoteAsString(java.lang.String) -> quoteAsString
    171:251:char[] quoteAsString(java.lang.CharSequence) -> quoteAsString
    267:297:void quoteAsString(java.lang.CharSequence,java.lang.StringBuilder) -> quoteAsString
    311:403:byte[] quoteAsUTF8(java.lang.String) -> quoteAsUTF8
    417:503:byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    518:604:byte[] encodeAsUTF8(java.lang.CharSequence) -> encodeAsUTF8
    614:618:char[] _qbuf() -> _qbuf
    622:626:int _appendNumeric(int,char[]) -> _appendNumeric
    630:631:int _appendNamed(int,char[]) -> _appendNamed
    636:654:int _appendByte(int,int,com.fasterxml.jackson.core.util.ByteArrayBuilder,int) -> _appendByte
    659:662:int _convert(int,int) -> _convert
    666:666:void _illegal(int) -> _illegal
    673:675:int _initialCharBufSize(int) -> _initialCharBufSize
    682:684:int _initialByteBufSize(int) -> _initialByteBufSize
    25:50:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.MergedStream -> com.fasterxml.jackson.core.io.k:
# {"fileName":"MergedStream.java","id":"sourceFile"}
    com.fasterxml.jackson.core.io.IOContext _ctxt -> a
    java.io.InputStream _in -> b
    byte[] _b -> c
    int _ptr -> d
    int _end -> e
    25:31:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int) -> <init>
    35:38:int available() -> available
    42:44:void close() -> close
    47:48:void mark(int) -> mark
    52:52:boolean markSupported() -> markSupported
    56:63:int read() -> read
    67:67:int read(byte[]) -> read
    72:84:int read(byte[],int,int) -> read
    89:90:void reset() -> reset
    94:109:long skip(long) -> skip
    113:120:void _free() -> _free
com.fasterxml.jackson.core.io.NumberInput -> com.fasterxml.jackson.core.io.l:
# {"fileName":"NumberInput.java","id":"sourceFile"}
    java.lang.String NASTY_SMALL_DOUBLE -> a
    long L_BILLION -> b
    java.lang.String MIN_LONG_STR_NO_SIGN -> c
    java.lang.String MAX_LONG_STR -> d
    15:15:void <init>() -> <init>
    50:75:int parseInt(char[],int,int) -> parseInt
    97:141:int parseInt(java.lang.String) -> parseInt
    147:149:long parseLong(char[],int,int) -> parseLong
    172:177:long parseLong19(char[],int,boolean) -> parseLong19
    191:196:long parseLong(java.lang.String) -> parseLong
    217:228:boolean inLongRange(char[],int,int,boolean) -> inLongRange
    244:257:boolean inLongRange(java.lang.String,boolean) -> inLongRange
    262:296:int parseAsInt(java.lang.String,int) -> parseAsInt
    301:335:long parseAsLong(java.lang.String,long) -> parseAsLong
    346:346:double parseAsDouble(java.lang.String,double) -> parseAsDouble
    358:367:double parseAsDouble(java.lang.String,double,boolean) -> parseAsDouble
    377:377:double parseDouble(java.lang.String) -> parseDouble
    388:388:double parseDouble(java.lang.String,boolean) -> parseDouble
    399:399:float parseFloat(java.lang.String) -> parseFloat
    410:410:float parseFloat(java.lang.String,boolean) -> parseFloat
    419:419:java.math.BigDecimal parseBigDecimal(java.lang.String) -> parseBigDecimal
    430:432:java.math.BigDecimal parseBigDecimal(java.lang.String,boolean) -> parseBigDecimal
    443:443:java.math.BigDecimal parseBigDecimal(char[],int,int) -> parseBigDecimal
    458:460:java.math.BigDecimal parseBigDecimal(char[],int,int,boolean) -> parseBigDecimal
    469:469:java.math.BigDecimal parseBigDecimal(char[]) -> parseBigDecimal
    480:482:java.math.BigDecimal parseBigDecimal(char[],boolean) -> parseBigDecimal
    492:492:java.math.BigInteger parseBigInteger(java.lang.String) -> parseBigInteger
    503:506:java.math.BigInteger parseBigInteger(java.lang.String,boolean) -> parseBigInteger
    520:523:java.math.BigInteger parseBigIntegerWithRadix(java.lang.String,int,boolean) -> parseBigIntegerWithRadix
    31:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.NumberOutput -> com.fasterxml.jackson.core.io.m:
# {"fileName":"NumberOutput.java","id":"sourceFile"}
    int MILLION -> c
    int BILLION -> d
    long BILLION_L -> e
    long MIN_INT_AS_LONG -> f
    long MAX_INT_AS_LONG -> g
    java.lang.String SMALLEST_INT -> a
    java.lang.String SMALLEST_LONG -> b
    int[] TRIPLET_TO_CHARS -> h
    java.lang.String[] sSmallIntStrs -> i
    java.lang.String[] sSmallIntStrs2 -> j
    6:6:void <init>() -> <init>
    70:118:int outputInt(int,char[],int) -> outputInt
    123:163:int outputInt(int,byte[],int) -> outputInt
    182:211:int outputLong(long,char[],int) -> outputLong
    216:245:int outputLong(long,byte[],int) -> outputLong
    260:269:java.lang.String toString(int) -> toString
    273:276:java.lang.String toString(long) -> toString
    284:284:java.lang.String toString(double) -> toString
    294:294:java.lang.String toString(double,boolean) -> toString
    303:303:java.lang.String toString(float) -> toString
    313:313:java.lang.String toString(float,boolean) -> toString
    333:333:boolean notFinite(double) -> notFinite
    347:347:boolean notFinite(float) -> notFinite
    358:383:int _outputUptoBillion(int,char[],int) -> _outputUptoBillion
    388:408:int _outputFullBillion(int,char[],int) -> _outputFullBillion
    413:438:int _outputUptoBillion(int,byte[],int) -> _outputUptoBillion
    443:463:int _outputFullBillion(int,byte[],int) -> _outputFullBillion
    468:481:int _outputUptoMillion(char[],int,int,int) -> _outputUptoMillion
    486:499:int _outputUptoMillion(byte[],int,int,int) -> _outputUptoMillion
    504:512:int _leading3(int,char[],int) -> _leading3
    517:525:int _leading3(int,byte[],int) -> _leading3
    530:534:int _full3(int,char[],int) -> _full3
    539:543:int _full3(int,byte[],int) -> _full3
    550:552:int _outputSmallestL(char[],int) -> _outputSmallestL
    557:561:int _outputSmallestL(byte[],int) -> _outputSmallestL
    566:568:int _outputSmallestI(char[],int) -> _outputSmallestI
    573:577:int _outputSmallestI(byte[],int) -> _outputSmallestI
    8:45:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.OutputDecorator -> com.fasterxml.jackson.core.io.n:
# {"fileName":"OutputDecorator.java","id":"sourceFile"}
    12:12:void <init>() -> <init>
    java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> decorate
    java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer) -> decorate
com.fasterxml.jackson.core.io.SegmentedStringWriter -> com.fasterxml.jackson.core.io.o:
# {"fileName":"SegmentedStringWriter.java","id":"sourceFile"}
    com.fasterxml.jackson.core.util.TextBuffer _buffer -> a
    20:22:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    32:33:java.io.Writer append(char) -> append
    38:40:java.io.Writer append(java.lang.CharSequence) -> append
    45:47:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    51:51:void close() -> close
    54:54:void flush() -> flush
    58:59:void write(char[]) -> write
    63:64:void write(char[],int,int) -> write
    68:69:void write(int) -> write
    73:74:void write(java.lang.String) -> write
    78:79:void write(java.lang.String,int,int) -> write
    99:101:java.lang.String getAndClear() -> getAndClear
    16:16:java.lang.Appendable append(char) -> append
    16:16:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    16:16:java.lang.Appendable append(java.lang.CharSequence) -> append
com.fasterxml.jackson.core.io.SerializedString -> com.fasterxml.jackson.core.io.p:
# {"fileName":"SerializedString.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.core.io.JsonStringEncoder JSON_ENCODER -> g
    java.lang.String _value -> a
    byte[] _quotedUTF8Ref -> b
    byte[] _unquotedUTF8Ref -> c
    char[] _quotedChars -> d
    java.lang.String _jdkSerializeValue -> e
    51:56:void <init>(java.lang.String) -> <init>
    73:74:void readObject(java.io.ObjectInputStream) -> readObject
    77:78:void writeObject(java.io.ObjectOutputStream) -> writeObject
    81:81:java.lang.Object readResolve() -> readResolve
    91:91:java.lang.String getValue() -> getValue
    97:97:int charLength() -> charLength
    105:109:char[] asQuotedChars() -> asQuotedChars
    119:123:byte[] asQuotedUTF8() -> asQuotedUTF8
    132:136:byte[] asUnquotedUTF8() -> asUnquotedUTF8
    147:156:int appendQuoted(char[],int) -> appendQuoted
    161:170:int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    175:181:int appendUnquoted(char[],int) -> appendUnquoted
    186:195:int appendUnquotedUTF8(byte[],int) -> appendUnquotedUTF8
    200:206:int writeQuotedUTF8(java.io.OutputStream) -> writeQuotedUTF8
    211:217:int writeUnquotedUTF8(java.io.OutputStream) -> writeUnquotedUTF8
    222:231:int putQuotedUTF8(java.nio.ByteBuffer) -> putQuotedUTF8
    236:245:int putUnquotedUTF8(java.nio.ByteBuffer) -> putUnquotedUTF8
    255:255:java.lang.String toString() -> toString
    258:258:int hashCode() -> hashCode
    262:265:boolean equals(java.lang.Object) -> equals
    22:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.UTF32Reader -> com.fasterxml.jackson.core.io.q:
# {"fileName":"UTF32Reader.java","id":"sourceFile"}
    int LAST_VALID_UNICODE_CHAR -> a
    char NC -> b
    com.fasterxml.jackson.core.io.IOContext _context -> c
    java.io.InputStream _in -> d
    byte[] _buffer -> e
    int _ptr -> f
    int _length -> g
    boolean _bigEndian -> h
    char _surrogate -> i
    int _charCount -> j
    int _byteCount -> k
    boolean _managedBuffers -> l
    char[] _tmpBuf -> m
    37:65:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean) -> <init>
    75:82:void close() -> close
    93:99:int read() -> read
    106:175:int read(char[],int,int) -> read
    185:187:void reportUnexpectedEOF(int,int) -> reportUnexpectedEOF
    191:193:void reportInvalid(int,int,java.lang.String) -> reportInvalid
    208:255:boolean loadMore(int) -> loadMore
    264:271:void freeBuffers() -> freeBuffers
    274:276:void reportBounds(char[],int,int) -> reportBounds
    280:280:void reportStrangeStream() -> reportStrangeStream
com.fasterxml.jackson.core.io.UTF8Writer -> com.fasterxml.jackson.core.io.r:
# {"fileName":"UTF8Writer.java","id":"sourceFile"}
    int SURR1_FIRST -> a
    int SURR1_LAST -> b
    int SURR2_FIRST -> c
    int SURR2_LAST -> d
    com.fasterxml.jackson.core.io.IOContext _context -> e
    java.io.OutputStream _out -> f
    byte[] _outBuffer -> g
    int _outBufferEnd -> h
    int _outPtr -> i
    int _surrogate -> j
    30:41:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> <init>
    47:48:java.io.Writer append(char) -> append
    55:79:void close() -> close
    85:92:void flush() -> flush
    98:99:void write(char[]) -> write
    105:196:void write(char[],int,int) -> write
    202:242:void write(int) -> write
    247:248:void write(java.lang.String) -> write
    253:344:void write(java.lang.String,int,int) -> write
    364:371:int convertSurrogate(int) -> convertSurrogate
    375:375:void illegalSurrogate(int) -> illegalSurrogate
    380:390:java.lang.String illegalSurrogateDesc(int) -> illegalSurrogateDesc
    5:5:java.lang.Appendable append(char) -> append
com.fasterxml.jackson.core.io.doubleparser.AbstractFloatValueParser -> com.fasterxml.jackson.core.io.doubleparser.a:
# {"fileName":"AbstractFloatValueParser.java","id":"sourceFile"}
    int MAX_INPUT_LENGTH -> a
    long MINIMAL_NINETEEN_DIGIT_INTEGER -> b
    int MAX_EXPONENT_NUMBER -> c
    29:29:void <init>() -> <init>
com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.b:
# {"fileName":"AbstractJavaFloatingPointBitsFromByteArray.java","id":"sourceFile"}
    17:17:void <init>() -> <init>
    28:31:int skipWhitespace(byte[],int,int) -> skipWhitespace
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    73:173:long parseDecFloatLiteral(byte[],int,int,int,boolean,boolean) -> parseDecFloatLiteral
    197:236:long parseFloatingPointLiteral(byte[],int,int) -> parseFloatingPointLiteral
    267:372:long parseHexFloatingPointLiteral(byte[],int,int,int,boolean) -> parseHexFloatingPointLiteral
    378:399:long parseNaNOrInfinity(byte[],int,int,boolean) -> parseNaNOrInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.c:
# {"fileName":"AbstractJavaFloatingPointBitsFromCharArray.java","id":"sourceFile"}
    boolean CONDITIONAL_COMPILATION_PARSE_EIGHT_HEX_DIGITS -> j
    17:17:void <init>() -> <init>
    31:34:int skipWhitespace(char[],int,int) -> skipWhitespace
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    76:177:long parseDecFloatLiteral(char[],int,int,int,boolean,boolean) -> parseDecFloatLiteral
    200:239:long parseFloatingPointLiteral(char[],int,int) -> parseFloatingPointLiteral
    270:375:long parseHexFloatLiteral(char[],int,int,int,boolean) -> parseHexFloatLiteral
    380:408:long parseNaNOrInfinity(char[],int,int,boolean) -> parseNaNOrInfinity
    long positiveInfinity() -> positiveInfinity
    418:418:long tryToParseEightHexDigits(char[],int) -> tryToParseEightHexDigits
    long valueOfFloatLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.AbstractJavaFloatingPointBitsFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.d:
# {"fileName":"AbstractJavaFloatingPointBitsFromCharSequence.java","id":"sourceFile"}
    17:17:void <init>() -> <init>
    28:31:int skipWhitespace(java.lang.CharSequence,int,int) -> skipWhitespace
    long nan() -> nan
    long negativeInfinity() -> negativeInfinity
    73:174:long parseDecFloatLiteral(java.lang.CharSequence,int,int,int,boolean,boolean) -> parseDecFloatLiteral
    197:236:long parseFloatingPointLiteral(java.lang.CharSequence,int,int) -> parseFloatingPointLiteral
    267:370:long parseHexFloatLiteral(java.lang.CharSequence,int,int,int,boolean) -> parseHexFloatLiteral
    376:404:long parseNaNOrInfinity(java.lang.CharSequence,int,int,boolean) -> parseNaNOrInfinity
    long positiveInfinity() -> positiveInfinity
    long valueOfFloatLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    long valueOfHexLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.AbstractNumberParser -> com.fasterxml.jackson.core.io.doubleparser.e:
# {"fileName":"AbstractNumberParser.java","id":"sourceFile"}
    java.lang.String ILLEGAL_OFFSET_OR_ILLEGAL_LENGTH -> d
    java.lang.String SYNTAX_ERROR -> e
    java.lang.String VALUE_EXCEEDS_LIMITS -> f
    byte DECIMAL_POINT_CLASS -> g
    byte OTHER_CLASS -> h
    byte[] CHAR_TO_HEX_MAP -> i
    9:9:void <init>() -> <init>
    68:68:byte charAt(byte[],int,int) -> charAt
    81:81:char charAt(char[],int,int) -> charAt
    94:94:char charAt(java.lang.CharSequence,int,int) -> charAt
    107:107:int lookupHex(byte) -> lookupHex
    122:122:int lookupHex(char) -> lookupHex
    40:56:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.BigSignificand -> com.fasterxml.jackson.core.io.doubleparser.f:
# {"fileName":"BigSignificand.java","id":"sourceFile"}
    long LONG_MASK -> a
    int numInts -> b
    int[] x -> c
    int firstNonZeroInt -> d
    20:28:void <init>(long) -> <init>
    37:48:void add(int) -> add
    59:71:void fma(int,int) -> fma
    74:79:java.math.BigInteger toBigInteger() -> toBigInteger
    83:84:void x(int,int) -> x
    87:87:int x(int) -> x
com.fasterxml.jackson.core.io.doubleparser.FastDoubleMath -> com.fasterxml.jackson.core.io.doubleparser.g:
# {"fileName":"FastDoubleMath.java","id":"sourceFile"}
    int DOUBLE_EXPONENT_BIAS -> a
    int DOUBLE_SIGNIFICAND_WIDTH -> b
    int DOUBLE_MIN_EXPONENT_POWER_OF_TEN -> c
    int DOUBLE_MAX_EXPONENT_POWER_OF_TEN -> d
    long[] MANTISSA_64 -> e
    long[] MANTISSA_128 -> f
    int DOUBLE_MIN_EXPONENT_POWER_OF_TWO -> g
    int DOUBLE_MAX_EXPONENT_POWER_OF_TWO -> h
    double[] DOUBLE_POWERS_OF_TEN -> i
    755:757:void <init>() -> <init>
    775:802:double tryDecFloatToDoubleTruncated(boolean,long,int,boolean,int) -> tryDecFloatToDoubleTruncated
    823:951:double tryDecToDoubleWithFastAlgorithm(boolean,long,int) -> tryDecToDoubleWithFastAlgorithm
    969:985:double tryHexFloatToDoubleTruncated(boolean,long,long,boolean,long) -> tryHexFloatToDoubleTruncated
    92:748:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.FastDoubleSwar -> com.fasterxml.jackson.core.io.doubleparser.h:
# {"fileName":"FastDoubleSwar.java","id":"sourceFile"}
    32:32:void <init>() -> <init>
    43:43:boolean isDigit(char) -> isDigit
    56:56:boolean isDigit(byte) -> isDigit
    60:60:boolean isEightDigits(byte[],int) -> isEightDigits
    73:81:boolean isEightDigits(char[],int) -> isEightDigits
    85:90:boolean isEightDigits(java.lang.CharSequence,int) -> isEightDigits
    94:103:boolean isEightDigitsUtf16(long,long) -> isEightDigitsUtf16
    107:109:boolean isEightDigitsUtf8(long) -> isEightDigitsUtf8
    113:113:boolean isEightZeroes(byte[],int) -> isEightZeroes
    117:121:boolean isEightZeroes(java.lang.CharSequence,int) -> isEightZeroes
    134:142:boolean isEightZeroes(char[],int) -> isEightZeroes
    146:146:boolean isEightZeroesUtf16(long,long) -> isEightZeroesUtf16
    151:151:boolean isEightZeroesUtf8(long) -> isEightZeroesUtf8
    155:157:int parseEightDigitsUtf16(long,long) -> parseEightDigitsUtf16
    162:162:int readIntBE(byte[],int) -> readIntBE
    169:169:int readIntLE(byte[],int) -> readIntLE
    176:176:long readLongBE(byte[],int) -> readLongBE
    187:187:long readLongLE(byte[],int) -> readLongLE
    209:217:int tryToParseEightDigits(char[],int) -> tryToParseEightDigits
    221:221:int tryToParseEightDigits(byte[],int) -> tryToParseEightDigits
    234:242:int tryToParseEightDigits(java.lang.CharSequence,int) -> tryToParseEightDigits
    260:273:int tryToParseEightDigitsUtf16(long,long) -> tryToParseEightDigitsUtf16
    287:287:int tryToParseEightDigitsUtf8(byte[],int) -> tryToParseEightDigitsUtf8
    312:327:int tryToParseEightDigitsUtf8(long) -> tryToParseEightDigitsUtf8
    339:349:long tryToParseEightHexDigits(java.lang.CharSequence,int) -> tryToParseEightHexDigits
    364:374:long tryToParseEightHexDigits(char[],int) -> tryToParseEightHexDigits
    386:386:long tryToParseEightHexDigits(byte[],int) -> tryToParseEightHexDigits
    412:414:long tryToParseEightHexDigitsUtf16(long,long) -> tryToParseEightHexDigitsUtf16
    432:468:long tryToParseEightHexDigitsUtf8(long) -> tryToParseEightHexDigitsUtf8
    472:476:int tryToParseFourDigits(char[],int) -> tryToParseFourDigits
    480:485:int tryToParseFourDigits(java.lang.CharSequence,int) -> tryToParseFourDigits
    489:489:int tryToParseFourDigits(byte[],int) -> tryToParseFourDigits
    493:504:int tryToParseFourDigitsUtf16(long) -> tryToParseFourDigitsUtf16
    510:519:int tryToParseFourDigitsUtf8(int) -> tryToParseFourDigitsUtf8
    536:569:long tryToParseFourHexDigitsUtf16(long) -> tryToParseFourHexDigitsUtf16
    573:580:int tryToParseUpTo7Digits(byte[],int,int) -> tryToParseUpTo7Digits
    584:591:int tryToParseUpTo7Digits(char[],int,int) -> tryToParseUpTo7Digits
    595:602:int tryToParseUpTo7Digits(java.lang.CharSequence,int,int) -> tryToParseUpTo7Digits
    606:610:void writeIntBE(byte[],int,int) -> writeIntBE
    613:621:void writeLongBE(byte[],int,long) -> writeLongBE
    624:624:double fma(double,double,double) -> fma
com.fasterxml.jackson.core.io.doubleparser.FastFloatMath -> com.fasterxml.jackson.core.io.doubleparser.i:
# {"fileName":"FastFloatMath.java","id":"sourceFile"}
    int FLOAT_EXPONENT_BIAS -> a
    int FLOAT_SIGNIFICAND_WIDTH -> b
    int FLOAT_MIN_EXPONENT_POWER_OF_TEN -> c
    int FLOAT_MAX_EXPONENT_POWER_OF_TEN -> d
    int FLOAT_MIN_EXPONENT_POWER_OF_TWO -> e
    int FLOAT_MAX_EXPONENT_POWER_OF_TWO -> f
    float[] FLOAT_POWER_OF_TEN -> g
    41:43:void <init>() -> <init>
    48:78:float decFloatLiteralToFloat(boolean,long,int,boolean,int) -> decFloatLiteralToFloat
    84:100:float hexFloatLiteralToFloat(boolean,long,int,boolean,int) -> hexFloatLiteralToFloat
    123:252:float tryDecToFloatWithFastAlgorithm(boolean,long,int) -> tryDecToFloatWithFastAlgorithm
    35:35:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath -> com.fasterxml.jackson.core.io.doubleparser.j:
# {"fileName":"FastIntegerMath.java","id":"sourceFile"}
    java.math.BigInteger FIVE -> a
    java.math.BigInteger TEN_POW_16 -> b
    java.math.BigInteger FIVE_POW_16 -> c
    java.math.BigInteger[] SMALL_POWERS_OF_TEN -> d
    39:41:void <init>() -> <init>
    51:63:java.math.BigInteger computePowerOfTen(java.util.NavigableMap,int) -> computePowerOfTen
    70:83:java.math.BigInteger computeTenRaisedByNFloor16Recursive(java.util.NavigableMap,int) -> computeTenRaisedByNFloor16Recursive
    88:91:java.util.NavigableMap createPowersOfTenFloor16Map() -> createPowersOfTenFloor16Map
    99:99:long estimateNumBits(long) -> estimateNumBits
    111:122:java.util.NavigableMap fillPowersOf10Floor16(int,int) -> fillPowersOf10Floor16
    126:139:void fillPowersOfNFloor16Recursive(java.util.NavigableMap,int,int) -> fillPowersOfNFloor16Recursive
    156:163:com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$UInt128 fullMultiplication(long,long) -> fullMultiplication
    171:173:int splitFloor16(int,int) -> splitFloor16
    14:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$1 -> com.fasterxml.jackson.core.io.doubleparser.j$1:
# {"fileName":"FastIntegerMath.java","id":"sourceFile"}
com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$UInt128 -> com.fasterxml.jackson.core.io.doubleparser.j$a:
# {"fileName":"FastIntegerMath.java","id":"sourceFile"}
    long high -> a
    long low -> b
    179:182:void <init>(long,long) -> <init>
    176:176:void <init>(long,long,com.fasterxml.jackson.core.io.doubleparser.FastIntegerMath$1) -> <init>
com.fasterxml.jackson.core.io.doubleparser.FftMultiplier -> com.fasterxml.jackson.core.io.doubleparser.k:
# {"fileName":"FftMultiplier.java","id":"sourceFile"}
    double COS_0_25 -> a
    double SIN_0_25 -> b
    int FFT_THRESHOLD -> d
    int MAX_MAG_LENGTH -> e
    int ROOTS3_CACHE_SIZE -> f
    int ROOTS_CACHE2_SIZE -> g
    int TOOM_COOK_THRESHOLD -> h
    com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[] ROOTS2_CACHE -> i
    com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[] ROOTS3_CACHE -> j
    boolean $assertionsDisabled -> c
    26:26:void <init>() -> <init>
    76:109:int bitsPerFftPoint(int) -> bitsPerFftPoint
    119:138:com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector calculateRootsOfUnity(int) -> calculateRootsOfUnity
    153:228:void fft(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[]) -> fft
    241:260:void fft3(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,double) -> fft3
    279:310:void fftMixedRadix(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[],com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> fftMixedRadix
    313:341:java.math.BigInteger fromFftVector(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,int) -> fromFftVector
    351:362:com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[] getRootsOfUnity2(int) -> getRootsOfUnity2
    372:378:com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector getRootsOfUnity3(int) -> getRootsOfUnity3
    394:476:void ifft(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[]) -> ifft
    495:526:void ifftMixedRadix(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector[],com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> ifftMixedRadix
    538:556:java.math.BigInteger multiply(java.math.BigInteger,java.math.BigInteger) -> multiply
    602:638:java.math.BigInteger multiplyFft(java.math.BigInteger,java.math.BigInteger) -> multiplyFft
    648:651:java.math.BigInteger square(java.math.BigInteger) -> square
    655:685:java.math.BigInteger squareFft(java.math.BigInteger) -> squareFft
    694:729:com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector toFftVector(byte[],int,int) -> toFftVector
    26:66:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector -> com.fasterxml.jackson.core.io.doubleparser.k$a:
# {"fileName":"FftMultiplier.java","id":"sourceFile"}
    int COMPLEX_SIZE_SHIFT -> a
    int IMAG -> b
    int REAL -> c
    double[] a -> d
    int length -> e
    int offset -> f
    756:760:void <init>(int) -> <init>
    769:773:void <init>(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,int) -> <init>
    776:778:void add(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> add
    781:783:void addInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addInto
    786:788:void addTimesIInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addTimesIInto
    795:808:void applyInverseWeights(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> applyInverseWeights
    818:827:void applyWeights(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> applyWeights
    830:832:void copyInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> copyInto
    835:835:double imag(int) -> imag
    839:840:void imag(int,double) -> imag
    843:843:int imagIdx(int) -> imagIdx
    851:857:void multiply(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiply
    864:870:void multiplyByIAnd(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyByIAnd
    877:883:void multiplyConjugate(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyConjugate
    886:890:void multiplyConjugateInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyConjugateInto
    898:904:void multiplyConjugateTimesI(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyConjugateTimesI
    907:911:void multiplyInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyInto
    916:929:void multiplyPointwise(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> multiplyPointwise
    932:932:double part(int,int) -> part
    936:936:double real(int) -> real
    940:941:void real(int,double) -> real
    944:944:int realIdx(int) -> realIdx
    948:951:void set(int,double,double) -> set
    959:966:void squarePointwise() -> squarePointwise
    969:971:void subtractInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractInto
    974:976:void subtractTimesIInto(int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractTimesIInto
    979:985:void timesTwoToThe(int,int) -> timesTwoToThe
    733:733:int access$000(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector) -> access$000
com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex -> com.fasterxml.jackson.core.io.doubleparser.k$b:
# {"fileName":"FftMultiplier.java","id":"sourceFile"}
    double real -> a
    double imag -> b
    991:992:void <init>() -> <init>
    995:997:void add(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> add
    1000:1002:void add(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> add
    1009:1011:void addInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addInto
    1017:1019:void addTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addTimesI
    1022:1024:void addTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> addTimesI
    1031:1033:void addTimesIInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> addTimesIInto
    1036:1038:void copyInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> copyInto
    1041:1044:void multiply(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiply
    1050:1053:void multiplyConjugate(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> multiplyConjugate
    1056:1058:void set(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> set
    1061:1063:void squareInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> squareInto
    1066:1068:void subtract(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtract
    1071:1073:void subtract(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> subtract
    1076:1078:void subtractInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractInto
    1081:1083:void subtractInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> subtractInto
    1086:1088:void subtractTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractTimesI
    1091:1093:void subtractTimesI(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$ComplexVector,int) -> subtractTimesI
    1096:1098:void subtractTimesIInto(com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex,com.fasterxml.jackson.core.io.doubleparser.FftMultiplier$MutableComplex) -> subtractTimesIInto
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.l:
# {"fileName":"JavaBigDecimalFromByteArray.java","id":"sourceFile"}
    int MAX_INPUT_LENGTH -> a
    int MANY_DIGITS_THRESHOLD -> b
    long MAX_EXPONENT_NUMBER -> c
    int MAX_DIGIT_COUNT -> j
    57:59:void <init>() -> <init>
    75:176:java.math.BigDecimal parseBigDecimalString(byte[],int,int) -> parseBigDecimalString
    184:296:java.math.BigDecimal parseBigDecimalStringWithManyDigits(byte[],int,int) -> parseBigDecimalStringWithManyDigits
    325:375:java.math.BigDecimal valueOfBigDecimalString(byte[],int,int,int,int,boolean,int) -> valueOfBigDecimalString
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.m:
# {"fileName":"JavaBigDecimalFromCharArray.java","id":"sourceFile"}
    int MAX_INPUT_LENGTH -> a
    int MANY_DIGITS_THRESHOLD -> b
    int MAX_DIGIT_COUNT -> c
    long MAX_EXPONENT_NUMBER -> j
    57:59:void <init>() -> <init>
    74:175:java.math.BigDecimal parseBigDecimalString(char[],int,int) -> parseBigDecimalString
    183:295:java.math.BigDecimal parseBigDecimalStringWithManyDigits(char[],int,int) -> parseBigDecimalStringWithManyDigits
    324:374:java.math.BigDecimal valueOfBigDecimalString(char[],int,int,int,int,boolean,int) -> valueOfBigDecimalString
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.n:
# {"fileName":"JavaBigDecimalFromCharSequence.java","id":"sourceFile"}
    int MAX_INPUT_LENGTH -> a
    int MANY_DIGITS_THRESHOLD -> b
    int MAX_DIGIT_COUNT -> c
    long MAX_EXPONENT_NUMBER -> j
    58:60:void <init>() -> <init>
    75:176:java.math.BigDecimal parseBigDecimalString(java.lang.CharSequence,int,int) -> parseBigDecimalString
    185:297:java.math.BigDecimal parseBigDecimalStringWithManyDigits(java.lang.CharSequence,int,int) -> parseBigDecimalStringWithManyDigits
    325:374:java.math.BigDecimal valueOfBigDecimalString(java.lang.CharSequence,int,int,int,int,boolean,int) -> valueOfBigDecimalString
com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalParser -> com.fasterxml.jackson.core.io.doubleparser.o:
# {"fileName":"JavaBigDecimalParser.java","id":"sourceFile"}
    com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromByteArray BYTE_ARRAY_PARSER -> a
    com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharArray CHAR_ARRAY_PARSER -> b
    com.fasterxml.jackson.core.io.doubleparser.JavaBigDecimalFromCharSequence CHAR_SEQUENCE_PARSER -> c
    111:113:void <init>() -> <init>
    124:124:java.math.BigDecimal parseBigDecimal(java.lang.CharSequence) -> parseBigDecimal
    140:140:java.math.BigDecimal parseBigDecimal(java.lang.CharSequence,int,int) -> parseBigDecimal
    153:153:java.math.BigDecimal parseBigDecimal(byte[]) -> parseBigDecimal
    170:170:java.math.BigDecimal parseBigDecimal(byte[],int,int) -> parseBigDecimal
    182:182:java.math.BigDecimal parseBigDecimal(char[]) -> parseBigDecimal
    201:201:java.math.BigDecimal parseBigDecimal(char[],int,int) -> parseBigDecimal
    102:106:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.p:
# {"fileName":"JavaBigIntegerFromByteArray.java","id":"sourceFile"}
    int MAX_INPUT_LENGTH -> a
    int MAX_DECIMAL_DIGITS -> b
    int MAX_HEX_DIGITS -> c
    13:13:void <init>() -> <init>
    41:68:java.math.BigInteger parseBigIntegerLiteral(byte[],int,int,int) -> parseBigIntegerLiteral
    73:88:java.math.BigInteger parseDecDigits(byte[],int,int,boolean) -> parseDecDigits
    92:128:java.math.BigInteger parseHexDigits(byte[],int,int,boolean) -> parseHexDigits
    132:139:java.math.BigInteger parseManyDecDigits(byte[],int,int,boolean) -> parseManyDecDigits
    143:149:int skipZeroes(byte[],int,int) -> skipZeroes
com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.q:
# {"fileName":"JavaBigIntegerFromCharArray.java","id":"sourceFile"}
    int MAX_INPUT_LENGTH -> a
    int MAX_DECIMAL_DIGITS -> b
    int MAX_HEX_DIGITS -> c
    12:12:void <init>() -> <init>
    35:62:java.math.BigInteger parseBigIntegerLiteral(char[],int,int,int) -> parseBigIntegerLiteral
    67:82:java.math.BigInteger parseDecDigits(char[],int,int,boolean) -> parseDecDigits
    86:122:java.math.BigInteger parseHexDigits(char[],int,int,boolean) -> parseHexDigits
    126:133:java.math.BigInteger parseManyDecDigits(char[],int,int,boolean) -> parseManyDecDigits
    137:143:int skipZeroes(char[],int,int) -> skipZeroes
com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.r:
# {"fileName":"JavaBigIntegerFromCharSequence.java","id":"sourceFile"}
    int MAX_INPUT_LENGTH -> a
    int MAX_DECIMAL_DIGITS -> b
    int MAX_HEX_DIGITS -> c
    12:12:void <init>() -> <init>
    34:61:java.math.BigInteger parseBigIntegerLiteral(java.lang.CharSequence,int,int,int) -> parseBigIntegerLiteral
    66:81:java.math.BigInteger parseDecDigits(java.lang.CharSequence,int,int,boolean) -> parseDecDigits
    85:120:java.math.BigInteger parseHexDigits(java.lang.CharSequence,int,int,boolean) -> parseHexDigits
    124:131:java.math.BigInteger parseManyDecDigits(java.lang.CharSequence,int,int,boolean) -> parseManyDecDigits
    135:136:int skipZeroes(java.lang.CharSequence,int,int) -> skipZeroes
com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerParser -> com.fasterxml.jackson.core.io.doubleparser.s:
# {"fileName":"JavaBigIntegerParser.java","id":"sourceFile"}
    com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromByteArray BYTE_ARRAY_PARSER -> a
    com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharArray CHAR_ARRAY_PARSER -> b
    com.fasterxml.jackson.core.io.doubleparser.JavaBigIntegerFromCharSequence CHAR_SEQUENCE_PARSER -> c
    67:68:void <init>() -> <init>
    79:79:java.math.BigInteger parseBigInteger(java.lang.CharSequence) -> parseBigInteger
    92:92:java.math.BigInteger parseBigInteger(java.lang.CharSequence,int) -> parseBigInteger
    107:107:java.math.BigInteger parseBigInteger(java.lang.CharSequence,int,int) -> parseBigInteger
    124:124:java.math.BigInteger parseBigInteger(java.lang.CharSequence,int,int,int) -> parseBigInteger
    136:136:java.math.BigInteger parseBigInteger(byte[]) -> parseBigInteger
    149:149:java.math.BigInteger parseBigInteger(byte[],int) -> parseBigInteger
    168:168:java.math.BigInteger parseBigInteger(byte[],int,int) -> parseBigInteger
    188:188:java.math.BigInteger parseBigInteger(byte[],int,int,int) -> parseBigInteger
    200:200:java.math.BigInteger parseBigInteger(char[]) -> parseBigInteger
    213:213:java.math.BigInteger parseBigInteger(char[],int) -> parseBigInteger
    232:232:java.math.BigInteger parseBigInteger(char[],int,int) -> parseBigInteger
    252:252:java.math.BigInteger parseBigInteger(char[],int,int,int) -> parseBigInteger
    58:62:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.t:
# {"fileName":"JavaDoubleBitsFromByteArray.java","id":"sourceFile"}
    17:19:void <init>() -> <init>
    23:23:long nan() -> nan
    28:28:long negativeInfinity() -> negativeInfinity
    33:33:long positiveInfinity() -> positiveInfinity
    40:42:long valueOfFloatLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    49:51:long valueOfHexLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.u:
# {"fileName":"JavaDoubleBitsFromCharArray.java","id":"sourceFile"}
    15:17:void <init>() -> <init>
    21:21:long nan() -> nan
    26:26:long negativeInfinity() -> negativeInfinity
    31:31:long positiveInfinity() -> positiveInfinity
    38:40:long valueOfFloatLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    47:49:long valueOfHexLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.v:
# {"fileName":"JavaDoubleBitsFromCharSequence.java","id":"sourceFile"}
    15:17:void <init>() -> <init>
    21:21:long nan() -> nan
    26:26:long negativeInfinity() -> negativeInfinity
    31:31:long positiveInfinity() -> positiveInfinity
    38:42:long valueOfFloatLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    49:53:long valueOfHexLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaDoubleParser -> com.fasterxml.jackson.core.io.doubleparser.w:
# {"fileName":"JavaDoubleParser.java","id":"sourceFile"}
    com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromByteArray BYTE_ARRAY_PARSER -> a
    com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharArray CHAR_ARRAY_PARSER -> b
    com.fasterxml.jackson.core.io.doubleparser.JavaDoubleBitsFromCharSequence CHAR_SEQUENCE_PARSER -> c
    164:166:void <init>() -> <init>
    177:177:double parseDouble(java.lang.CharSequence) -> parseDouble
    193:194:double parseDouble(java.lang.CharSequence,int,int) -> parseDouble
    208:208:double parseDouble(byte[]) -> parseDouble
    225:226:double parseDouble(byte[],int,int) -> parseDouble
    238:238:double parseDouble(char[]) -> parseDouble
    257:258:double parseDouble(char[],int,int) -> parseDouble
    155:159:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromByteArray -> com.fasterxml.jackson.core.io.doubleparser.x:
# {"fileName":"JavaFloatBitsFromByteArray.java","id":"sourceFile"}
    18:20:void <init>() -> <init>
    24:24:long nan() -> nan
    29:29:long negativeInfinity() -> negativeInfinity
    34:34:long positiveInfinity() -> positiveInfinity
    41:43:long valueOfFloatLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    50:51:long valueOfHexLiteral(byte[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharArray -> com.fasterxml.jackson.core.io.doubleparser.y:
# {"fileName":"JavaFloatBitsFromCharArray.java","id":"sourceFile"}
    16:18:void <init>() -> <init>
    22:22:long nan() -> nan
    27:27:long negativeInfinity() -> negativeInfinity
    32:32:long positiveInfinity() -> positiveInfinity
    39:40:long valueOfFloatLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    47:48:long valueOfHexLiteral(char[],int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharSequence -> com.fasterxml.jackson.core.io.doubleparser.z:
# {"fileName":"JavaFloatBitsFromCharSequence.java","id":"sourceFile"}
    16:18:void <init>() -> <init>
    22:22:long nan() -> nan
    27:27:long negativeInfinity() -> negativeInfinity
    32:32:long positiveInfinity() -> positiveInfinity
    39:40:long valueOfFloatLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfFloatLiteral
    47:48:long valueOfHexLiteral(java.lang.CharSequence,int,int,boolean,long,int,boolean,int) -> valueOfHexLiteral
com.fasterxml.jackson.core.io.doubleparser.JavaFloatParser -> com.fasterxml.jackson.core.io.doubleparser.aa:
# {"fileName":"JavaFloatParser.java","id":"sourceFile"}
    com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromByteArray BYTE_ARRAY_PARSER -> a
    com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharArray CHAR_ARRAY_PARSER -> b
    com.fasterxml.jackson.core.io.doubleparser.JavaFloatBitsFromCharSequence CHAR_SEQUENCE_PARSER -> c
    39:41:void <init>() -> <init>
    52:52:float parseFloat(java.lang.CharSequence) -> parseFloat
    68:69:float parseFloat(java.lang.CharSequence,int,int) -> parseFloat
    82:82:float parseFloat(byte[]) -> parseFloat
    99:100:float parseFloat(byte[],int,int) -> parseFloat
    113:113:float parseFloat(char[]) -> parseFloat
    130:131:float parseFloat(char[],int,int) -> parseFloat
    30:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskByteArray -> com.fasterxml.jackson.core.io.doubleparser.ab:
# {"fileName":"ParseDigitsTaskByteArray.java","id":"sourceFile"}
    int RECURSION_THRESHOLD -> a
    20:21:void <init>() -> <init>
    43:58:java.math.BigInteger parseDigitsIterative(byte[],int,int) -> parseDigitsIterative
    69:83:java.math.BigInteger parseDigitsRecursive(byte[],int,int,java.util.Map) -> parseDigitsRecursive
com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskCharArray -> com.fasterxml.jackson.core.io.doubleparser.ac:
# {"fileName":"ParseDigitsTaskCharArray.java","id":"sourceFile"}
    int RECURSION_THRESHOLD -> a
    20:21:void <init>() -> <init>
    44:59:java.math.BigInteger parseDigitsIterative(char[],int,int) -> parseDigitsIterative
    70:83:java.math.BigInteger parseDigitsRecursive(char[],int,int,java.util.Map) -> parseDigitsRecursive
com.fasterxml.jackson.core.io.doubleparser.ParseDigitsTaskCharSequence -> com.fasterxml.jackson.core.io.doubleparser.ad:
# {"fileName":"ParseDigitsTaskCharSequence.java","id":"sourceFile"}
    int RECURSION_THRESHOLD -> a
    20:21:void <init>() -> <init>
    44:59:java.math.BigInteger parseDigitsIterative(java.lang.CharSequence,int,int) -> parseDigitsIterative
    71:85:java.math.BigInteger parseDigitsRecursive(java.lang.CharSequence,int,int,java.util.Map) -> parseDigitsRecursive
com.fasterxml.jackson.core.io.doubleparser.package-info -> com.fasterxml.jackson.core.io.doubleparser.ae:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal -> com.fasterxml.jackson.core.io.schubfach.a:
# {"fileName":"DoubleToDecimal.java","id":"sourceFile"}
    int P -> a
    int W -> k
    int Q_MIN -> b
    int Q_MAX -> c
    int E_MIN -> d
    int E_MAX -> e
    long C_TINY -> f
    int K_MIN -> g
    int K_MAX -> h
    int H -> i
    long C_MIN -> l
    int BQ_MASK -> m
    long T_MASK -> n
    long MASK_63 -> o
    int MASK_28 -> p
    int NON_SPECIAL -> q
    int PLUS_ZERO -> r
    int MINUS_ZERO -> s
    int PLUS_INF -> t
    int MINUS_INF -> u
    int NAN -> v
    int MAX_CHARS -> j
    byte[] bytes -> w
    int index -> x
    115:124:void <init>() -> <init>
    240:240:java.lang.String toString(double) -> toString
    244:250:java.lang.String toDecimalString(double) -> toDecimalString
    272:304:int toDecimal(double) -> toDecimal
    325:394:int toDecimal(int,long,int) -> toDecimal
    402:407:long rop(long,long,long) -> rop
    420:459:int toChars(long,int) -> toChars
    468:484:int toChars1(int,int,int,int) -> toChars1
    489:497:int toChars2(int,int,int,int) -> toChars2
    502:507:int toChars3(int,int,int,int) -> toChars3
    511:515:void lowDigits(int) -> lowDigits
    522:528:void append8Digits(int) -> append8Digits
    531:538:void removeTrailingZeroes() -> removeTrailingZeroes
    549:549:int y(int) -> y
    555:581:void exponent(int) -> exponent
    584:585:void append(int) -> append
    588:589:void appendDigit(int) -> appendDigit
    594:594:java.lang.String charsToString() -> charsToString
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal -> com.fasterxml.jackson.core.io.schubfach.b:
# {"fileName":"FloatToDecimal.java","id":"sourceFile"}
    int P -> a
    int W -> k
    int Q_MIN -> b
    int Q_MAX -> c
    int E_MIN -> d
    int E_MAX -> e
    int C_TINY -> f
    int K_MIN -> g
    int K_MAX -> h
    int H -> i
    int C_MIN -> l
    int BQ_MASK -> m
    int T_MASK -> n
    long MASK_32 -> o
    int MASK_28 -> p
    int NON_SPECIAL -> q
    int PLUS_ZERO -> r
    int MINUS_ZERO -> s
    int PLUS_INF -> t
    int MINUS_INF -> u
    int NAN -> v
    int MAX_CHARS -> j
    byte[] bytes -> w
    int index -> x
    114:123:void <init>() -> <init>
    239:239:java.lang.String toString(float) -> toString
    243:249:java.lang.String toDecimalString(float) -> toDecimalString
    271:303:int toDecimal(float) -> toDecimal
    325:392:int toDecimal(int,int,int) -> toDecimal
    400:402:int rop(long,long) -> rop
    415:448:int toChars(int,int) -> toChars
    457:473:int toChars1(int,int,int) -> toChars1
    478:486:int toChars2(int,int,int) -> toChars2
    491:496:int toChars3(int,int,int) -> toChars3
    504:510:void append8Digits(int) -> append8Digits
    513:520:void removeTrailingZeroes() -> removeTrailingZeroes
    531:531:int y(int) -> y
    537:553:void exponent(int) -> exponent
    556:557:void append(int) -> append
    560:561:void appendDigit(int) -> appendDigit
    566:566:java.lang.String charsToString() -> charsToString
com.fasterxml.jackson.core.io.schubfach.MathUtils -> com.fasterxml.jackson.core.io.schubfach.c:
# {"fileName":"MathUtils.java","id":"sourceFile"}
    int K_MIN -> a
    int K_MAX -> b
    int H -> c
    int Q_10 -> d
    long C_10 -> e
    long A_10 -> f
    int Q_2 -> g
    long C_2 -> h
    long[] pow10 -> i
    long[] g -> j
    62:63:void <init>() -> <init>
    95:95:long pow10(int) -> pow10
    111:111:int flog10pow2(int) -> flog10pow2
    129:129:int flog10threeQuartersPow2(int) -> flog10threeQuartersPow2
    145:145:int flog2pow10(int) -> flog2pow10
    172:172:long g1(int) -> g1
    185:185:long g0(int) -> g0
    191:197:long multiplyHigh(long,long) -> multiplyHigh
    66:205:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper -> com.fasterxml.jackson.core.json.a:
# {"fileName":"ByteSourceJsonBootstrapper.java","id":"sourceFile"}
    byte UTF8_BOM_1 -> a
    byte UTF8_BOM_2 -> b
    byte UTF8_BOM_3 -> c
    com.fasterxml.jackson.core.io.IOContext _context -> d
    java.io.InputStream _in -> e
    byte[] _inputBuffer -> f
    int _inputPtr -> g
    int _inputEnd -> h
    boolean _bufferRecyclable -> i
    boolean _bigEndian -> j
    int _bytesPerChar -> k
    77:94:void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> <init>
    77:105:void <init>(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> <init>
    124:179:com.fasterxml.jackson.core.JsonEncoding detectEncoding() -> detectEncoding
    196:212:int skipUTF8BOM(java.io.DataInput) -> skipUTF8BOM
    224:248:java.io.Reader constructReader() -> constructReader
    255:270:com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int) -> constructParser
    296:377:com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    383:391:com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength) -> tryMatch
    396:399:int skipSpace(com.fasterxml.jackson.core.format.InputAccessor) -> skipSpace
    405:413:int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte) -> skipSpace
    431:471:boolean handleBOM(int) -> handleBOM
    479:494:boolean checkUTF32(int) -> checkUTF32
    499:509:boolean checkUTF16(int) -> checkUTF16
    519:519:void reportWeirdUCS4(java.lang.String) -> reportWeirdUCS4
    532:547:boolean ensureLoaded(int) -> ensureLoaded
com.fasterxml.jackson.core.json.DupDetector -> com.fasterxml.jackson.core.json.b:
# {"fileName":"DupDetector.java","id":"sourceFile"}
    java.lang.Object _source -> a
    java.lang.String _firstName -> b
    java.lang.String _secondName -> c
    java.util.HashSet _seen -> d
    36:38:void <init>(java.lang.Object) -> <init>
    41:41:com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonParser) -> rootDetector
    45:45:com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator) -> rootDetector
    49:49:com.fasterxml.jackson.core.json.DupDetector child() -> child
    53:56:void reset() -> reset
    60:64:com.fasterxml.jackson.core.JsonLocation findLocation() -> findLocation
    73:73:java.lang.Object getSource() -> getSource
    90:109:boolean isDup(java.lang.String) -> isDup
com.fasterxml.jackson.core.json.JsonGeneratorImpl -> com.fasterxml.jackson.core.json.c:
# {"fileName":"JsonGeneratorImpl.java","id":"sourceFile"}
    int[] sOutputEscapes -> v
    com.fasterxml.jackson.core.util.JacksonFeatureSet JSON_WRITE_CAPABILITIES -> w
    com.fasterxml.jackson.core.io.IOContext _ioContext -> x
    int[] _outputEscapes -> y
    int _maximumNonEscapedChar -> z
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> A
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> B
    boolean _cfgUnqNames -> C
    boolean _cfgWriteHexUppercase -> D
    63:130:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    140:140:com.fasterxml.jackson.core.Version version() -> version
    152:158:com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    164:170:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    176:179:void _checkStdFeatureChanges(int,int) -> _checkStdFeatureChanges
    183:184:com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    189:189:int getHighestEscapedChar() -> getHighestEscapedChar
    195:201:com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    210:210:com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    215:216:com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    221:221:com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities() -> getWriteCapabilities
    233:258:void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    262:264:void _reportCantWriteValueExpectName(java.lang.String) -> _reportCantWriteValueExpectName
    32:40:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.JsonReadContext -> com.fasterxml.jackson.core.json.d:
# {"fileName":"JsonReadContext.java","id":"sourceFile"}
    com.fasterxml.jackson.core.json.JsonReadContext _parent -> g
    com.fasterxml.jackson.core.json.DupDetector _dups -> h
    com.fasterxml.jackson.core.json.JsonReadContext _child -> i
    java.lang.String _currentName -> j
    java.lang.Object _currentValue -> k
    int _lineNr -> l
    int _columnNr -> m
    61:69:void <init>(com.fasterxml.jackson.core.json.JsonReadContext,int,com.fasterxml.jackson.core.json.DupDetector,int,int,int) -> <init>
    74:82:void <init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int) -> <init>
    98:107:void reset(int,int,int) -> reset
    116:117:com.fasterxml.jackson.core.json.JsonReadContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector) -> withDupDetector
    122:122:java.lang.Object getCurrentValue() -> getCurrentValue
    127:128:void setCurrentValue(java.lang.Object) -> setCurrentValue
    137:137:com.fasterxml.jackson.core.json.JsonReadContext createRootContext(int,int,com.fasterxml.jackson.core.json.DupDetector) -> createRootContext
    141:141:com.fasterxml.jackson.core.json.JsonReadContext createRootContext(com.fasterxml.jackson.core.json.DupDetector) -> createRootContext
    145:152:com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    156:163:com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    172:172:java.lang.String getCurrentName() -> getCurrentName
    175:175:boolean hasCurrentName() -> hasCurrentName
    177:177:com.fasterxml.jackson.core.json.JsonReadContext getParent() -> getParent
    182:183:com.fasterxml.jackson.core.JsonLocation startLocation(com.fasterxml.jackson.core.io.ContentReference) -> startLocation
    189:189:com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    211:213:com.fasterxml.jackson.core.json.JsonReadContext clearAndGetParent() -> clearAndGetParent
    217:217:com.fasterxml.jackson.core.json.DupDetector getDupDetector() -> getDupDetector
    231:232:boolean expectComma() -> expectComma
    236:238:void setCurrentName(java.lang.String) -> setCurrentName
    241:246:void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String) -> _checkDup
    11:11:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.JsonReadFeature -> com.fasterxml.jackson.core.json.e:
# {"fileName":"JsonReadFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_JAVA_COMMENTS -> a
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_YAML_COMMENTS -> b
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_SINGLE_QUOTES -> c
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_UNQUOTED_FIELD_NAMES -> d
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_UNESCAPED_CONTROL_CHARS -> e
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> f
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_ZEROS_FOR_NUMBERS -> g
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS -> h
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS -> i
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS -> j
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_NON_NUMERIC_NUMBERS -> k
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_MISSING_VALUES -> l
    com.fasterxml.jackson.core.json.JsonReadFeature ALLOW_TRAILING_COMMA -> m
    boolean _defaultState -> n
    int _mask -> o
    com.fasterxml.jackson.core.JsonParser$Feature _mappedFeature -> p
    com.fasterxml.jackson.core.json.JsonReadFeature[] $VALUES -> q
    11:11:com.fasterxml.jackson.core.json.JsonReadFeature[] values() -> values
    11:11:com.fasterxml.jackson.core.json.JsonReadFeature valueOf(java.lang.String) -> valueOf
    233:239:int collectDefaults() -> collectDefaults
    243:247:void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonParser$Feature) -> <init>
    250:250:boolean enabledByDefault() -> enabledByDefault
    252:252:int getMask() -> getMask
    254:254:boolean enabledIn(int) -> enabledIn
    256:256:com.fasterxml.jackson.core.JsonParser$Feature mappedFeature() -> mappedFeature
    11:212:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.JsonWriteContext -> com.fasterxml.jackson.core.json.f:
# {"fileName":"JsonWriteContext.java","id":"sourceFile"}
    int STATUS_OK_AS_IS -> g
    int STATUS_OK_AFTER_COMMA -> h
    int STATUS_OK_AFTER_COLON -> i
    int STATUS_OK_AFTER_SPACE -> j
    int STATUS_EXPECT_VALUE -> k
    int STATUS_EXPECT_NAME -> l
    com.fasterxml.jackson.core.json.JsonWriteContext _parent -> m
    com.fasterxml.jackson.core.json.DupDetector _dups -> n
    com.fasterxml.jackson.core.json.JsonWriteContext _child -> o
    java.lang.String _currentName -> p
    java.lang.Object _currentValue -> q
    boolean _gotName -> r
    69:74:void <init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector) -> <init>
    79:85:void <init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector,java.lang.Object) -> <init>
    101:107:com.fasterxml.jackson.core.json.JsonWriteContext reset(int) -> reset
    127:133:com.fasterxml.jackson.core.json.JsonWriteContext reset(int,java.lang.Object) -> reset
    137:138:com.fasterxml.jackson.core.json.JsonWriteContext withDupDetector(com.fasterxml.jackson.core.json.DupDetector) -> withDupDetector
    143:143:java.lang.Object getCurrentValue() -> getCurrentValue
    148:149:void setCurrentValue(java.lang.Object) -> setCurrentValue
    163:163:com.fasterxml.jackson.core.json.JsonWriteContext createRootContext() -> createRootContext
    166:166:com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector) -> createRootContext
    170:176:com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    181:187:com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object) -> createChildArrayContext
    191:197:com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    202:208:com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object) -> createChildObjectContext
    211:211:com.fasterxml.jackson.core.json.JsonWriteContext getParent() -> getParent
    212:212:java.lang.String getCurrentName() -> getCurrentName
    214:214:boolean hasCurrentName() -> hasCurrentName
    229:231:com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent() -> clearAndGetParent
    235:235:com.fasterxml.jackson.core.json.DupDetector getDupDetector() -> getDupDetector
    248:254:int writeFieldName(java.lang.String) -> writeFieldName
    258:263:void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String) -> _checkDup
    267:286:int writeValue() -> writeValue
    10:10:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.JsonWriteFeature -> com.fasterxml.jackson.core.json.g:
# {"fileName":"JsonWriteFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.core.json.JsonWriteFeature QUOTE_FIELD_NAMES -> a
    com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NAN_AS_STRINGS -> b
    com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NUMBERS_AS_STRINGS -> c
    com.fasterxml.jackson.core.json.JsonWriteFeature ESCAPE_NON_ASCII -> d
    com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_HEX_UPPER_CASE -> e
    boolean _defaultState -> f
    int _mask -> g
    com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature -> h
    com.fasterxml.jackson.core.json.JsonWriteFeature[] $VALUES -> i
    10:10:com.fasterxml.jackson.core.json.JsonWriteFeature[] values() -> values
    10:10:com.fasterxml.jackson.core.json.JsonWriteFeature valueOf(java.lang.String) -> valueOf
    130:136:int collectDefaults() -> collectDefaults
    140:144:void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonGenerator$Feature) -> <init>
    147:147:boolean enabledByDefault() -> enabledByDefault
    149:149:int getMask() -> getMask
    151:151:boolean enabledIn(int) -> enabledIn
    153:153:com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature() -> mappedFeature
    10:86:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.PackageVersion -> com.fasterxml.jackson.core.json.h:
# {"fileName":"PackageVersion.java","id":"sourceFile"}
    com.fasterxml.jackson.core.Version VERSION -> a
    12:12:void <init>() -> <init>
    18:18:com.fasterxml.jackson.core.Version version() -> version
    13:13:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.ReaderBasedJsonParser -> com.fasterxml.jackson.core.json.i:
# {"fileName":"ReaderBasedJsonParser.java","id":"sourceFile"}
    int FEAT_MASK_TRAILING_COMMA -> aR
    int FEAT_MASK_LEADING_ZEROS -> aS
    int FEAT_MASK_NON_NUM_NUMBERS -> aT
    int FEAT_MASK_ALLOW_MISSING -> aU
    int FEAT_MASK_ALLOW_SINGLE_QUOTES -> aV
    int FEAT_MASK_ALLOW_UNQUOTED_NAMES -> aW
    int FEAT_MASK_ALLOW_JAVA_COMMENTS -> aX
    int FEAT_MASK_ALLOW_YAML_COMMENTS -> aY
    int[] _icLatin1 -> aG
    java.io.Reader _reader -> aH
    char[] _inputBuffer -> aI
    boolean _bufferRecyclable -> aJ
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> aK
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols -> aL
    int _hashSeed -> aM
    boolean _tokenIncomplete -> aN
    long _nameStartOffset -> aO
    int _nameStartRow -> aP
    int _nameStartCol -> aQ
    145:157:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean) -> <init>
    172:181:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> <init>
    189:189:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    190:190:void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    194:194:com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    199:205:int releaseBuffered(java.io.Writer) -> releaseBuffered
    208:208:java.lang.Object getInputSource() -> getInputSource
    212:212:char getNextChar(java.lang.String) -> getNextChar
    216:221:char getNextChar(java.lang.String,com.fasterxml.jackson.core.JsonToken) -> getNextChar
    233:239:void _closeInput() -> _closeInput
    250:261:void _releaseBuffers() -> _releaseBuffers
    270:271:void _loadMoreGuaranteed() -> _loadMoreGuaranteed
    275:299:boolean _loadMore() -> _loadMore
    320:327:java.lang.String getText() -> getText
    333:354:int getText(java.io.Writer) -> getText
    363:373:java.lang.String getValueAsString() -> getValueAsString
    379:389:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    393:406:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    413:441:char[] getTextCharacters() -> getTextCharacters
    447:464:int getTextLength() -> getTextLength
    471:487:int getTextOffset() -> getTextOffset
    493:518:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    525:536:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    541:672:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    692:817:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    822:834:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    839:843:void finishToken() -> finishToken
    857:925:boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    933:1033:java.lang.String nextFieldName() -> nextFieldName
    1038:1091:void _isNextTokenNameYes(int) -> _isNextTokenNameYes
    1096:1157:boolean _isNextTokenNameMaybe(int,java.lang.String) -> _isNextTokenNameMaybe
    1162:1219:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    1225:1245:java.lang.String nextTextValue() -> nextTextValue
    1252:1268:int nextIntValue(int) -> nextIntValue
    1275:1291:long nextLongValue(long) -> nextLongValue
    1298:1322:java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    1333:1333:com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod() -> _parseFloatThatStartsWithPeriod
    1340:1353:com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod(boolean) -> _parseFloatThatStartsWithPeriod
    1386:1429:com.fasterxml.jackson.core.JsonToken _parseUnsignedNumber(int) -> _parseUnsignedNumber
    1435:1495:com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int) -> _parseFloat
    1500:1548:com.fasterxml.jackson.core.JsonToken _parseSignedNumber(boolean) -> _parseSignedNumber
    1569:1706:com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int) -> _parseNumber2
    1714:1722:char _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    1727:1751:char _verifyNLZ2() -> _verifyNLZ2
    1758:1758:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    1763:1793:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean,boolean) -> _handleInvalidNumberStart
    1811:1831:void _verifyRootSpace(int) -> _verifyRootSpace
    1843:1862:java.lang.String _parseName() -> _parseName
    1867:1915:java.lang.String _parseName2(int,int,int) -> _parseName2
    1935:1980:java.lang.String _handleOddName(int) -> _handleOddName
    1986:2012:java.lang.String _parseAposName() -> _parseAposName
    2029:2086:com.fasterxml.jackson.core.JsonToken _handleOddValue(int) -> _handleOddValue
    2091:2127:com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    2132:2170:java.lang.String _handleOddName2(int,int,int[]) -> _handleOddName2
    2181:2207:void _finishString() -> _finishString
    2211:2247:void _finishString2() -> _finishString2
    2259:2297:void _skipString() -> _skipString
    2308:2315:void _skipCR() -> _skipCR
    2319:2368:int _skipColon() -> _skipColon
    2373:2407:int _skipColon2(boolean) -> _skipColon2
    2413:2455:int _skipColonFast(int) -> _skipColonFast
    2461:2484:int _skipComma(int) -> _skipComma
    2489:2514:int _skipAfterComma2() -> _skipAfterComma2
    2521:2565:int _skipWSOrEnd() -> _skipWSOrEnd
    2571:2598:int _skipWSOrEnd2() -> _skipWSOrEnd2
    2603:2618:void _skipComment() -> _skipComment
    2623:2649:void _skipCComment() -> _skipCComment
    2653:2657:boolean _skipYAMLComment() -> _skipYAMLComment
    2663:2678:void _skipLine() -> _skipLine
    2683:2731:char _decodeEscaped() -> _decodeEscaped
    2735:2748:void _matchTrue() -> _matchTrue
    2751:2764:void _matchFalse() -> _matchFalse
    2767:2780:void _matchNull() -> _matchNull
    2785:2801:void _matchToken(java.lang.String,int) -> _matchToken
    2805:2822:void _matchToken2(java.lang.String,int) -> _matchToken2
    2826:2830:void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    2852:2965:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    2977:2982:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    2988:2989:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    2997:3001:void _updateLocation() -> _updateLocation
    3006:3010:void _updateNameLocation() -> _updateNameLocation
    3019:3020:void _reportInvalidToken(java.lang.String) -> _reportInvalidToken
    3028:3042:void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    3051:3067:void _closeScope(int) -> _closeScope
    23:41:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser -> com.fasterxml.jackson.core.json.j:
# {"fileName":"UTF8DataInputJsonParser.java","id":"sourceFile"}
    int FEAT_MASK_TRAILING_COMMA -> aN
    int FEAT_MASK_LEADING_ZEROS -> aO
    int FEAT_MASK_NON_NUM_NUMBERS -> aP
    int FEAT_MASK_ALLOW_MISSING -> aQ
    int FEAT_MASK_ALLOW_SINGLE_QUOTES -> aR
    int FEAT_MASK_ALLOW_UNQUOTED_NAMES -> aS
    int FEAT_MASK_ALLOW_JAVA_COMMENTS -> aT
    int FEAT_MASK_ALLOW_YAML_COMMENTS -> aU
    int[] _icUTF8 -> aV
    int[] _icLatin1 -> aG
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> aH
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> aI
    int[] _quadBuffer -> aJ
    boolean _tokenIncomplete -> aK
    int _quad1 -> aW
    java.io.DataInput _inputData -> aL
    int _nextByte -> aM
    89:132:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.DataInput,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int) -> <init>
    136:136:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    141:142:void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    146:146:com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    157:157:int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    162:162:java.lang.Object getInputSource() -> getInputSource
    172:172:void _closeInput() -> _closeInput
    183:186:void _releaseBuffers() -> _releaseBuffers
    197:204:java.lang.String getText() -> getText
    210:231:int getText(java.io.Writer) -> getText
    238:248:java.lang.String getValueAsString() -> getValueAsString
    254:264:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    270:283:int getValueAsInt() -> getValueAsInt
    289:302:int getValueAsInt(int) -> getValueAsInt
    307:320:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    327:358:char[] getTextCharacters() -> getTextCharacters
    364:380:int getTextLength() -> getTextLength
    387:403:int getTextOffset() -> getTextOffset
    409:434:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    441:452:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    458:572:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    588:707:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    712:753:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    758:768:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    773:777:void finishToken() -> finishToken
    793:890:java.lang.String nextFieldName() -> nextFieldName
    897:916:java.lang.String nextTextValue() -> nextTextValue
    923:938:int nextIntValue(int) -> nextIntValue
    945:960:long nextLongValue(long) -> nextLongValue
    967:993:java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    1004:1004:com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod() -> _parseFloatThatStartsWithPeriod
    1012:1021:com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod(boolean,boolean) -> _parseFloatThatStartsWithPeriod
    1049:1092:com.fasterxml.jackson.core.JsonToken _parseUnsignedNumber(int) -> _parseUnsignedNumber
    1097:1097:com.fasterxml.jackson.core.JsonToken _parsePosNumber() -> _parsePosNumber
    1102:1102:com.fasterxml.jackson.core.JsonToken _parseNegNumber() -> _parseNegNumber
    1107:1155:com.fasterxml.jackson.core.JsonToken _parseSignedNumber(boolean) -> _parseSignedNumber
    1170:1183:int _handleLeadingZeroes() -> _handleLeadingZeroes
    1189:1262:com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int) -> _parseFloat
    1275:1284:void _verifyRootSpace() -> _verifyRootSpace
    1294:1345:java.lang.String _parseName(int) -> _parseName
    1350:1384:java.lang.String _parseMediumName(int) -> _parseMediumName
    1389:1423:java.lang.String _parseMediumName2(int,int) -> _parseMediumName2
    1428:1478:java.lang.String _parseLongName(int,int,int) -> _parseLongName
    1482:1482:java.lang.String parseName(int,int,int) -> parseName
    1486:1487:java.lang.String parseName(int,int,int,int) -> parseName
    1491:1493:java.lang.String parseName(int,int,int,int,int) -> parseName
    1509:1587:java.lang.String parseEscapedName(int[],int,int,int,int) -> parseEscapedName
    1605:1661:java.lang.String _handleOddName(int) -> _handleOddName
    1672:1761:java.lang.String _parseAposName() -> _parseAposName
    1773:1781:java.lang.String findName(int,int) -> findName
    1787:1796:java.lang.String findName(int,int,int) -> findName
    1802:1811:java.lang.String findName(int,int,int,int) -> findName
    1817:1825:java.lang.String findName(int[],int,int,int) -> findName
    1842:1940:java.lang.String addName(int[],int,int) -> addName
    1952:1970:void _finishString() -> _finishString
    1974:1991:java.lang.String _finishAndReturnString() -> _finishAndReturnString
    1998:2057:void _finishString2(char[],int,int) -> _finishString2
    2069:2112:void _skipString() -> _skipString
    2129:2180:com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    2185:2256:com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    2265:2265:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    2270:2293:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean,boolean) -> _handleInvalidNumberStart
    2298:2311:void _matchToken(java.lang.String,int) -> _matchToken
    2315:2319:void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    2329:2348:int _skipWS() -> _skipWS
    2360:2387:int _skipWSOrEnd() -> _skipWSOrEnd
    2394:2416:int _skipWSComment(int) -> _skipWSComment
    2422:2470:int _skipColon() -> _skipColon
    2475:2497:int _skipColon2(int,boolean) -> _skipColon2
    2505:2516:void _skipComment() -> _skipComment
    2521:2555:void _skipCComment() -> _skipCComment
    2560:2564:boolean _skipYAMLComment() -> _skipYAMLComment
    2574:2602:void _skipLine() -> _skipLine
    2608:2646:char _decodeEscaped() -> _decodeEscaped
    2651:2692:int _decodeCharForError(int) -> _decodeCharForError
    2703:2707:int _decodeUtf8_2(int) -> _decodeUtf8_2
    2712:2723:int _decodeUtf8_3(int) -> _decodeUtf8_3
    2732:2750:int _decodeUtf8_4(int) -> _decodeUtf8_4
    2755:2759:void _skipUtf8_2() -> _skipUtf8_2
    2767:2775:void _skipUtf8_3() -> _skipUtf8_3
    2779:2791:void _skipUtf8_4() -> _skipUtf8_4
    2801:2802:void _reportInvalidToken(int,java.lang.String) -> _reportInvalidToken
    2807:2822:void _reportInvalidToken(int,java.lang.String,java.lang.String) -> _reportInvalidToken
    2828:2832:void _reportInvalidChar(int) -> _reportInvalidChar
    2837:2838:void _reportInvalidInitial(int) -> _reportInvalidInitial
    2843:2844:void _reportInvalidOther(int) -> _reportInvalidOther
    2848:2851:int[] _growArrayBy(int[],int) -> _growArrayBy
    2874:2967:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    2988:2988:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    2994:2995:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    3006:3020:void _closeScope(int) -> _closeScope
    3026:3026:int pad(int,int) -> pad
    43:60:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8JsonGenerator -> com.fasterxml.jackson.core.json.k:
# {"fileName":"UTF8JsonGenerator.java","id":"sourceFile"}
    byte BYTE_u -> O
    byte BYTE_0 -> P
    byte BYTE_LBRACKET -> Q
    byte BYTE_RBRACKET -> R
    byte BYTE_LCURLY -> S
    byte BYTE_RCURLY -> T
    byte BYTE_BACKSLASH -> U
    byte BYTE_COMMA -> V
    byte BYTE_COLON -> W
    int MAX_BYTES_TO_BUFFER -> X
    byte[] HEX_BYTES_UPPER -> Y
    byte[] HEX_BYTES_LOWER -> Z
    byte[] NULL_BYTES -> aa
    byte[] TRUE_BYTES -> ab
    byte[] FALSE_BYTES -> ac
    java.io.OutputStream _outputStream -> E
    byte _quoteChar -> F
    byte[] _outputBuffer -> G
    int _outputTail -> H
    int _outputEnd -> I
    int _outputMaxContiguous -> J
    char[] _charBuffer -> K
    int _charBufferLength -> L
    byte[] _entityBuffer -> M
    boolean _bufferRecyclable -> N
    122:145:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,char) -> <init>
    153:168:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,char,byte[],int,boolean) -> <init>
    173:174:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream) -> <init>
    181:183:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,byte[],int,boolean) -> <init>
    193:193:java.lang.Object getOutputTarget() -> getOutputTarget
    199:199:int getOutputBuffered() -> getOutputBuffered
    211:256:void writeFieldName(java.lang.String) -> writeFieldName
    261:293:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    296:302:void _writeUnq(com.fasterxml.jackson.core.SerializableString) -> _writeUnq
    313:323:void writeStartArray() -> writeStartArray
    328:338:void writeStartArray(java.lang.Object) -> writeStartArray
    343:353:void writeStartArray(java.lang.Object,int) -> writeStartArray
    358:370:void writeEndArray() -> writeEndArray
    375:385:void writeStartObject() -> writeStartObject
    390:401:void writeStartObject(java.lang.Object) -> writeStartObject
    405:406:void writeStartObject(java.lang.Object,int) -> writeStartObject
    411:423:void writeEndObject() -> writeEndObject
    429:465:void _writePPFieldName(java.lang.String) -> _writePPFieldName
    469:498:void _writePPFieldName(com.fasterxml.jackson.core.SerializableString) -> _writePPFieldName
    509:529:void writeString(java.lang.String) -> writeString
    533:572:void writeString(java.io.Reader,int) -> writeString
    577:596:void writeString(char[],int,int) -> writeString
    601:616:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    621:632:void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    637:653:void writeUTF8String(byte[],int,int) -> writeUTF8String
    663:671:void writeRaw(java.lang.String) -> writeRaw
    676:716:void writeRaw(java.lang.String,int,int) -> writeRaw
    721:727:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    732:739:void writeRawValue(com.fasterxml.jackson.core.SerializableString) -> writeRawValue
    745:784:void writeRaw(char[],int,int) -> writeRaw
    789:801:void writeRaw(char) -> writeRaw
    809:841:void _writeSegmentedRaw(char[],int,int) -> _writeSegmentedRaw
    855:875:void _writeRawSegment(char[],int,int) -> _writeRawSegment
    888:902:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    909:935:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    947:957:void writeNumber(short) -> writeNumber
    960:966:void _writeQuotedShort(short) -> _writeQuotedShort
    971:981:void writeNumber(int) -> writeNumber
    985:991:void _writeQuotedInt(int) -> _writeQuotedInt
    996:1006:void writeNumber(long) -> writeNumber
    1010:1016:void _writeQuotedLong(long) -> _writeQuotedLong
    1021:1029:void writeNumber(java.math.BigInteger) -> writeNumber
    1035:1044:void writeNumber(double) -> writeNumber
    1050:1059:void writeNumber(float) -> writeNumber
    1065:1073:void writeNumber(java.math.BigDecimal) -> writeNumber
    1078:1086:void writeNumber(java.lang.String) -> writeNumber
    1090:1096:void writeNumber(char[],int,int) -> writeNumber
    1100:1109:void _writeQuotedRaw(java.lang.String) -> _writeQuotedRaw
    1113:1122:void _writeQuotedRaw(char[],int,int) -> _writeQuotedRaw
    1127:1135:void writeBoolean(boolean) -> writeBoolean
    1140:1142:void writeNull() -> writeNull
    1153:1186:void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    1197:1203:void flush() -> flush
    1208:1263:void close() -> close
    1268:1278:void _releaseBuffers() -> _releaseBuffers
    1288:1299:void _writeBytes(byte[]) -> _writeBytes
    1303:1313:void _writeBytes(byte[],int,int) -> _writeBytes
    1330:1356:void _writeStringSegments(java.lang.String,boolean) -> _writeStringSegments
    1367:1375:void _writeStringSegments(char[],int,int) -> _writeStringSegments
    1380:1388:void _writeStringSegments(java.lang.String,int,int) -> _writeStringSegments
    1410:1436:void _writeStringSegment(char[],int,int) -> _writeStringSegment
    1442:1467:void _writeStringSegment(java.lang.String,int,int) -> _writeStringSegment
    1476:1510:void _writeStringSegment2(char[],int,int) -> _writeStringSegment2
    1514:1548:void _writeStringSegment2(java.lang.String,int,int) -> _writeStringSegment2
    1564:1602:void _writeStringSegmentASCII2(char[],int,int) -> _writeStringSegmentASCII2
    1607:1646:void _writeStringSegmentASCII2(java.lang.String,int,int) -> _writeStringSegmentASCII2
    1662:1714:void _writeCustomStringSegment2(char[],int,int) -> _writeCustomStringSegment2
    1719:1771:void _writeCustomStringSegment2(java.lang.String,int,int) -> _writeCustomStringSegment2
    1776:1783:int _writeCustomEscape(byte[],int,com.fasterxml.jackson.core.SerializableString,int) -> _writeCustomEscape
    1790:1808:int _handleLongCustomEscape(byte[],int,int,byte[],int) -> _handleLongCustomEscape
    1826:1831:void _writeUTF8Segments(byte[],int,int) -> _writeUTF8Segments
    1837:1854:void _writeUTF8Segment(byte[],int,int) -> _writeUTF8Segment
    1859:1888:void _writeUTF8Segment2(byte[],int,int) -> _writeUTF8Segment2
    1901:1936:void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    1943:1995:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    2003:2052:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    2060:2079:int _readMore(java.io.InputStream,byte[],int,int,int) -> _readMore
    2097:2113:int _outputRawMultiByteChar(int,char[],int,int) -> _outputRawMultiByteChar
    2118:2127:void _outputSurrogates(int,int) -> _outputSurrogates
    2140:2160:int _outputMultiByteChar(int,int) -> _outputMultiByteChar
    2165:2170:void _writeNull() -> _writeNull
    2179:2195:int _writeGenericEscape(int,int) -> _writeGenericEscape
    2200:2205:void _flushBuffer() -> _flushBuffer
    2208:2208:byte[] getHexBytes() -> getHexBytes
    32:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.UTF8StreamJsonParser -> com.fasterxml.jackson.core.json.l:
# {"fileName":"UTF8StreamJsonParser.java","id":"sourceFile"}
    byte BYTE_LF -> aG
    int FEAT_MASK_TRAILING_COMMA -> aS
    int FEAT_MASK_LEADING_ZEROS -> aT
    int FEAT_MASK_NON_NUM_NUMBERS -> aU
    int FEAT_MASK_ALLOW_MISSING -> aV
    int FEAT_MASK_ALLOW_SINGLE_QUOTES -> aW
    int FEAT_MASK_ALLOW_UNQUOTED_NAMES -> aX
    int FEAT_MASK_ALLOW_JAVA_COMMENTS -> aY
    int FEAT_MASK_ALLOW_YAML_COMMENTS -> aZ
    int[] _icUTF8 -> ba
    int[] _icLatin1 -> aH
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> aI
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> aJ
    int[] _quadBuffer -> aK
    boolean _tokenIncomplete -> aL
    int _quad1 -> bb
    int _nameStartOffset -> aM
    int _nameStartRow -> aN
    int _nameStartCol -> aO
    java.io.InputStream _inputStream -> aP
    byte[] _inputBuffer -> aQ
    boolean _bufferRecyclable -> aR
    165:167:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,boolean) -> <init>
    71:202:void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,byte[],int,int,int,boolean) -> <init>
    206:206:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    211:212:void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    216:216:com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    228:236:int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    241:241:java.lang.Object getInputSource() -> getInputSource
    252:282:boolean _loadMore() -> _loadMore
    290:296:void _closeInput() -> _closeInput
    307:321:void _releaseBuffers() -> _releaseBuffers
    332:339:java.lang.String getText() -> getText
    345:366:int getText(java.io.Writer) -> getText
    375:385:java.lang.String getValueAsString() -> getValueAsString
    392:402:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    409:422:int getValueAsInt() -> getValueAsInt
    429:442:int getValueAsInt(int) -> getValueAsInt
    447:460:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    467:498:char[] getTextCharacters() -> getTextCharacters
    504:523:int getTextLength() -> getTextLength
    530:546:int getTextOffset() -> getTextOffset
    552:573:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    580:591:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    597:728:int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    748:862:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    867:908:com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    913:925:com.fasterxml.jackson.core.JsonToken _nextAfterName() -> _nextAfterName
    930:934:void finishToken() -> finishToken
    946:1025:boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    1032:1142:java.lang.String nextFieldName() -> nextFieldName
    1148:1191:int _skipColonFast(int) -> _skipColonFast
    1196:1249:void _isNextTokenNameYes(int) -> _isNextTokenNameYes
    1255:1318:boolean _isNextTokenNameMaybe(int,com.fasterxml.jackson.core.SerializableString) -> _isNextTokenNameMaybe
    1325:1345:java.lang.String nextTextValue() -> nextTextValue
    1352:1368:int nextIntValue(int) -> nextIntValue
    1375:1391:long nextLongValue(long) -> nextLongValue
    1398:1424:java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    1435:1435:com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod() -> _parseFloatThatStartsWithPeriod
    1443:1452:com.fasterxml.jackson.core.JsonToken _parseFloatThatStartsWithPeriod(boolean,boolean) -> _parseFloatThatStartsWithPeriod
    1480:1514:com.fasterxml.jackson.core.JsonToken _parseUnsignedNumber(int) -> _parseUnsignedNumber
    1519:1577:com.fasterxml.jackson.core.JsonToken _parseSignedNumber(boolean) -> _parseSignedNumber
    1587:1613:com.fasterxml.jackson.core.JsonToken _parseNumber2(char[],int,boolean,int) -> _parseNumber2
    1622:1648:int _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    1654:1747:com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int) -> _parseFloat
    1765:1783:void _verifyRootSpace(int) -> _verifyRootSpace
    1793:1850:java.lang.String _parseName(int) -> _parseName
    1855:1890:java.lang.String parseMediumName(int) -> parseMediumName
    1896:1931:java.lang.String parseMediumName2(int,int) -> parseMediumName2
    1936:1993:java.lang.String parseLongName(int,int,int) -> parseLongName
    2001:2010:java.lang.String slowParseName() -> slowParseName
    2014:2014:java.lang.String parseName(int,int,int) -> parseName
    2018:2019:java.lang.String parseName(int,int,int,int) -> parseName
    2023:2025:java.lang.String parseName(int,int,int,int,int) -> parseName
    2038:2119:java.lang.String parseEscapedName(int[],int,int,int,int) -> parseEscapedName
    2138:2199:java.lang.String _handleOddName(int) -> _handleOddName
    2208:2304:java.lang.String _parseAposName() -> _parseAposName
    2316:2324:java.lang.String findName(int,int) -> findName
    2330:2339:java.lang.String findName(int,int,int) -> findName
    2345:2354:java.lang.String findName(int,int,int,int) -> findName
    2360:2368:java.lang.String findName(int[],int,int,int) -> findName
    2384:2482:java.lang.String addName(int[],int,int) -> addName
    2487:2487:int _padLastQuad(int,int) -> _padLastQuad
    2497:2498:void _loadMoreGuaranteed() -> _loadMoreGuaranteed
    2504:2530:void _finishString() -> _finishString
    2536:2561:java.lang.String _finishAndReturnString() -> _finishAndReturnString
    2570:2646:void _finishString2(char[],int) -> _finishString2
    2658:2713:void _skipString() -> _skipString
    2729:2791:com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    2796:2881:com.fasterxml.jackson.core.JsonToken _handleApos() -> _handleApos
    2894:2894:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    2899:2928:com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean,boolean) -> _handleInvalidNumberStart
    2934:2948:void _matchTrue() -> _matchTrue
    2952:2967:void _matchFalse() -> _matchFalse
    2971:2985:void _matchNull() -> _matchNull
    2989:3005:void _matchToken(java.lang.String,int) -> _matchToken
    3009:3026:void _matchToken2(java.lang.String,int) -> _matchToken2
    3030:3034:void _checkMatchEnd(java.lang.String,int,int) -> _checkMatchEnd
    3044:3064:int _skipWS() -> _skipWS
    3069:3094:int _skipWS2() -> _skipWS2
    3101:3145:int _skipWSOrEnd() -> _skipWSOrEnd
    3150:3175:int _skipWSOrEnd2() -> _skipWSOrEnd2
    3180:3230:int _skipColon() -> _skipColon
    3235:3268:int _skipColon2(boolean) -> _skipColon2
    3273:3288:void _skipComment() -> _skipComment
    3293:3334:void _skipCComment() -> _skipCComment
    3338:3342:boolean _skipYAMLComment() -> _skipYAMLComment
    3350:3382:void _skipLine() -> _skipLine
    3387:3435:char _decodeEscaped() -> _decodeEscaped
    3440:3481:int _decodeCharForError(int) -> _decodeCharForError
    3492:3499:int _decodeUtf8_2(int) -> _decodeUtf8_2
    3504:3521:int _decodeUtf8_3(int) -> _decodeUtf8_3
    3526:3537:int _decodeUtf8_3fast(int) -> _decodeUtf8_3fast
    3544:3572:int _decodeUtf8_4(int) -> _decodeUtf8_4
    3577:3584:void _skipUtf8_2() -> _skipUtf8_2
    3591:3606:void _skipUtf8_3() -> _skipUtf8_3
    3610:3631:void _skipUtf8_4(int) -> _skipUtf8_4
    3643:3650:void _skipCR() -> _skipCR
    3654:3657:int nextByte() -> nextByte
    3667:3669:void _reportInvalidToken(java.lang.String,int) -> _reportInvalidToken
    3672:3673:void _reportInvalidToken(java.lang.String) -> _reportInvalidToken
    3681:3700:void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    3705:3709:void _reportInvalidChar(int) -> _reportInvalidChar
    3712:3713:void _reportInvalidInitial(int) -> _reportInvalidInitial
    3716:3717:void _reportInvalidOther(int) -> _reportInvalidOther
    3722:3724:void _reportInvalidOther(int,int) -> _reportInvalidOther
    3746:3854:byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    3867:3872:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    3880:3881:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    3889:3893:void _updateLocation() -> _updateLocation
    3898:3902:void _updateNameLocation() -> _updateNameLocation
    3911:3916:com.fasterxml.jackson.core.JsonToken _closeScope(int) -> _closeScope
    3920:3925:void _closeArrayScope() -> _closeArrayScope
    3928:3933:void _closeObjectScope() -> _closeObjectScope
    25:42:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator -> com.fasterxml.jackson.core.json.m:
# {"fileName":"WriterBasedJsonGenerator.java","id":"sourceFile"}
    int SHORT_WRITE -> E
    char[] HEX_CHARS_UPPER -> F
    char[] HEX_CHARS_LOWER -> G
    java.io.Writer _writer -> H
    char _quoteChar -> I
    char[] _outputBuffer -> J
    int _outputHead -> K
    int _outputTail -> L
    int _outputEnd -> M
    char[] _entityBuffer -> N
    com.fasterxml.jackson.core.SerializableString _currentEscape -> O
    char[] _copyBuffer -> P
    26:26:char[] getHexChars() -> getHexChars
    101:102:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer) -> <init>
    110:118:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,char) -> <init>
    128:128:java.lang.Object getOutputTarget() -> getOutputTarget
    134:135:int getOutputBuffered() -> getOutputBuffered
    140:140:boolean canWriteFormattedNumbers() -> canWriteFormattedNumbers
    151:156:void writeFieldName(java.lang.String) -> writeFieldName
    162:167:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    171:196:void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    200:231:void _writeFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writeFieldName
    235:241:void _writeFieldNameTail(com.fasterxml.jackson.core.SerializableString) -> _writeFieldNameTail
    252:262:void writeStartArray() -> writeStartArray
    267:277:void writeStartArray(java.lang.Object) -> writeStartArray
    282:292:void writeStartArray(java.lang.Object,int) -> writeStartArray
    297:309:void writeEndArray() -> writeEndArray
    314:324:void writeStartObject() -> writeStartObject
    329:340:void writeStartObject(java.lang.Object) -> writeStartObject
    344:345:void writeStartObject(java.lang.Object,int) -> writeStartObject
    350:362:void writeEndObject() -> writeEndObject
    368:387:void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    391:410:void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writePPFieldName
    421:436:void writeString(java.lang.String) -> writeString
    441:472:void writeString(java.io.Reader,int) -> writeString
    477:488:void writeString(char[],int,int) -> writeString
    493:508:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    513:530:void _writeString2(com.fasterxml.jackson.core.SerializableString) -> _writeString2
    535:536:void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    541:542:void writeUTF8String(byte[],int,int) -> writeUTF8String
    554:568:void writeRaw(java.lang.String) -> writeRaw
    573:589:void writeRaw(java.lang.String,int,int) -> writeRaw
    594:600:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    605:620:void writeRaw(char[],int,int) -> writeRaw
    625:629:void writeRaw(char) -> writeRaw
    633:654:void writeRawLong(java.lang.String) -> writeRawLong
    666:680:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    687:713:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    725:735:void writeNumber(short) -> writeNumber
    738:744:void _writeQuotedShort(short) -> _writeQuotedShort
    749:759:void writeNumber(int) -> writeNumber
    762:768:void _writeQuotedInt(int) -> _writeQuotedInt
    773:783:void writeNumber(long) -> writeNumber
    786:792:void _writeQuotedLong(long) -> _writeQuotedLong
    799:807:void writeNumber(java.math.BigInteger) -> writeNumber
    813:821:void writeNumber(double) -> writeNumber
    827:835:void writeNumber(float) -> writeNumber
    841:849:void writeNumber(java.math.BigDecimal) -> writeNumber
    854:862:void writeNumber(java.lang.String) -> writeNumber
    866:872:void writeNumber(char[],int,int) -> writeNumber
    876:885:void _writeQuotedRaw(java.lang.String) -> _writeQuotedRaw
    889:898:void _writeQuotedRaw(char[],int,int) -> _writeQuotedRaw
    903:922:void writeBoolean(boolean) -> writeBoolean
    926:928:void writeNull() -> writeNull
    939:969:void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    980:986:void flush() -> flush
    991:1046:void close() -> close
    1051:1061:void _releaseBuffers() -> _releaseBuffers
    1076:1096:void _writeString(java.lang.String) -> _writeString
    1101:1133:void _writeString2(int) -> _writeString2
    1142:1161:void _writeLongString(java.lang.String) -> _writeLongString
    1174:1209:void _writeSegment(int) -> _writeSegment
    1217:1268:void _writeString(char[],int,int) -> _writeString
    1284:1316:void _writeStringASCII(int,int) -> _writeStringASCII
    1321:1357:void _writeSegmentASCII(int,int) -> _writeSegmentASCII
    1363:1412:void _writeStringASCII(char[],int,int,int) -> _writeStringASCII
    1428:1467:void _writeStringCustom(int) -> _writeStringCustom
    1472:1515:void _writeSegmentCustom(int) -> _writeSegmentCustom
    1520:1576:void _writeStringCustom(char[],int,int) -> _writeStringCustom
    1588:1623:void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    1630:1682:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    1690:1739:int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    1747:1766:int _readMore(java.io.InputStream,byte[],int,int,int) -> _readMore
    1777:1787:void _writeNull() -> _writeNull
    1803:1882:void _prependOrWriteCharacterEscape(char,int) -> _prependOrWriteCharacterEscape
    1895:1966:int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> _prependOrWriteCharacterEscape
    1976:2025:void _appendCharacterEscape(char,int) -> _appendCharacterEscape
    2029:2041:char[] _allocateEntityBuffer() -> _allocateEntityBuffer
    2048:2051:char[] _allocateCopyBuffer() -> _allocateCopyBuffer
    2056:2062:void _flushBuffer() -> _flushBuffer
    22:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser -> com.fasterxml.jackson.core.json.async.a:
# {"fileName":"NonBlockingByteBufferJsonParser.java","id":"sourceFile"}
    java.nio.ByteBuffer _inputBuffer -> bX
    27:32:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    36:36:com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder() -> getNonBlockingInputFeeder
    42:68:void feedInput(java.nio.ByteBuffer) -> feedInput
    72:77:int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    82:82:byte getNextSignedByteFromBuffer() -> getNextSignedByteFromBuffer
    87:87:int getNextUnsignedByteFromBuffer() -> getNextUnsignedByteFromBuffer
    92:92:byte getByteFromBuffer(int) -> getByteFromBuffer
com.fasterxml.jackson.core.json.async.NonBlockingJsonParser -> com.fasterxml.jackson.core.json.async.b:
# {"fileName":"NonBlockingJsonParser.java","id":"sourceFile"}
    byte[] _inputBuffer -> bX
    23:28:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    32:32:com.fasterxml.jackson.core.async.ByteArrayFeeder getNonBlockingInputFeeder() -> getNonBlockingInputFeeder
    38:60:void feedInput(byte[],int,int) -> feedInput
    64:68:int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    73:73:byte getNextSignedByteFromBuffer() -> getNextSignedByteFromBuffer
    78:78:int getNextUnsignedByteFromBuffer() -> getNextUnsignedByteFromBuffer
    83:83:byte getByteFromBuffer(int) -> getByteFromBuffer
    19:19:com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder() -> getNonBlockingInputFeeder
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase -> com.fasterxml.jackson.core.json.async.c:
# {"fileName":"NonBlockingJsonParserBase.java","id":"sourceFile"}
    int MAJOR_INITIAL -> aG
    int MAJOR_ROOT -> aH
    int MAJOR_OBJECT_FIELD_FIRST -> aI
    int MAJOR_OBJECT_FIELD_NEXT -> aJ
    int MAJOR_OBJECT_VALUE -> aK
    int MAJOR_ARRAY_ELEMENT_FIRST -> aL
    int MAJOR_ARRAY_ELEMENT_NEXT -> aM
    int MAJOR_CLOSED -> aN
    int MINOR_ROOT_BOM -> aO
    int MINOR_ROOT_NEED_SEPARATOR -> aP
    int MINOR_ROOT_GOT_SEPARATOR -> aQ
    int MINOR_FIELD_LEADING_WS -> aR
    int MINOR_FIELD_LEADING_COMMA -> aS
    int MINOR_FIELD_NAME -> aT
    int MINOR_FIELD_NAME_ESCAPE -> aU
    int MINOR_FIELD_APOS_NAME -> aV
    int MINOR_FIELD_UNQUOTED_NAME -> aW
    int MINOR_VALUE_LEADING_WS -> aX
    int MINOR_VALUE_EXPECTING_COMMA -> aY
    int MINOR_VALUE_EXPECTING_COLON -> aZ
    int MINOR_VALUE_WS_AFTER_COMMA -> ba
    int MINOR_VALUE_TOKEN_NULL -> bb
    int MINOR_VALUE_TOKEN_TRUE -> bc
    int MINOR_VALUE_TOKEN_FALSE -> bd
    int MINOR_VALUE_TOKEN_NON_STD -> be
    int MINOR_NUMBER_PLUS -> bf
    int MINOR_NUMBER_MINUS -> bg
    int MINOR_NUMBER_ZERO -> bh
    int MINOR_NUMBER_MINUSZERO -> bi
    int MINOR_NUMBER_INTEGER_DIGITS -> bj
    int MINOR_NUMBER_FRACTION_DIGITS -> bk
    int MINOR_NUMBER_EXPONENT_MARKER -> bl
    int MINOR_NUMBER_EXPONENT_DIGITS -> bm
    int MINOR_VALUE_STRING -> bn
    int MINOR_VALUE_STRING_ESCAPE -> bo
    int MINOR_VALUE_STRING_UTF8_2 -> bp
    int MINOR_VALUE_STRING_UTF8_3 -> bq
    int MINOR_VALUE_STRING_UTF8_4 -> br
    int MINOR_VALUE_APOS_STRING -> bs
    int MINOR_VALUE_TOKEN_ERROR -> bt
    int MINOR_COMMENT_LEADING_SLASH -> bu
    int MINOR_COMMENT_CLOSING_ASTERISK -> bv
    int MINOR_COMMENT_C -> bw
    int MINOR_COMMENT_CPP -> bx
    int MINOR_COMMENT_YAML -> by
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _symbols -> bz
    int[] _quadBuffer -> bA
    int _quadLength -> bB
    int _quad1 -> bC
    int _pending32 -> bD
    int _pendingBytes -> bE
    int _quoted32 -> bF
    int _quotedDigits -> bG
    int _majorState -> bH
    int _majorStateAfterValue -> bI
    int _minorState -> bJ
    int _minorStateAfterSplit -> bK
    boolean _endOfInput -> bL
    int NON_STD_TOKEN_NAN -> bM
    int NON_STD_TOKEN_INFINITY -> bN
    int NON_STD_TOKEN_PLUS_INFINITY -> bO
    int NON_STD_TOKEN_MINUS_INFINITY -> bP
    java.lang.String[] NON_STD_TOKENS -> bQ
    double[] NON_STD_TOKEN_VALUES -> bR
    int _nonStdTokenType -> bS
    int _currBufferStart -> bT
    int _currInputRowAlt -> bU
    152:263:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    267:267:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    272:272:void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    276:276:boolean canParseAsync() -> canParseAsync
    280:280:com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    290:290:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer symbolTableForTests() -> symbolTableForTests
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    305:309:void _releaseBuffers() -> _releaseBuffers
    314:314:java.lang.Object getInputSource() -> getInputSource
    322:324:void _closeInput() -> _closeInput
    335:344:boolean hasTextCharacters() -> hasTextCharacters
    350:353:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    361:361:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    383:386:java.lang.String getText() -> getText
    391:405:java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    412:432:int getText(java.io.Writer) -> getText
    441:447:java.lang.String getValueAsString() -> getValueAsString
    454:460:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    466:493:char[] getTextCharacters() -> getTextCharacters
    499:514:int getTextLength() -> getTextLength
    521:533:int getTextOffset() -> getTextOffset
    545:555:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    561:563:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    569:572:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    583:586:com.fasterxml.jackson.core.JsonToken _startArrayScope() -> _startArrayScope
    591:594:com.fasterxml.jackson.core.JsonToken _startObjectScope() -> _startObjectScope
    599:614:com.fasterxml.jackson.core.JsonToken _closeArrayScope() -> _closeArrayScope
    619:634:com.fasterxml.jackson.core.JsonToken _closeObjectScope() -> _closeObjectScope
    646:654:java.lang.String _findName(int,int) -> _findName
    660:669:java.lang.String _findName(int,int,int) -> _findName
    675:684:java.lang.String _findName(int,int,int,int) -> _findName
    699:797:java.lang.String _addName(int[],int,int) -> _addName
    802:802:int _padLastQuad(int,int) -> _padLastQuad
    814:819:com.fasterxml.jackson.core.JsonToken _eofAsNextToken() -> _eofAsNextToken
    824:826:com.fasterxml.jackson.core.JsonToken _fieldComplete(java.lang.String) -> _fieldComplete
    831:833:com.fasterxml.jackson.core.JsonToken _valueComplete(com.fasterxml.jackson.core.JsonToken) -> _valueComplete
    838:845:com.fasterxml.jackson.core.JsonToken _valueCompleteInt(int,java.lang.String) -> _valueCompleteInt
    851:861:com.fasterxml.jackson.core.JsonToken _valueNonStdNumberComplete(int) -> _valueNonStdNumberComplete
    865:865:java.lang.String _nonStdToken(int) -> _nonStdToken
    876:880:void _updateTokenLocation() -> _updateTokenLocation
    884:888:void _reportInvalidChar(int) -> _reportInvalidChar
    891:892:void _reportInvalidInitial(int) -> _reportInvalidInitial
    895:897:void _reportInvalidOther(int,int) -> _reportInvalidOther
    900:901:void _reportInvalidOther(int) -> _reportInvalidOther
    211:216:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase -> com.fasterxml.jackson.core.json.async.d:
# {"fileName":"NonBlockingUtf8JsonParserBase.java","id":"sourceFile"}
    int FEAT_MASK_TRAILING_COMMA -> bX
    int FEAT_MASK_LEADING_ZEROS -> bY
    int FEAT_MASK_ALLOW_MISSING -> bZ
    int FEAT_MASK_ALLOW_SINGLE_QUOTES -> ca
    int FEAT_MASK_ALLOW_UNQUOTED_NAMES -> cb
    int FEAT_MASK_ALLOW_JAVA_COMMENTS -> cc
    int FEAT_MASK_ALLOW_YAML_COMMENTS -> cd
    int[] _icUTF8 -> ce
    int[] _icLatin1 -> bV
    int _origBufferLen -> bW
    65:66:void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    75:75:boolean needMoreInput() -> needMoreInput
    79:80:void endOfInput() -> endOfInput
    103:104:char _decodeEscaped() -> _decodeEscaped
    118:169:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    byte getNextSignedByteFromBuffer() -> getNextSignedByteFromBuffer
    int getNextUnsignedByteFromBuffer() -> getNextUnsignedByteFromBuffer
    byte getByteFromBuffer(int) -> getByteFromBuffer
    203:317:com.fasterxml.jackson.core.JsonToken _finishToken() -> _finishToken
    333:394:com.fasterxml.jackson.core.JsonToken _finishTokenWithEOF() -> _finishTokenWithEOF
    405:438:com.fasterxml.jackson.core.JsonToken _startDocument(int) -> _startDocument
    447:470:com.fasterxml.jackson.core.JsonToken _finishBOM(int) -> _finishBOM
    486:507:com.fasterxml.jackson.core.JsonToken _startFieldName(int) -> _startFieldName
    513:562:com.fasterxml.jackson.core.JsonToken _startFieldNameAfterComma(int) -> _startFieldNameAfterComma
    579:641:com.fasterxml.jackson.core.JsonToken _startValue(int) -> _startValue
    649:739:com.fasterxml.jackson.core.JsonToken _startValueExpectComma(int) -> _startValueExpectComma
    748:817:com.fasterxml.jackson.core.JsonToken _startValueExpectColon(int) -> _startValueExpectColon
    824:884:com.fasterxml.jackson.core.JsonToken _startValueAfterComma(int) -> _startValueAfterComma
    889:925:com.fasterxml.jackson.core.JsonToken _startUnexpectedValue(boolean,int) -> _startUnexpectedValue
    937:954:int _skipWS(int) -> _skipWS
    959:977:com.fasterxml.jackson.core.JsonToken _startSlashComment(int) -> _startSlashComment
    983:1007:com.fasterxml.jackson.core.JsonToken _finishHashComment(int) -> _finishHashComment
    1013:1033:com.fasterxml.jackson.core.JsonToken _finishCppComment(int) -> _finishCppComment
    1039:1065:com.fasterxml.jackson.core.JsonToken _finishCComment(int,boolean) -> _finishCComment
    1071:1092:com.fasterxml.jackson.core.JsonToken _startAfterComment(int) -> _startAfterComment
    1103:1117:com.fasterxml.jackson.core.JsonToken _startFalseToken() -> _startFalseToken
    1122:1135:com.fasterxml.jackson.core.JsonToken _startTrueToken() -> _startTrueToken
    1140:1153:com.fasterxml.jackson.core.JsonToken _startNullToken() -> _startNullToken
    1159:1181:com.fasterxml.jackson.core.JsonToken _finishKeywordToken(java.lang.String,int,com.fasterxml.jackson.core.JsonToken) -> _finishKeywordToken
    1187:1191:com.fasterxml.jackson.core.JsonToken _finishKeywordTokenWithEOF(java.lang.String,int,com.fasterxml.jackson.core.JsonToken) -> _finishKeywordTokenWithEOF
    1196:1221:com.fasterxml.jackson.core.JsonToken _finishNonStdToken(int,int) -> _finishNonStdToken
    1226:1231:com.fasterxml.jackson.core.JsonToken _finishNonStdTokenWithEOF(int,int) -> _finishNonStdTokenWithEOF
    1236:1253:com.fasterxml.jackson.core.JsonToken _finishErrorToken() -> _finishErrorToken
    1258:1258:com.fasterxml.jackson.core.JsonToken _finishErrorTokenWithEOF() -> _finishErrorTokenWithEOF
    1264:1266:com.fasterxml.jackson.core.JsonToken _reportErrorToken(java.lang.String) -> _reportErrorToken
    1278:1281:com.fasterxml.jackson.core.JsonToken _startFloatThatStartsWithPeriod() -> _startFloatThatStartsWithPeriod
    1286:1331:com.fasterxml.jackson.core.JsonToken _startPositiveNumber(int) -> _startPositiveNumber
    1336:1397:com.fasterxml.jackson.core.JsonToken _startNegativeNumber() -> _startNegativeNumber
    1402:1469:com.fasterxml.jackson.core.JsonToken _startPositiveNumber() -> _startPositiveNumber
    1474:1514:com.fasterxml.jackson.core.JsonToken _startNumberLeadingZero() -> _startNumberLeadingZero
    1519:1519:com.fasterxml.jackson.core.JsonToken _finishNumberMinus(int) -> _finishNumberMinus
    1524:1524:com.fasterxml.jackson.core.JsonToken _finishNumberPlus(int) -> _finishNumberPlus
    1529:1572:com.fasterxml.jackson.core.JsonToken _finishNumberPlusMinus(int,boolean) -> _finishNumberPlusMinus
    1580:1622:com.fasterxml.jackson.core.JsonToken _finishNumberLeadingZeroes() -> _finishNumberLeadingZeroes
    1627:1627:com.fasterxml.jackson.core.JsonToken _finishNumberLeadingNegZeroes() -> _finishNumberLeadingNegZeroes
    1631:1631:com.fasterxml.jackson.core.JsonToken _finishNumberLeadingPosZeroes() -> _finishNumberLeadingPosZeroes
    1638:1683:com.fasterxml.jackson.core.JsonToken _finishNumberLeadingPosNegZeroes(boolean) -> _finishNumberLeadingPosNegZeroes
    1688:1723:com.fasterxml.jackson.core.JsonToken _finishNumberIntegralPart(char[],int) -> _finishNumberIntegralPart
    1728:1811:com.fasterxml.jackson.core.JsonToken _startFloat(char[],int,int) -> _startFloat
    1816:1872:com.fasterxml.jackson.core.JsonToken _finishFloatFraction() -> _finishFloatFraction
    1877:1917:com.fasterxml.jackson.core.JsonToken _finishFloatExponent(boolean,int) -> _finishFloatExponent
    1933:1980:java.lang.String _fastParseName() -> _fastParseName
    1985:2023:java.lang.String _parseMediumName(int,int) -> _parseMediumName
    2028:2064:java.lang.String _parseMediumName2(int,int,int) -> _parseMediumName2
    2080:2182:com.fasterxml.jackson.core.JsonToken _parseEscapedName(int,int,int) -> _parseEscapedName
    2194:2227:com.fasterxml.jackson.core.JsonToken _handleOddName(int) -> _handleOddName
    2238:2280:com.fasterxml.jackson.core.JsonToken _finishUnquotedName(int,int,int) -> _finishUnquotedName
    2286:2377:com.fasterxml.jackson.core.JsonToken _finishAposName(int,int,int) -> _finishAposName
    2383:2429:com.fasterxml.jackson.core.JsonToken _finishFieldWithEscape() -> _finishFieldWithEscape
    2434:2495:int _decodeSplitEscaped(int,int) -> _decodeSplitEscaped
    2506:2527:com.fasterxml.jackson.core.JsonToken _startString() -> _startString
    2535:2625:com.fasterxml.jackson.core.JsonToken _finishRegularString() -> _finishRegularString
    2631:2653:com.fasterxml.jackson.core.JsonToken _startAposString() -> _startAposString
    2659:2748:com.fasterxml.jackson.core.JsonToken _finishAposString() -> _finishAposString
    2755:2801:boolean _decodeSplitMultiByte(int,int,boolean) -> _decodeSplitMultiByte
    2808:2825:boolean _decodeSplitUTF8_3(int,int,int) -> _decodeSplitUTF8_3
    2833:2869:boolean _decodeSplitUTF8_4(int,int,int) -> _decodeSplitUTF8_4
    2880:2884:int _decodeCharEscape() -> _decodeCharEscape
    2889:2943:int _decodeFastCharEscape() -> _decodeFastCharEscape
    2954:2957:int _decodeUTF8_2(int,int) -> _decodeUTF8_2
    2962:2970:int _decodeUTF8_3(int,int,int) -> _decodeUTF8_3
    2977:2988:int _decodeUTF8_4(int,int,int,int) -> _decodeUTF8_4
    25:40:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.json.async.package-info -> com.fasterxml.jackson.core.json.async.e:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.json.package-info -> com.fasterxml.jackson.core.json.n:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.package-info -> com.fasterxml.jackson.core.ah:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer -> com.fasterxml.jackson.core.sym.a:
# {"fileName":"ByteQuadsCanonicalizer.java","id":"sourceFile"}
    int DEFAULT_T_SIZE -> q
    int MAX_T_SIZE -> r
    int MIN_HASH_SIZE -> s
    int MAX_ENTRIES_FOR_REUSE -> a
    com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent -> b
    java.util.concurrent.atomic.AtomicReference _tableInfo -> c
    int _seed -> d
    boolean _intern -> e
    boolean _failOnDoS -> f
    int[] _hashArea -> g
    int _hashSize -> h
    int _secondaryStart -> i
    int _tertiaryStart -> j
    int _tertiaryShift -> k
    int _count -> l
    java.lang.String[] _names -> m
    int _spilloverEnd -> n
    int _longNameOffset -> o
    boolean _hashShared -> p
    int MULT -> t
    int MULT2 -> u
    int MULT3 -> v
    228:253:void <init>(int,int) -> <init>
    261:283:void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo,boolean,boolean) -> <init>
    295:325:void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo) -> <init>
    342:345:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot() -> createRoot
    351:351:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot(int) -> createRoot
    363:366:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int) -> makeChild
    382:389:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChildOrPlaceholder(int) -> makeChildOrPlaceholder
    402:408:void release() -> release
    412:430:void mergeChild(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo) -> mergeChild
    443:447:int size() -> size
    453:453:int bucketCount() -> bucketCount
    462:462:boolean maybeDirty() -> maybeDirty
    464:464:int hashSeed() -> hashSeed
    474:474:boolean isCanonicalizing() -> isCanonicalizing
    486:492:int primaryCount() -> primaryCount
    502:509:int secondaryCount() -> secondaryCount
    519:526:int tertiaryCount() -> tertiaryCount
    537:537:int spilloverCount() -> spilloverCount
    542:548:int totalCount() -> totalCount
    553:560:java.lang.String toString() -> toString
    571:598:java.lang.String findName(int) -> findName
    603:628:java.lang.String findName(int,int) -> findName
    633:656:java.lang.String findName(int,int,int) -> findName
    665:702:java.lang.String findName(int[],int) -> findName
    710:712:int _calcOffset(int) -> _calcOffset
    727:747:java.lang.String _findSecondary(int,int) -> _findSecondary
    752:770:java.lang.String _findSecondary(int,int,int) -> _findSecondary
    775:794:java.lang.String _findSecondary(int,int,int,int) -> _findSecondary
    799:821:java.lang.String _findSecondary(int,int,int[],int) -> _findSecondary
    826:847:boolean _verifyLongName(int[],int,int) -> _verifyLongName
    852:858:boolean _verifyLongName2(int[],int,int) -> _verifyLongName2
    874:883:java.lang.String addName(java.lang.String,int) -> addName
    894:910:java.lang.String addName(java.lang.String,int,int) -> addName
    922:933:java.lang.String addName(java.lang.String,int,int,int) -> addName
    945:990:java.lang.String addName(java.lang.String,int[],int) -> addName
    995:1009:void _verifySharing() -> _verifySharing
    1017:1065:int _findOffsetForAdd(int) -> _findOffsetForAdd
    1072:1093:int _resizeAndFindOffsetForAdd(int) -> _resizeAndFindOffsetForAdd
    1099:1106:boolean _checkNeedForRehash() -> _checkNeedForRehash
    1111:1125:int _appendLongName(int[],int) -> _appendLongName
    1150:1159:int calcHash(int) -> calcHash
    1166:1176:int calcHash(int,int) -> calcHash
    1181:1194:int calcHash(int,int,int) -> calcHash
    1205:1231:int calcHash(int[],int) -> calcHash
    1243:1319:void rehash() -> rehash
    1326:1335:void nukeSymbols(boolean) -> nukeSymbols
    1349:1350:int _spilloverStart() -> _spilloverStart
    1356:1359:void _reportTooManyCollisions() -> _reportTooManyCollisions
    1368:1381:int _calcTertiaryShift(int) -> _calcTertiaryShift
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo -> com.fasterxml.jackson.core.sym.a$a:
# {"fileName":"ByteQuadsCanonicalizer.java","id":"sourceFile"}
    int size -> a
    int count -> b
    int tertiaryShift -> c
    int[] mainHash -> d
    java.lang.String[] names -> e
    int spilloverEnd -> f
    int longNameOffset -> g
    1409:1417:void <init>(int,int,int,int[],java.lang.String[],int,int) -> <init>
    1420:1428:void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer) -> <init>
    1431:1434:com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo createInitial(int) -> createInitial
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer -> com.fasterxml.jackson.core.sym.b:
# {"fileName":"CharsToNameCanonicalizer.java","id":"sourceFile"}
    int HASH_MULT -> a
    int DEFAULT_T_SIZE -> q
    int MAX_T_SIZE -> r
    int MAX_ENTRIES_FOR_REUSE -> b
    int MAX_COLL_CHAIN_LENGTH -> c
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent -> d
    java.util.concurrent.atomic.AtomicReference _tableInfo -> e
    int _seed -> f
    int _flags -> g
    boolean _canonicalize -> h
    java.lang.String[] _symbols -> i
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> j
    int _size -> k
    int _sizeThreshold -> l
    int _indexMask -> m
    int _longestCollisionList -> n
    boolean _hashShared -> o
    java.util.BitSet _overflows -> p
    233:247:void <init>(int) -> <init>
    254:275:void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo) -> <init>
    277:277:int _thresholdSize(int) -> _thresholdSize
    296:299:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    303:303:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(int) -> createRoot
    322:322:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int) -> makeChild
    333:342:void release() -> release
    353:370:void mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo) -> mergeChild
    382:386:int size() -> size
    395:395:int bucketCount() -> bucketCount
    396:396:boolean maybeDirty() -> maybeDirty
    397:397:int hashSeed() -> hashSeed
    409:416:int collisionCount() -> collisionCount
    428:428:int maxCollisionLength() -> maxCollisionLength
    438:477:java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    481:488:java.lang.String _findSymbol2(char[],int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> _findSymbol2
    493:524:java.lang.String _addSymbol(char[],int,int,int,int) -> _addSymbol
    536:560:void _handleSpillOverflow(int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket,int) -> _handleSpillOverflow
    572:575:int _hashToIndex(int) -> _hashToIndex
    591:596:int calcHash(char[],int,int) -> calcHash
    601:608:int calcHash(java.lang.String) -> calcHash
    622:626:void copyArrays() -> copyArrays
    636:711:void rehash() -> rehash
    719:719:void _reportTooManyCollisions(int) -> _reportTooManyCollisions
    731:752:void verifyInternalConsistency() -> verifyInternalConsistency
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket -> com.fasterxml.jackson.core.sym.b$a:
# {"fileName":"CharsToNameCanonicalizer.java","id":"sourceFile"}
    java.lang.String symbol -> a
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket next -> b
    int length -> c
    819:823:void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket) -> <init>
    826:835:java.lang.String has(char[],int,int) -> has
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo -> com.fasterxml.jackson.core.sym.b$b:
# {"fileName":"CharsToNameCanonicalizer.java","id":"sourceFile"}
    int size -> a
    int longestCollisionList -> b
    java.lang.String[] symbols -> c
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] buckets -> d
    855:860:void <init>(int,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[]) -> <init>
    863:868:void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer) -> <init>
    871:871:com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo createInitial(int) -> createInitial
com.fasterxml.jackson.core.sym.Name -> com.fasterxml.jackson.core.sym.c:
# {"fileName":"Name.java","id":"sourceFile"}
    java.lang.String _name -> a
    int _hashCode -> b
    16:19:void <init>(java.lang.String,int) -> <init>
    21:21:java.lang.String getName() -> getName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int,int,int) -> equals
    boolean equals(int[],int) -> equals
    43:43:java.lang.String toString() -> toString
    45:45:int hashCode() -> hashCode
    49:49:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.sym.Name1 -> com.fasterxml.jackson.core.sym.d:
# {"fileName":"Name1.java","id":"sourceFile"}
    com.fasterxml.jackson.core.sym.Name1 EMPTY -> c
    int q -> d
    18:20:void <init>(java.lang.String,int,int) -> <init>
    22:22:com.fasterxml.jackson.core.sym.Name1 getEmptyName() -> getEmptyName
    24:24:boolean equals(int) -> equals
    25:25:boolean equals(int,int) -> equals
    26:26:boolean equals(int,int,int) -> equals
    28:28:boolean equals(int[],int) -> equals
    14:14:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.sym.Name2 -> com.fasterxml.jackson.core.sym.e:
# {"fileName":"Name2.java","id":"sourceFile"}
    int q1 -> c
    int q2 -> d
    17:20:void <init>(java.lang.String,int,int,int) -> <init>
    23:23:boolean equals(int) -> equals
    26:26:boolean equals(int,int) -> equals
    28:28:boolean equals(int,int,int) -> equals
    31:31:boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.Name3 -> com.fasterxml.jackson.core.sym.f:
# {"fileName":"Name3.java","id":"sourceFile"}
    int q1 -> c
    int q2 -> d
    int q3 -> e
    13:17:void <init>(java.lang.String,int,int,int,int) -> <init>
    21:21:boolean equals(int) -> equals
    25:25:boolean equals(int,int) -> equals
    29:29:boolean equals(int,int,int) -> equals
    34:34:boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.NameN -> com.fasterxml.jackson.core.sym.g:
# {"fileName":"NameN.java","id":"sourceFile"}
    int q1 -> c
    int q2 -> d
    int q3 -> e
    int q4 -> f
    int qlen -> g
    int[] q -> h
    17:24:void <init>(java.lang.String,int,int,int,int,int,int[],int) -> <init>
    31:48:com.fasterxml.jackson.core.sym.NameN construct(java.lang.String,int,int[],int) -> construct
    54:54:boolean equals(int) -> equals
    58:58:boolean equals(int,int) -> equals
    62:62:boolean equals(int,int,int) -> equals
    66:87:boolean equals(int[],int) -> equals
    92:98:boolean _equals2(int[]) -> _equals2
com.fasterxml.jackson.core.sym.package-info -> com.fasterxml.jackson.core.sym.h:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.type.ResolvedType -> com.fasterxml.jackson.core.type.a:
# {"fileName":"ResolvedType.java","id":"sourceFile"}
    14:14:void <init>() -> <init>
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    61:61:boolean isReferenceType() -> isReferenceType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    88:88:java.lang.Class getParameterSource() -> getParameterSource
    com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.String toCanonical() -> toCanonical
com.fasterxml.jackson.core.type.TypeReference -> com.fasterxml.jackson.core.type.b:
# {"fileName":"TypeReference.java","id":"sourceFile"}
    java.lang.reflect.Type _type -> a
    32:45:void <init>() -> <init>
    47:47:java.lang.reflect.Type getType() -> getType
    55:55:int compareTo(com.fasterxml.jackson.core.type.TypeReference) -> compareTo
    27:27:int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.core.type.WritableTypeId -> com.fasterxml.jackson.core.type.c:
# {"fileName":"WritableTypeId.java","id":"sourceFile"}
    java.lang.Object forValue -> a
    java.lang.Class forValueType -> b
    java.lang.Object id -> c
    java.lang.String asProperty -> d
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion include -> e
    com.fasterxml.jackson.core.JsonToken valueShape -> f
    boolean wrapperWritten -> g
    java.lang.Object extra -> h
    156:156:void <init>() -> <init>
    166:167:void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> <init>
    179:181:void <init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> <init>
    193:197:void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> <init>
com.fasterxml.jackson.core.type.WritableTypeId$Inclusion -> com.fasterxml.jackson.core.type.c$a:
# {"fileName":"WritableTypeId.java","id":"sourceFile"}
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion WRAPPER_ARRAY -> a
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion WRAPPER_OBJECT -> b
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion METADATA_PROPERTY -> c
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion PAYLOAD_PROPERTY -> d
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion PARENT_PROPERTY -> e
    com.fasterxml.jackson.core.type.WritableTypeId$Inclusion[] $VALUES -> f
    34:34:com.fasterxml.jackson.core.type.WritableTypeId$Inclusion[] values() -> values
    34:34:com.fasterxml.jackson.core.type.WritableTypeId$Inclusion valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    95:95:boolean requiresObjectContext() -> requiresObjectContext
    34:92:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.type.package-info -> com.fasterxml.jackson.core.type.d:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.core.util.BufferRecycler -> com.fasterxml.jackson.core.util.a:
# {"fileName":"BufferRecycler.java","id":"sourceFile"}
    int BYTE_READ_IO_BUFFER -> a
    int BYTE_WRITE_ENCODING_BUFFER -> b
    int BYTE_WRITE_CONCAT_BUFFER -> c
    int BYTE_BASE64_CODEC_BUFFER -> d
    int CHAR_TOKEN_BUFFER -> e
    int CHAR_CONCAT_BUFFER -> f
    int CHAR_TEXT_BUFFER -> g
    int CHAR_NAME_COPY_BUFFER -> h
    int[] BYTE_BUFFER_LENGTHS -> k
    int[] CHAR_BUFFER_LENGTHS -> l
    java.util.concurrent.atomic.AtomicReferenceArray _byteBuffers -> i
    java.util.concurrent.atomic.AtomicReferenceArray _charBuffers -> j
    96:97:void <init>() -> <init>
    108:111:void <init>(int,int) -> <init>
    125:125:byte[] allocByteBuffer(int) -> allocByteBuffer
    129:137:byte[] allocByteBuffer(int,int) -> allocByteBuffer
    141:142:void releaseByteBuffer(int,byte[]) -> releaseByteBuffer
    151:151:char[] allocCharBuffer(int) -> allocCharBuffer
    155:163:char[] allocCharBuffer(int,int) -> allocCharBuffer
    167:168:void releaseCharBuffer(int,char[]) -> releaseCharBuffer
    177:177:int byteBufferLength(int) -> byteBufferLength
    181:181:int charBufferLength(int) -> charBufferLength
    190:190:byte[] balloc(int) -> balloc
    191:191:char[] calloc(int) -> calloc
    76:77:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.BufferRecyclers -> com.fasterxml.jackson.core.util.b:
# {"fileName":"BufferRecyclers.java","id":"sourceFile"}
    java.lang.String SYSTEM_PROPERTY_TRACK_REUSABLE_BUFFERS -> a
    com.fasterxml.jackson.core.util.ThreadLocalBufferManager _bufferRecyclerTracker -> c
    java.lang.ThreadLocal _recyclerRef -> b
    15:15:void <init>() -> <init>
    67:79:com.fasterxml.jackson.core.util.BufferRecycler getBufferRecycler() -> getBufferRecycler
    96:99:int releaseBuffers() -> releaseBuffers
    119:119:com.fasterxml.jackson.core.io.JsonStringEncoder getJsonStringEncoder() -> getJsonStringEncoder
    134:134:byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    150:150:char[] quoteAsJsonText(java.lang.String) -> quoteAsJsonText
    165:166:void quoteAsJsonText(java.lang.CharSequence,java.lang.StringBuilder) -> quoteAsJsonText
    181:181:byte[] quoteAsJsonUTF8(java.lang.String) -> quoteAsJsonUTF8
    38:57:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.ByteArrayBuilder -> com.fasterxml.jackson.core.util.c:
# {"fileName":"ByteArrayBuilder.java","id":"sourceFile"}
    byte[] NO_BYTES -> a
    int INITIAL_BLOCK_SIZE -> c
    int MAX_BLOCK_SIZE -> d
    int DEFAULT_BLOCK_ARRAY_SIZE -> b
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> e
    java.util.LinkedList _pastBlocks -> f
    int _pastLen -> g
    byte[] _currBlock -> h
    int _currBlockPtr -> i
    51:51:void <init>() -> <init>
    52:52:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    53:53:void <init>(int) -> <init>
    44:63:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,int) -> <init>
    44:69:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,byte[],int) -> <init>
    72:72:com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[],int) -> fromInitial
    76:82:void reset() -> reset
    90:90:int size() -> size
    99:104:void release() -> release
    107:111:void append(int) -> append
    114:121:void appendTwoBytes(int) -> appendTwoBytes
    124:133:void appendThreeBytes(int) -> appendThreeBytes
    137:148:void appendFourBytes(int) -> appendFourBytes
    158:180:byte[] toByteArray() -> toByteArray
    196:197:byte[] resetAndGetFirstSegment() -> resetAndGetFirstSegment
    208:209:byte[] finishCurrentSegment() -> finishCurrentSegment
    222:223:byte[] completeAndCoalesce(int) -> completeAndCoalesce
    226:226:byte[] getCurrentSegment() -> getCurrentSegment
    227:227:void setCurrentSegmentLength(int) -> setCurrentSegmentLength
    228:228:int getCurrentSegmentLength() -> getCurrentSegmentLength
    238:239:void write(byte[]) -> write
    245:256:void write(byte[],int,int) -> write
    260:261:void write(int) -> write
    263:263:void close() -> close
    264:264:void flush() -> flush
    274:298:void _allocMore() -> _allocMore
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultIndenter -> com.fasterxml.jackson.core.util.d:
# {"fileName":"DefaultIndenter.java","id":"sourceFile"}
    long serialVersionUID -> d
    java.lang.String SYS_LF -> a
    com.fasterxml.jackson.core.util.DefaultIndenter SYSTEM_LINEFEED_INSTANCE -> b
    int INDENT_LEVELS -> e
    char[] indents -> f
    int charsPerLevel -> g
    java.lang.String eol -> h
    44:45:void <init>() -> <init>
    55:66:void <init>(java.lang.String,java.lang.String) -> <init>
    70:73:com.fasterxml.jackson.core.util.DefaultIndenter withLinefeed(java.lang.String) -> withLinefeed
    78:81:com.fasterxml.jackson.core.util.DefaultIndenter withIndent(java.lang.String) -> withIndent
    85:85:boolean isInline() -> isInline
    90:99:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    102:102:java.lang.String getEol() -> getEol
    106:106:java.lang.String getIndent() -> getIndent
    22:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter -> com.fasterxml.jackson.core.util.e:
# {"fileName":"DefaultPrettyPrinter.java","id":"sourceFile"}
    long serialVersionUID -> k
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> c
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter -> d
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter -> e
    com.fasterxml.jackson.core.SerializableString _rootSeparator -> f
    boolean _spacesInObjectEntries -> g
    int _nesting -> h
    com.fasterxml.jackson.core.util.Separators _separators -> i
    java.lang.String _objectFieldValueSeparatorWithSpaces -> j
    110:111:void <init>() -> <init>
    123:124:void <init>(java.lang.String) -> <init>
    61:135:void <init>(com.fasterxml.jackson.core.SerializableString) -> <init>
    138:139:void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter) -> <init>
    61:153:void <init>(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString) -> <init>
    157:161:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(com.fasterxml.jackson.core.SerializableString) -> withRootSeparator
    172:172:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(java.lang.String) -> withRootSeparator
    176:177:void indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> indentArraysWith
    180:181:void indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> indentObjectsWith
    185:193:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withArrayIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> withArrayIndenter
    198:206:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withObjectIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> withObjectIndenter
    220:220:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSpacesInObjectEntries() -> withSpacesInObjectEntries
    234:234:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withoutSpacesInObjectEntries() -> withoutSpacesInObjectEntries
    239:244:com.fasterxml.jackson.core.util.DefaultPrettyPrinter _withSpaces(boolean) -> _withSpaces
    257:259:com.fasterxml.jackson.core.util.DefaultPrettyPrinter withSeparators(com.fasterxml.jackson.core.util.Separators) -> withSeparators
    270:274:com.fasterxml.jackson.core.util.DefaultPrettyPrinter createInstance() -> createInstance
    286:289:void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    294:298:void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    303:304:void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    318:323:void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    337:339:void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    344:353:void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    358:362:void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    366:367:void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    381:383:void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    388:397:void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    24:24:java.lang.Object createInstance() -> createInstance
    37:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter -> com.fasterxml.jackson.core.util.e$a:
# {"fileName":"DefaultPrettyPrinter.java","id":"sourceFile"}
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter instance -> a
    425:425:void <init>() -> <init>
    432:433:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    436:436:boolean isInline() -> isInline
    427:427:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter -> com.fasterxml.jackson.core.util.e$b:
# {"fileName":"DefaultPrettyPrinter.java","id":"sourceFile"}
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter -> com.fasterxml.jackson.core.util.e$c:
# {"fileName":"DefaultPrettyPrinter.java","id":"sourceFile"}
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance -> c
    408:408:void <init>() -> <init>
    414:414:void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    417:417:boolean isInline() -> isInline
    411:411:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.Instantiatable -> com.fasterxml.jackson.core.util.f:
# {"fileName":"Instantiatable.java","id":"sourceFile"}
    java.lang.Object createInstance() -> createInstance
com.fasterxml.jackson.core.util.InternCache -> com.fasterxml.jackson.core.util.g:
# {"fileName":"InternCache.java","id":"sourceFile"}
    long serialVersionUID -> b
    int MAX_ENTRIES -> c
    com.fasterxml.jackson.core.util.InternCache instance -> a
    java.lang.Object lock -> d
    32:34:void <init>() -> <init>
    37:58:java.lang.String intern(java.lang.String) -> intern
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.JacksonFeature -> com.fasterxml.jackson.core.util.h:
# {"fileName":"JacksonFeature.java","id":"sourceFile"}
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
com.fasterxml.jackson.core.util.JacksonFeatureSet -> com.fasterxml.jackson.core.util.i:
# {"fileName":"JacksonFeatureSet.java","id":"sourceFile"}
    int _enabled -> a
    22:24:void <init>(int) -> <init>
    39:52:com.fasterxml.jackson.core.util.JacksonFeatureSet fromDefaults(com.fasterxml.jackson.core.util.JacksonFeature[]) -> fromDefaults
    56:56:com.fasterxml.jackson.core.util.JacksonFeatureSet fromBitmask(int) -> fromBitmask
    69:70:com.fasterxml.jackson.core.util.JacksonFeatureSet with(com.fasterxml.jackson.core.util.JacksonFeature) -> with
    83:84:com.fasterxml.jackson.core.util.JacksonFeatureSet without(com.fasterxml.jackson.core.util.JacksonFeature) -> without
    95:95:boolean isEnabled(com.fasterxml.jackson.core.util.JacksonFeature) -> isEnabled
    104:104:int asBitmask() -> asBitmask
com.fasterxml.jackson.core.util.JsonGeneratorDelegate -> com.fasterxml.jackson.core.util.j:
# {"fileName":"JsonGeneratorDelegate.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonGenerator delegate -> k
    boolean delegateCopyMethods -> l
    33:34:void <init>(com.fasterxml.jackson.core.JsonGenerator) -> <init>
    42:45:void <init>(com.fasterxml.jackson.core.JsonGenerator,boolean) -> <init>
    53:53:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    56:57:com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    60:60:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    61:61:com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    62:62:com.fasterxml.jackson.core.Version version() -> version
    63:63:java.lang.Object getOutputTarget() -> getOutputTarget
    64:64:int getOutputBuffered() -> getOutputBuffered
    66:66:void assignCurrentValue(java.lang.Object) -> assignCurrentValue
    67:67:java.lang.Object currentValue() -> currentValue
    71:71:void setCurrentValue(java.lang.Object) -> setCurrentValue
    75:75:java.lang.Object getCurrentValue() -> getCurrentValue
    84:84:boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    87:87:boolean canWriteTypeId() -> canWriteTypeId
    90:90:boolean canWriteObjectId() -> canWriteObjectId
    93:93:boolean canWriteBinaryNatively() -> canWriteBinaryNatively
    96:96:boolean canOmitFields() -> canOmitFields
    99:99:boolean canWriteFormattedNumbers() -> canWriteFormattedNumbers
    103:103:com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities() -> getWriteCapabilities
    114:115:com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    120:121:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    125:125:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    131:131:int getFeatureMask() -> getFeatureMask
    136:137:com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    142:143:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    148:149:com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int,int) -> overrideFormatFeatures
    160:161:com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setPrettyPrinter
    165:165:com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> getPrettyPrinter
    168:169:com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    172:173:com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    176:176:int getHighestEscapedChar() -> getHighestEscapedChar
    179:179:com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    182:183:com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    186:187:com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    196:196:void writeStartArray() -> writeStartArray
    200:200:void writeStartArray(int) -> writeStartArray
    203:203:void writeStartArray(java.lang.Object) -> writeStartArray
    206:206:void writeStartArray(java.lang.Object,int) -> writeStartArray
    209:209:void writeEndArray() -> writeEndArray
    212:212:void writeStartObject() -> writeStartObject
    215:215:void writeStartObject(java.lang.Object) -> writeStartObject
    219:220:void writeStartObject(java.lang.Object,int) -> writeStartObject
    223:223:void writeEndObject() -> writeEndObject
    227:228:void writeFieldName(java.lang.String) -> writeFieldName
    232:233:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    237:238:void writeFieldId(long) -> writeFieldId
    242:243:void writeArray(int[],int,int) -> writeArray
    247:248:void writeArray(long[],int,int) -> writeArray
    252:253:void writeArray(double[],int,int) -> writeArray
    257:258:void writeArray(java.lang.String[],int,int) -> writeArray
    267:267:void writeString(java.lang.String) -> writeString
    271:272:void writeString(java.io.Reader,int) -> writeString
    275:275:void writeString(char[],int,int) -> writeString
    278:278:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    281:281:void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    284:284:void writeUTF8String(byte[],int,int) -> writeUTF8String
    293:293:void writeRaw(java.lang.String) -> writeRaw
    296:296:void writeRaw(java.lang.String,int,int) -> writeRaw
    299:299:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    302:302:void writeRaw(char[],int,int) -> writeRaw
    305:305:void writeRaw(char) -> writeRaw
    308:308:void writeRawValue(java.lang.String) -> writeRawValue
    311:311:void writeRawValue(java.lang.String,int,int) -> writeRawValue
    314:314:void writeRawValue(char[],int,int) -> writeRawValue
    317:317:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    320:320:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    329:329:void writeNumber(short) -> writeNumber
    332:332:void writeNumber(int) -> writeNumber
    335:335:void writeNumber(long) -> writeNumber
    338:338:void writeNumber(java.math.BigInteger) -> writeNumber
    341:341:void writeNumber(double) -> writeNumber
    344:344:void writeNumber(float) -> writeNumber
    347:347:void writeNumber(java.math.BigDecimal) -> writeNumber
    350:350:void writeNumber(java.lang.String) -> writeNumber
    353:353:void writeNumber(char[],int,int) -> writeNumber
    356:356:void writeBoolean(boolean) -> writeBoolean
    359:359:void writeNull() -> writeNull
    385:386:void writeOmittedField(java.lang.String) -> writeOmittedField
    395:395:void writeObjectId(java.lang.Object) -> writeObjectId
    398:398:void writeObjectRef(java.lang.Object) -> writeObjectRef
    401:401:void writeTypeId(java.lang.Object) -> writeTypeId
    404:404:void writeEmbeddedObject(java.lang.Object) -> writeEmbeddedObject
    414:415:void writePOJO(java.lang.Object) -> writePOJO
    419:433:void writeObject(java.lang.Object) -> writeObject
    437:451:void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    469:471:void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    475:477:void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    485:485:com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    493:493:void flush() -> flush
    494:494:void close() -> close
    496:496:boolean isClosed() -> isClosed
    505:505:com.fasterxml.jackson.core.JsonGenerator getDelegate() -> getDelegate
    512:512:com.fasterxml.jackson.core.JsonGenerator delegate() -> delegate
com.fasterxml.jackson.core.util.JsonParserDelegate -> com.fasterxml.jackson.core.util.k:
# {"fileName":"JsonParserDelegate.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonParser delegate -> m
    25:27:void <init>(com.fasterxml.jackson.core.JsonParser) -> <init>
    35:35:void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    36:36:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    40:41:com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    46:47:com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    50:50:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    51:51:int getFeatureMask() -> getFeatureMask
    56:57:com.fasterxml.jackson.core.JsonParser setFeatureMask(int) -> setFeatureMask
    62:63:com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int,int) -> overrideStdFeatures
    68:69:com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int) -> overrideFormatFeatures
    72:72:com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    73:73:void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    74:74:boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    75:75:com.fasterxml.jackson.core.Version version() -> version
    76:76:java.lang.Object getInputSource() -> getInputSource
    86:86:com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    95:95:boolean requiresCustomCodec() -> requiresCustomCodec
    97:97:com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    105:105:void close() -> close
    106:106:boolean isClosed() -> isClosed
    114:114:void clearCurrentToken() -> clearCurrentToken
    115:115:com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    116:116:void overrideCurrentName(java.lang.String) -> overrideCurrentName
    119:119:void assignCurrentValue(java.lang.Object) -> assignCurrentValue
    123:123:void setCurrentValue(java.lang.Object) -> setCurrentValue
    131:131:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    133:133:com.fasterxml.jackson.core.JsonToken currentToken() -> currentToken
    134:134:int currentTokenId() -> currentTokenId
    135:135:java.lang.String currentName() -> currentName
    137:137:java.lang.Object currentValue() -> currentValue
    140:140:com.fasterxml.jackson.core.JsonLocation currentLocation() -> currentLocation
    142:142:com.fasterxml.jackson.core.JsonLocation currentTokenLocation() -> currentTokenLocation
    145:145:com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    147:147:int getCurrentTokenId() -> getCurrentTokenId
    149:149:java.lang.String getCurrentName() -> getCurrentName
    151:151:java.lang.Object getCurrentValue() -> getCurrentValue
    154:154:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    156:156:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    164:164:boolean hasCurrentToken() -> hasCurrentToken
    165:165:boolean hasTokenId(int) -> hasTokenId
    166:166:boolean hasToken(com.fasterxml.jackson.core.JsonToken) -> hasToken
    168:168:boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    169:169:boolean isExpectedStartObjectToken() -> isExpectedStartObjectToken
    170:170:boolean isExpectedNumberIntToken() -> isExpectedNumberIntToken
    172:172:boolean isNaN() -> isNaN
    180:180:java.lang.String getText() -> getText
    181:181:boolean hasTextCharacters() -> hasTextCharacters
    182:182:char[] getTextCharacters() -> getTextCharacters
    183:183:int getTextLength() -> getTextLength
    184:184:int getTextOffset() -> getTextOffset
    185:185:int getText(java.io.Writer) -> getText
    194:194:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    197:197:boolean getBooleanValue() -> getBooleanValue
    200:200:byte getByteValue() -> getByteValue
    203:203:short getShortValue() -> getShortValue
    206:206:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    209:209:double getDoubleValue() -> getDoubleValue
    212:212:float getFloatValue() -> getFloatValue
    215:215:int getIntValue() -> getIntValue
    218:218:long getLongValue() -> getLongValue
    221:221:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    224:224:java.lang.Number getNumberValue() -> getNumberValue
    227:227:java.lang.Number getNumberValueExact() -> getNumberValueExact
    230:230:java.lang.Object getNumberValueDeferred() -> getNumberValueDeferred
    238:238:int getValueAsInt() -> getValueAsInt
    239:239:int getValueAsInt(int) -> getValueAsInt
    240:240:long getValueAsLong() -> getValueAsLong
    241:241:long getValueAsLong(long) -> getValueAsLong
    242:242:double getValueAsDouble() -> getValueAsDouble
    243:243:double getValueAsDouble(double) -> getValueAsDouble
    244:244:boolean getValueAsBoolean() -> getValueAsBoolean
    245:245:boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    246:246:java.lang.String getValueAsString() -> getValueAsString
    247:247:java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    255:255:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    256:256:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    257:257:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    259:259:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    261:261:com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    263:263:void finishToken() -> finishToken
    267:269:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    278:278:boolean canReadObjectId() -> canReadObjectId
    279:279:boolean canReadTypeId() -> canReadTypeId
    280:280:java.lang.Object getObjectId() -> getObjectId
    281:281:java.lang.Object getTypeId() -> getTypeId
    296:296:com.fasterxml.jackson.core.JsonParser delegate() -> delegate
com.fasterxml.jackson.core.util.JsonParserSequence -> com.fasterxml.jackson.core.util.l:
# {"fileName":"JsonParserSequence.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonParser[] _parsers -> d
    boolean _checkForExistingToken -> e
    int _nextParserIndex -> f
    boolean _hasToken -> g
    60:61:void <init>(com.fasterxml.jackson.core.JsonParser[]) -> <init>
    66:71:void <init>(boolean,com.fasterxml.jackson.core.JsonParser[]) -> <init>
    92:108:com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser) -> createFlattened
    113:113:com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser) -> createFlattened
    119:127:void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    138:139:void close() -> close
    144:155:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    166:186:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    203:203:int containedParsersCount() -> containedParsersCount
    223:227:boolean switchToNext() -> switchToNext
    232:242:com.fasterxml.jackson.core.JsonToken switchAndReturnNext() -> switchAndReturnNext
com.fasterxml.jackson.core.util.MinimalPrettyPrinter -> com.fasterxml.jackson.core.util.m:
# {"fileName":"MinimalPrettyPrinter.java","id":"sourceFile"}
    long serialVersionUID -> e
    java.lang.String _rootValueSeparator -> c
    com.fasterxml.jackson.core.util.Separators _separators -> d
    44:45:void <init>() -> <init>
    47:50:void <init>(java.lang.String) -> <init>
    53:54:void setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    64:65:com.fasterxml.jackson.core.util.MinimalPrettyPrinter setSeparators(com.fasterxml.jackson.core.util.Separators) -> setSeparators
    77:80:void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    85:86:void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    92:92:void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    104:105:void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    117:118:void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    123:124:void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    129:130:void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    136:136:void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    148:149:void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    154:155:void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
com.fasterxml.jackson.core.util.ReadConstrainedTextBuffer -> com.fasterxml.jackson.core.util.n:
# {"fileName":"ReadConstrainedTextBuffer.java","id":"sourceFile"}
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> d
    11:13:void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    27:28:void validateStringLength(int) -> validateStringLength
com.fasterxml.jackson.core.util.RequestPayload -> com.fasterxml.jackson.core.util.o:
# {"fileName":"RequestPayload.java","id":"sourceFile"}
    long serialVersionUID -> d
    byte[] _payloadAsBytes -> a
    java.lang.CharSequence _payloadAsText -> b
    java.lang.String _charset -> c
    27:33:void <init>(byte[],java.lang.String) -> <init>
    35:40:void <init>(java.lang.CharSequence) -> <init>
    49:53:java.lang.Object getRawPayload() -> getRawPayload
    58:65:java.lang.String toString() -> toString
com.fasterxml.jackson.core.util.Separators -> com.fasterxml.jackson.core.util.p:
# {"fileName":"Separators.java","id":"sourceFile"}
    long serialVersionUID -> a
    char objectFieldValueSeparator -> b
    char objectEntrySeparator -> c
    char arrayValueSeparator -> d
    23:23:com.fasterxml.jackson.core.util.Separators createDefaultInstance() -> createDefaultInstance
    27:28:void <init>() -> <init>
    31:35:void <init>(char,char,char) -> <init>
    38:38:com.fasterxml.jackson.core.util.Separators withObjectFieldValueSeparator(char) -> withObjectFieldValueSeparator
    43:43:com.fasterxml.jackson.core.util.Separators withObjectEntrySeparator(char) -> withObjectEntrySeparator
    48:48:com.fasterxml.jackson.core.util.Separators withArrayValueSeparator(char) -> withArrayValueSeparator
    53:53:char getObjectFieldValueSeparator() -> getObjectFieldValueSeparator
    57:57:char getObjectEntrySeparator() -> getObjectEntrySeparator
    61:61:char getArrayValueSeparator() -> getArrayValueSeparator
com.fasterxml.jackson.core.util.TextBuffer -> com.fasterxml.jackson.core.util.q:
# {"fileName":"TextBuffer.java","id":"sourceFile"}
    char[] NO_CHARS -> a
    int MIN_SEGMENT_LEN -> b
    int MAX_SEGMENT_LEN -> c
    com.fasterxml.jackson.core.util.BufferRecycler _allocator -> d
    char[] _inputBuffer -> e
    int _inputStart -> f
    int _inputLen -> g
    java.util.ArrayList _segments -> h
    boolean _hasSegments -> i
    int _segmentSize -> j
    char[] _currentSegment -> k
    int _currentSize -> l
    java.lang.String _resultString -> m
    char[] _resultArray -> n
    124:126:void <init>(com.fasterxml.jackson.core.util.BufferRecycler) -> <init>
    130:134:void <init>(com.fasterxml.jackson.core.util.BufferRecycler,char[]) -> <init>
    148:148:com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[]) -> fromInitial
    166:188:void releaseBuffers() -> releaseBuffers
    196:208:void resetWithEmpty() -> resetWithEmpty
    220:233:void resetWith(char) -> resetWith
    248:260:void resetWithShared(char[],int,int) -> resetWithShared
    270:285:void resetWithCopy(char[],int,int) -> resetWithCopy
    296:310:void resetWithCopy(java.lang.String,int,int) -> resetWithCopy
    318:331:void resetWithString(java.lang.String) -> resetWithString
    342:342:char[] getBufferWithoutReset() -> getBufferWithoutReset
    349:352:char[] buf(int) -> buf
    357:367:void clearSegments() -> clearSegments
    379:389:int size() -> size
    397:397:int getTextOffset() -> getTextOffset
    410:413:boolean hasTextAsCharacters() -> hasTextAsCharacters
    427:437:char[] getTextBuffer() -> getTextBuffer
    456:504:java.lang.String contentsAsString() -> contentsAsString
    512:516:char[] contentsAsArray() -> contentsAsArray
    532:535:double contentsAsDouble(boolean) -> contentsAsDouble
    551:551:double contentsAsDouble() -> contentsAsDouble
    565:565:float contentsAsFloat() -> contentsAsFloat
    580:583:float contentsAsFloat(boolean) -> contentsAsFloat
    599:602:java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    622:631:int contentsAsInt(boolean) -> contentsAsInt
    650:659:long contentsAsLong(boolean) -> contentsAsLong
    675:706:int contentsToWriter(java.io.Writer) -> contentsToWriter
    720:723:void ensureNotShared() -> ensureNotShared
    731:745:void append(char) -> append
    756:790:void append(char[],int,int) -> append
    801:834:void append(java.lang.String,int,int) -> append
    837:843:void validateAppend(int) -> validateAppend
    857:868:char[] getCurrentSegment() -> getCurrentSegment
    874:890:char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    893:893:int getCurrentSegmentSize() -> getCurrentSegmentSize
    894:894:void setCurrentLength(int) -> setCurrentLength
    910:920:java.lang.String setCurrentAndReturn(int) -> setCurrentAndReturn
    928:950:char[] finishCurrentSegment() -> finishCurrentSegment
    963:971:java.lang.String finishAndReturn(int,boolean) -> finishAndReturn
    978:995:java.lang.String _doTrim(int) -> _doTrim
    1008:1016:char[] expandCurrentSegment() -> expandCurrentSegment
    1031:1034:char[] expandCurrentSegment(int) -> expandCurrentSegment
    1050:1052:java.lang.String toString() -> toString
    1068:1085:void unshare(int) -> unshare
    1091:1112:void expand() -> expand
    1116:1152:char[] resultArray() -> resultArray
    1155:1155:char[] carr(int) -> carr
    1164:1165:void _reportBufferOverflow(int,int) -> _reportBufferOverflow
    1184:1184:void validateStringLength(int) -> validateStringLength
    30:30:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.ThreadLocalBufferManager -> com.fasterxml.jackson.core.util.r:
# {"fileName":"ThreadLocalBufferManager.java","id":"sourceFile"}
    java.lang.Object RELEASE_LOCK -> a
    java.util.Map _trackedRecyclers -> b
    java.lang.ref.ReferenceQueue _refQueue -> c
    20:45:void <init>() -> <init>
    57:57:com.fasterxml.jackson.core.util.ThreadLocalBufferManager instance() -> instance
    67:77:int releaseBuffers() -> releaseBuffers
    82:87:java.lang.ref.SoftReference wrapAndTrack(com.fasterxml.jackson.core.util.BufferRecycler) -> wrapAndTrack
    103:107:void removeSoftRefsClearedByGc() -> removeSoftRefsClearedByGc
com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder -> com.fasterxml.jackson.core.util.r$a:
# {"fileName":"ThreadLocalBufferManager.java","id":"sourceFile"}
    com.fasterxml.jackson.core.util.ThreadLocalBufferManager manager -> a
    113:113:void <init>() -> <init>
    114:114:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.VersionUtil -> com.fasterxml.jackson.core.util.s:
# {"fileName":"VersionUtil.java","id":"sourceFile"}
    java.util.regex.Pattern V_SEP -> a
    36:36:void <init>() -> <init>
    39:39:com.fasterxml.jackson.core.Version version() -> version
    62:75:com.fasterxml.jackson.core.Version versionFor(java.lang.Class) -> versionFor
    90:90:com.fasterxml.jackson.core.Version packageVersionFor(java.lang.Class) -> packageVersionFor
    111:127:com.fasterxml.jackson.core.Version mavenVersionFor(java.lang.ClassLoader,java.lang.String,java.lang.String) -> mavenVersionFor
    142:150:com.fasterxml.jackson.core.Version parseVersion(java.lang.String,java.lang.String,java.lang.String) -> parseVersion
    154:160:int parseVersionPart(java.lang.String) -> parseVersionPart
    165:167:void _close(java.io.Closeable) -> _close
    176:176:void throwInternal() -> throwInternal
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.core.util.package-info -> com.fasterxml.jackson.core.util.t:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.AbstractTypeResolver -> com.fasterxml.jackson.databind.a:
# {"fileName":"AbstractTypeResolver.java","id":"sourceFile"}
    8:8:void <init>() -> <init>
    31:31:com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeMapping
    48:48:com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> resolveAbstractType
    69:69:com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> resolveAbstractType
com.fasterxml.jackson.databind.AnnotationIntrospector -> com.fasterxml.jackson.databind.b:
# {"fileName":"AnnotationIntrospector.java","id":"sourceFile"}
    39:39:void <init>() -> <init>
    165:165:com.fasterxml.jackson.databind.AnnotationIntrospector nopInstance() -> nopInstance
    169:169:com.fasterxml.jackson.databind.AnnotationIntrospector pair(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> pair
    193:193:java.util.Collection allIntrospectors() -> allIntrospectors
    212:213:java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    com.fasterxml.jackson.core.Version version() -> version
    242:242:boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    265:265:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    279:279:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    303:303:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    317:317:java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    338:338:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnoralByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnoralByName
    356:356:com.fasterxml.jackson.annotation.JsonIncludeProperties$Value findPropertyInclusionByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusionByName
    368:368:java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> findFilterId
    383:383:java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    398:398:java.lang.Object findEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findEnumNamingStrategy
    413:413:java.lang.String findClassDescription(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findClassDescription
    428:428:java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated,boolean) -> findPropertiesToIgnore
    442:442:java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    455:455:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnorals
    478:478:com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    503:503:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    523:523:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    545:545:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    559:559:java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    568:568:java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    580:580:java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    592:592:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    602:602:com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    611:611:boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    631:635:com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValue
    643:643:java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    661:661:java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    672:672:com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    686:686:com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated) -> findWrapperName
    696:696:java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDefaultValue
    708:708:java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDescription
    721:721:java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIndex
    736:736:java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findImplicitPropertyName
    746:746:java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAliases
    757:757:com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAccess
    769:769:com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> resolveSetterConflict
    805:805:com.fasterxml.jackson.databind.PropertyName findRenameByField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName) -> findRenameByField
    813:813:java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    829:829:java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    839:839:java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    851:851:java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    861:861:java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findNullSerializer
    873:873:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    898:898:java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationConverter
    920:920:java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findSerializationContentConverter
    932:932:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusion
    951:951:com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineSerializationType
    965:965:java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    974:974:java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationSortAlphabetically
    984:984:void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> findAndAddVirtualProperties
    1007:1007:com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    1024:1024:java.lang.Boolean hasAsKey(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsKey
    1042:1047:java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsValue
    1065:1070:java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnyGetter
    1089:1089:java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> findEnumValues
    1108:1108:void findEnumAliases(java.lang.Class,java.lang.Enum[],java.lang.String[][]) -> findEnumAliases
    1120:1120:java.lang.Enum findDefaultEnumValue(java.lang.Class) -> findDefaultEnumValue
    1139:1139:java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    1149:1149:boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    1159:1159:boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    1176:1176:java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    1188:1188:java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    1201:1201:java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    1227:1227:java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializationConverter
    1249:1249:java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findDeserializationContentConverter
    1267:1267:com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineDeserializationType
    1288:1288:java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    1309:1309:java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    1320:1320:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    1344:1344:com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    1361:1361:java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnySetter
    1376:1376:com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findSetterInfo
    1390:1390:java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findMergeInfo
    1413:1420:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorAnnotation
    1439:1439:boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    1457:1457:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorBinding
    1469:1469:boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    1502:1502:java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> _findAnnotation
    1524:1524:boolean _hasAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> _hasAnnotation
    1540:1540:boolean _hasOneOf(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class[]) -> _hasOneOf
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty -> com.fasterxml.jackson.databind.b$a:
# {"fileName":"AnnotationIntrospector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type _type -> a
    java.lang.String _name -> b
    77:80:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type,java.lang.String) -> <init>
    82:82:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> managed
    83:83:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> back
    85:85:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type getType() -> getType
    86:86:java.lang.String getName() -> getName
    88:88:boolean isManagedReference() -> isManagedReference
    89:89:boolean isBackReference() -> isBackReference
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type -> com.fasterxml.jackson.databind.b$a$a:
# {"fileName":"AnnotationIntrospector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> a
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> c
    54:54:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    54:54:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
    54:54:void <init>(java.lang.String,int) -> <init>
    54:70:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions -> com.fasterxml.jackson.databind.b$b:
# {"fileName":"AnnotationIntrospector.java","id":"sourceFile"}
    java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findNamespace
    java.lang.Boolean isOutputAsAttribute(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> isOutputAsAttribute
    java.lang.Boolean isOutputAsText(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> isOutputAsText
    java.lang.Boolean isOutputAsCData(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> isOutputAsCData
com.fasterxml.jackson.databind.BeanDescription -> com.fasterxml.jackson.databind.c:
# {"fileName":"BeanDescription.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType _type -> a
    37:39:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    51:51:com.fasterxml.jackson.databind.JavaType getType() -> getType
    53:53:java.lang.Class getBeanClass() -> getBeanClass
    58:58:boolean isRecordType() -> isRecordType
    64:64:boolean isNonStaticInnerClass() -> isNonStaticInnerClass
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    java.util.List findProperties() -> findProperties
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.List findBackReferences() -> findBackReferences
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    java.util.List getConstructors() -> getConstructors
    java.util.List getConstructorsWithMode() -> getConstructorsWithMode
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.util.List getFactoryMethodsWithMode() -> getFactoryMethodsWithMode
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    227:227:com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonKeyAccessor() -> findJsonKeyAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor() -> findJsonValueAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> findAnyGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor() -> findAnySetterAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    267:271:com.fasterxml.jackson.databind.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    279:283:com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterField() -> findAnySetterField
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> findPropertyInclusion
    com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> findExpectedFormat
    com.fasterxml.jackson.databind.util.Converter findSerializationConverter() -> findSerializationConverter
    com.fasterxml.jackson.databind.util.Converter findDeserializationConverter() -> findDeserializationConverter
    334:334:java.lang.String findClassDescription() -> findClassDescription
    java.util.Map findInjectables() -> findInjectables
    java.lang.Class findPOJOBuilder() -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> findPOJOBuilderConfig
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    java.lang.Class[] findDefaultViews() -> findDefaultViews
com.fasterxml.jackson.databind.BeanProperty -> com.fasterxml.jackson.databind.d:
# {"fileName":"BeanProperty.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> b
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    boolean isRequired() -> isRequired
    boolean isVirtual() -> isVirtual
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector) -> findFormatOverrides
    com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    39:40:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.BeanProperty$Bogus -> com.fasterxml.jackson.databind.d$a:
# {"fileName":"BeanProperty.java","id":"sourceFile"}
    352:352:void <init>() -> <init>
    356:356:java.lang.String getName() -> getName
    361:361:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    366:366:com.fasterxml.jackson.databind.JavaType getType() -> getType
    371:371:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    376:376:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    381:381:boolean isRequired() -> isRequired
    386:386:boolean isVirtual() -> isVirtual
    391:391:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    396:396:java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    401:401:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    407:407:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector) -> findFormatOverrides
    412:412:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    419:419:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    424:424:java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
    430:430:void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.BeanProperty$Std -> com.fasterxml.jackson.databind.d$b:
# {"fileName":"BeanProperty.java","id":"sourceFile"}
    long serialVersionUID -> h
    com.fasterxml.jackson.databind.PropertyName _name -> c
    com.fasterxml.jackson.databind.JavaType _type -> d
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> e
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> g
    234:240:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    250:251:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    257:258:void <init>(com.fasterxml.jackson.databind.BeanProperty$Std,com.fasterxml.jackson.databind.JavaType) -> <init>
    261:261:com.fasterxml.jackson.databind.BeanProperty$Std withType(com.fasterxml.jackson.databind.JavaType) -> withType
    266:266:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    271:271:java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    277:283:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector) -> findFormatOverrides
    288:297:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    303:312:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    319:319:java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
    322:322:java.lang.String getName() -> getName
    323:323:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    324:324:com.fasterxml.jackson.databind.JavaType getType() -> getType
    325:325:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    326:326:boolean isRequired() -> isRequired
    327:327:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    328:328:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    331:331:boolean isVirtual() -> isVirtual
    342:342:void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.DatabindContext -> com.fasterxml.jackson.databind.e:
# {"fileName":"DatabindContext.java","id":"sourceFile"}
    int MAX_ERROR_STR_LEN -> a
    29:29:void <init>() -> <init>
    com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    java.lang.Class getActiveView() -> getActiveView
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    com.fasterxml.jackson.databind.DatabindContext setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    162:165:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    191:216:com.fasterxml.jackson.databind.JavaType resolveSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> resolveSubType
    230:261:com.fasterxml.jackson.databind.JavaType resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> resolveAndValidateSubType
    268:286:com.fasterxml.jackson.databind.JavaType _resolveAndValidateGeneric(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,int) -> _resolveAndValidateGeneric
    290:290:java.lang.Object _throwNotASubtype(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> _throwNotASubtype
    295:296:java.lang.Object _throwSubtypeNameNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> _throwSubtypeNameNotAllowed
    301:302:java.lang.Object _throwSubtypeClassNotAllowed(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> _throwSubtypeClassNotAllowed
    com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    331:339:com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdGeneratorInstance
    344:352:com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdResolverInstance
    366:392:com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> converterInstance
    java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    414:414:java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String) -> reportBadDefinition
    427:430:java.lang.String _format(java.lang.String,java.lang.Object[]) -> _format
    437:443:java.lang.String _truncate(java.lang.String) -> _truncate
    450:454:java.lang.String _quotedString(java.lang.String) -> _quotedString
    461:464:java.lang.String _colonConcat(java.lang.String,java.lang.String) -> _colonConcat
    471:475:java.lang.String _desc(java.lang.String) -> _desc
com.fasterxml.jackson.databind.DatabindException -> com.fasterxml.jackson.databind.f:
# {"fileName":"DatabindException.java","id":"sourceFile"}
    long serialVersionUID -> b
    22:23:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    26:27:void <init>(java.lang.String) -> <init>
    30:31:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void prependPath(java.lang.Object,java.lang.String) -> prependPath
    void prependPath(java.lang.Object,int) -> prependPath
com.fasterxml.jackson.databind.DeserializationConfig -> com.fasterxml.jackson.databind.g:
# {"fileName":"DeserializationConfig.java","id":"sourceFile"}
    long serialVersionUID -> w
    int DESER_FEATURE_DEFAULTS -> x
    com.fasterxml.jackson.databind.util.LinkedNode _problemHandlers -> a
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> b
    com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs -> c
    com.fasterxml.jackson.databind.cfg.ConstructorDetector _ctorDetector -> d
    int _deserFeatures -> e
    int _parserFeatures -> f
    int _parserFeaturesToChange -> g
    int _formatReadFeatures -> h
    int _formatReadFeaturesToChange -> i
    120:130:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.CoercionConfigs,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    142:152:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.CoercionConfigs) -> <init>
    166:176:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,long,int,int,int,int,int) -> <init>
    184:194:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> <init>
    198:208:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    212:222:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    227:237:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> <init>
    242:252:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.util.LinkedNode) -> <init>
    256:266:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.PropertyName) -> <init>
    270:280:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> <init>
    284:294:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.ContextAttributes) -> <init>
    298:308:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver) -> <init>
    316:326:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    329:329:com.fasterxml.jackson.databind.cfg.BaseSettings getBaseSettings() -> getBaseSettings
    339:339:com.fasterxml.jackson.databind.DeserializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    344:344:com.fasterxml.jackson.databind.DeserializationConfig _withMapperFeatures(long) -> _withMapperFeatures
    351:351:com.fasterxml.jackson.databind.DeserializationConfig _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    362:362:com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    367:374:com.fasterxml.jackson.databind.DeserializationConfig withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    379:379:com.fasterxml.jackson.databind.DeserializationConfig withView(java.lang.Class) -> withView
    384:384:com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    399:400:com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.DeserializationFeature) -> with
    413:417:com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> with
    429:433:com.fasterxml.jackson.databind.DeserializationConfig withFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withFeatures
    445:446:com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature) -> without
    459:463:com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> without
    475:479:com.fasterxml.jackson.databind.DeserializationConfig withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withoutFeatures
    499:501:com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.core.JsonParser$Feature) -> with
    515:522:com.fasterxml.jackson.databind.DeserializationConfig withFeatures(com.fasterxml.jackson.core.JsonParser$Feature[]) -> withFeatures
    536:538:com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.core.JsonParser$Feature) -> without
    552:559:com.fasterxml.jackson.databind.DeserializationConfig withoutFeatures(com.fasterxml.jackson.core.JsonParser$Feature[]) -> withoutFeatures
    580:585:com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.core.FormatFeature) -> with
    600:610:com.fasterxml.jackson.databind.DeserializationConfig withFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withFeatures
    625:630:com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.core.FormatFeature) -> without
    645:655:com.fasterxml.jackson.databind.DeserializationConfig withoutFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withoutFeatures
    663:681:com.fasterxml.jackson.databind.DeserializationConfig _withJsonReadFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> _withJsonReadFeatures
    690:708:com.fasterxml.jackson.databind.DeserializationConfig _withoutJsonReadFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> _withoutJsonReadFeatures
    726:729:com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> with
    736:739:com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> with
    749:752:com.fasterxml.jackson.databind.DeserializationConfig withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> withHandler
    761:764:com.fasterxml.jackson.databind.DeserializationConfig withNoProblemHandlers() -> withNoProblemHandlers
    782:788:com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser) -> initialize
    795:804:com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.FormatSchema) -> initialize
    816:819:boolean useRootWrapping() -> useRootWrapping
    831:831:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    835:839:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature,com.fasterxml.jackson.core.JsonFactory) -> isEnabled
    849:849:boolean hasDeserializationFeatures(int) -> hasDeserializationFeatures
    859:859:boolean hasSomeOfFeatures(int) -> hasSomeOfFeatures
    867:867:int getDeserializationFeatures() -> getDeserializationFeatures
    879:879:boolean requiresFullValue() -> requiresFullValue
    894:894:boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    908:908:com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers() -> getProblemHandlers
    912:912:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    919:922:com.fasterxml.jackson.databind.cfg.ConstructorDetector getConstructorDetector() -> getConstructorDetector
    938:938:com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> introspect
    946:946:com.fasterxml.jackson.databind.BeanDescription introspectForCreation(com.fasterxml.jackson.databind.JavaType) -> introspectForCreation
    953:953:com.fasterxml.jackson.databind.BeanDescription introspectForBuilder(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> introspectForBuilder
    963:963:com.fasterxml.jackson.databind.BeanDescription introspectForBuilder(com.fasterxml.jackson.databind.JavaType) -> introspectForBuilder
    982:998:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    1022:1022:com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> findCoercionAction
    1046:1046:com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction) -> findCoercionFromBlankString
    25:25:com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    25:25:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    25:25:com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    25:25:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    25:25:com.fasterxml.jackson.databind.cfg.MapperConfigBase _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    25:25:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(long) -> _withMapperFeatures
    25:25:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    33:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.DeserializationContext -> com.fasterxml.jackson.databind.h:
# {"fileName":"DeserializationContext.java","id":"sourceFile"}
    long serialVersionUID -> n
    com.fasterxml.jackson.databind.deser.DeserializerCache _cache -> a
    com.fasterxml.jackson.databind.deser.DeserializerFactory _factory -> b
    com.fasterxml.jackson.databind.DeserializationConfig _config -> c
    int _featureFlags -> d
    com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities -> e
    java.lang.Class _view -> f
    com.fasterxml.jackson.core.JsonParser _parser -> g
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> h
    com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders -> i
    com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer -> j
    java.text.DateFormat _dateFormat -> k
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> l
    com.fasterxml.jackson.databind.util.LinkedNode _currentType -> m
    165:166:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    170:185:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache) -> <init>
    189:200:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    208:222:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    232:243:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    248:257:void <init>(com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    266:266:com.fasterxml.jackson.databind.DeserializationConfig getConfig() -> getConfig
    269:269:java.lang.Class getActiveView() -> getActiveView
    273:273:boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    278:278:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    283:283:boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    288:288:com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    293:293:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    298:298:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    303:303:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    310:315:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    326:326:java.util.Locale getLocale() -> getLocale
    337:337:java.util.TimeZone getTimeZone() -> getTimeZone
    348:348:java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    354:355:com.fasterxml.jackson.databind.DeserializationContext setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    372:372:com.fasterxml.jackson.databind.JavaType getContextualType() -> getContextualType
    385:385:com.fasterxml.jackson.databind.deser.DeserializerFactory getFactory() -> getFactory
    396:396:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    408:408:boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability) -> isEnabled
    418:418:int getDeserializationFeatures() -> getDeserializationFeatures
    428:428:boolean hasDeserializationFeatures(int) -> hasDeserializationFeatures
    438:438:boolean hasSomeOfFeatures(int) -> hasSomeOfFeatures
    449:449:com.fasterxml.jackson.core.JsonParser getParser() -> getParser
    455:459:java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
    471:471:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    481:481:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    505:505:com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionAction(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> findCoercionAction
    528:528:com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction) -> findCoercionFromBlankString
    547:547:com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering(com.fasterxml.jackson.core.JsonParser) -> bufferForInputBuffering
    557:557:com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering() -> bufferForInputBuffering
    576:578:com.fasterxml.jackson.databind.util.TokenBuffer bufferAsCopyOfValue(com.fasterxml.jackson.core.JsonParser) -> bufferAsCopyOfValue
    599:610:boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference) -> hasValueDeserializerFor
    621:625:com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findContextualValueDeserializer
    644:644:com.fasterxml.jackson.databind.JsonDeserializer findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> findNonContextualValueDeserializer
    654:666:com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> findRootValueDeserializer
    681:692:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findKeyDeserializer
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver) -> findObjectId
    void checkUnresolvedObjectId() -> checkUnresolvedObjectId
    729:729:com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> constructType
    743:743:java.lang.Class findClass(java.lang.String) -> findClass
    760:766:com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    779:783:void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer) -> returnObjectBuffer
    791:794:com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> keyDeserializerInstance
    833:841:com.fasterxml.jackson.databind.JsonDeserializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> handlePrimaryContextualization
    864:872:com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> handleSecondaryContextualization
    894:899:java.util.Date parseDate(java.lang.String) -> parseDate
    909:911:java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    943:943:java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class) -> extractScalarFromObject
    964:964:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    972:977:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValue
    993:993:java.lang.Object readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> readPropertyValue
    1005:1011:java.lang.Object readPropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> readPropertyValue
    1025:1036:com.fasterxml.jackson.databind.JsonNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    1062:1067:java.lang.Object readTreeAsValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class) -> readTreeAsValue
    1086:1091:java.lang.Object readTreeAsValue(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JavaType) -> readTreeAsValue
    1097:1101:com.fasterxml.jackson.databind.node.TreeTraversingParser _treeAsTokens(com.fasterxml.jackson.databind.JsonNode) -> _treeAsTokens
    1123:1138:boolean handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    1166:1184:java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> handleWeirdKey
    1212:1230:java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> handleWeirdStringValue
    1257:1275:java.lang.Object handleWeirdNumberValue(java.lang.Class,java.lang.Number,java.lang.String,java.lang.Object[]) -> handleWeirdNumberValue
    1282:1299:java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser) -> handleWeirdNativeValue
    1324:1364:java.lang.Object handleMissingInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> handleMissingInstantiator
    1388:1411:java.lang.Object handleInstantiationProblem(java.lang.Class,java.lang.Object,java.lang.Throwable) -> handleInstantiationProblem
    1431:1431:java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser) -> handleUnexpectedToken
    1453:1453:java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> handleUnexpectedToken
    1473:1473:java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser) -> handleUnexpectedToken
    1495:1527:java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[]) -> handleUnexpectedToken
    1553:1575:com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleUnknownTypeId
    1584:1607:com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleMissingTypeId
    1623:1629:void handleBadMerge(com.fasterxml.jackson.databind.JsonDeserializer) -> handleBadMerge
    1636:1641:boolean _isCompatible(java.lang.Class,java.lang.Object) -> _isCompatible
    1665:1666:void reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    1683:1684:void reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    1701:1702:void reportWrongTokenException(java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    1711:1713:java.lang.Object reportUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.lang.Object) -> reportUnresolvedObjectId
    1725:1726:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    1738:1739:java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    1751:1752:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    1764:1774:java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.BeanProperty,java.lang.String,java.lang.Object[]) -> reportInputMismatch
    1786:1791:java.lang.Object reportPropertyInputMismatch(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[]) -> reportPropertyInputMismatch
    1803:1803:java.lang.Object reportPropertyInputMismatch(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String,java.lang.Object[]) -> reportPropertyInputMismatch
    1816:1819:java.lang.Object reportBadCoercion(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[]) -> reportBadCoercion
    1825:1827:java.lang.Object reportTrailingTokens(java.lang.Class,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken) -> reportTrailingTokens
    1836:1837:void reportWrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object[]) -> reportWrongTokenException
    1856:1862:void reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer) -> reportUnknownProperty
    1871:1871:void reportMissingContent(java.lang.String,java.lang.Object[]) -> reportMissingContent
    1890:1893:java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[]) -> reportBadTypeDefinition
    1905:1910:java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[]) -> reportBadPropertyDefinition
    1915:1915:java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    1923:1924:java.lang.Object reportBadMerge(com.fasterxml.jackson.databind.JsonDeserializer) -> reportBadMerge
    1947:1950:com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    1956:1959:com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    1966:1966:com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    1979:1981:com.fasterxml.jackson.databind.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    2000:2002:com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String) -> weirdStringException
    2014:2016:com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String) -> weirdNumberException
    2032:2034:com.fasterxml.jackson.databind.JsonMappingException weirdNativeValueException(java.lang.Object,java.lang.Class) -> weirdNativeValueException
    2049:2058:com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    2073:2076:com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    2082:2084:com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    2092:2094:com.fasterxml.jackson.databind.JsonMappingException missingTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> missingTypeIdException
    2112:2115:com.fasterxml.jackson.databind.JsonMappingException unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> unknownTypeException
    2126:2127:com.fasterxml.jackson.databind.JsonMappingException endOfInputException(java.lang.Class) -> endOfInputException
    2151:2151:void reportMappingException(java.lang.String,java.lang.Object[]) -> reportMappingException
    2167:2167:com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String) -> mappingException
    2183:2183:com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String,java.lang.Object[]) -> mappingException
    2193:2193:com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class) -> mappingException
    2201:2203:com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> mappingException
    2214:2214:java.text.DateFormat getDateFormat() -> getDateFormat
    2218:2228:java.text.DateFormat _getDateFormat() -> _getDateFormat
    2237:2272:java.lang.String _shapeForToken(com.fasterxml.jackson.core.JsonToken) -> _shapeForToken
    58:58:com.fasterxml.jackson.databind.DatabindContext setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    58:58:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
com.fasterxml.jackson.databind.DeserializationContext$1 -> com.fasterxml.jackson.databind.h$1:
# {"fileName":"DeserializationContext.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    2238:2238:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.DeserializationFeature -> com.fasterxml.jackson.databind.i:
# {"fileName":"DeserializationFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS -> a
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS -> b
    com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS -> c
    com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> d
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNKNOWN_PROPERTIES -> e
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES -> f
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NUMBERS_FOR_ENUMS -> g
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_INVALID_SUBTYPE -> h
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_READING_DUP_TREE_KEY -> i
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_IGNORED_PROPERTIES -> j
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNRESOLVED_OBJECT_IDS -> k
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_MISSING_CREATOR_PROPERTIES -> l
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_CREATOR_PROPERTIES -> m
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY -> n
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS -> o
    com.fasterxml.jackson.databind.DeserializationFeature WRAP_EXCEPTIONS -> p
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_SINGLE_VALUE_AS_ARRAY -> q
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS -> r
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_ROOT_VALUE -> s
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> t
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT -> u
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_FLOAT_AS_INT -> v
    com.fasterxml.jackson.databind.DeserializationFeature READ_ENUMS_USING_TO_STRING -> w
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_AS_NULL -> x
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE -> y
    com.fasterxml.jackson.databind.DeserializationFeature READ_DATE_TIMESTAMPS_AS_NANOSECONDS -> z
    com.fasterxml.jackson.databind.DeserializationFeature ADJUST_DATES_TO_CONTEXT_TIME_ZONE -> A
    com.fasterxml.jackson.databind.DeserializationFeature EAGER_DESERIALIZER_FETCH -> B
    boolean _defaultState -> C
    int _mask -> D
    com.fasterxml.jackson.databind.DeserializationFeature[] $VALUES -> E
    21:21:com.fasterxml.jackson.databind.DeserializationFeature[] values() -> values
    21:21:com.fasterxml.jackson.databind.DeserializationFeature valueOf(java.lang.String) -> valueOf
    509:512:void <init>(java.lang.String,int,boolean) -> <init>
    515:515:boolean enabledByDefault() -> enabledByDefault
    518:518:int getMask() -> getMask
    521:521:boolean enabledIn(int) -> enabledIn
    21:502:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.EnumNamingStrategies -> com.fasterxml.jackson.databind.j:
# {"fileName":"EnumNamingStrategies.java","id":"sourceFile"}
    10:10:void <init>() -> <init>
com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy -> com.fasterxml.jackson.databind.j$a:
# {"fileName":"EnumNamingStrategies.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy INSTANCE -> a
    48:48:void <init>() -> <init>
    62:88:java.lang.String convertEnumToExternalName(java.lang.String) -> convertEnumToExternalName
    92:98:int indexIn(java.lang.CharSequence,int) -> indexIn
    102:109:java.lang.String normalizeWord(java.lang.String) -> normalizeWord
    113:118:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    122:122:char charToUpperCaseIfLower(char) -> charToUpperCaseIfLower
    126:126:char charToLowerCaseIfUpper(char) -> charToLowerCaseIfUpper
    55:55:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.EnumNamingStrategy -> com.fasterxml.jackson.databind.k:
# {"fileName":"EnumNamingStrategy.java","id":"sourceFile"}
    java.lang.String convertEnumToExternalName(java.lang.String) -> convertEnumToExternalName
com.fasterxml.jackson.databind.InjectableValues -> com.fasterxml.jackson.databind.l:
# {"fileName":"InjectableValues.java","id":"sourceFile"}
    11:11:void <init>() -> <init>
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
com.fasterxml.jackson.databind.InjectableValues$Std -> com.fasterxml.jackson.databind.l$a:
# {"fileName":"InjectableValues.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.util.Map _values -> a
    49:50:void <init>() -> <init>
    52:54:void <init>(java.util.Map) -> <init>
    57:58:com.fasterxml.jackson.databind.InjectableValues$Std addValue(java.lang.String,java.lang.Object) -> addValue
    62:63:com.fasterxml.jackson.databind.InjectableValues$Std addValue(java.lang.Class,java.lang.Object) -> addValue
    70:81:java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
com.fasterxml.jackson.databind.JavaType -> com.fasterxml.jackson.databind.m:
# {"fileName":"JavaType.java","id":"sourceFile"}
    long serialVersionUID -> f
    java.lang.Class _class -> a
    int _hash -> b
    java.lang.Object _valueHandler -> c
    java.lang.Object _typeHandler -> d
    boolean _asStatic -> e
    87:93:void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean) -> <init>
    101:107:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    210:219:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    250:253:com.fasterxml.jackson.databind.JavaType forcedNarrowBy(java.lang.Class) -> forcedNarrowBy
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    266:266:java.lang.Class getRawClass() -> getRawClass
    274:274:boolean hasRawClass(java.lang.Class) -> hasRawClass
    284:284:boolean hasContentType() -> hasContentType
    291:291:boolean isTypeOrSubTypeOf(java.lang.Class) -> isTypeOrSubTypeOf
    298:298:boolean isTypeOrSuperTypeOf(java.lang.Class) -> isTypeOrSuperTypeOf
    303:303:boolean isAbstract() -> isAbstract
    313:320:boolean isConcrete() -> isConcrete
    324:324:boolean isThrowable() -> isThrowable
    327:327:boolean isArrayType() -> isArrayType
    340:340:boolean isEnumType() -> isEnumType
    350:350:boolean isEnumImplType() -> isEnumImplType
    357:357:boolean isRecordType() -> isRecordType
    361:361:boolean isInterface() -> isInterface
    364:364:boolean isPrimitive() -> isPrimitive
    367:367:boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    382:382:boolean isCollectionLikeType() -> isCollectionLikeType
    390:390:boolean isMapLikeType() -> isMapLikeType
    401:401:boolean isJavaLangObject() -> isJavaLangObject
    411:411:boolean useStaticType() -> useStaticType
    420:420:boolean hasGenericTypes() -> hasGenericTypes
    423:423:com.fasterxml.jackson.databind.JavaType getKeyType() -> getKeyType
    426:426:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    429:429:com.fasterxml.jackson.databind.JavaType getReferencedType() -> getReferencedType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    444:444:java.lang.Class getParameterSource() -> getParameterSource
    470:471:com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int) -> containedTypeOrUnknown
    com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> getBindings
    com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class) -> findSuperType
    com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    java.util.List getInterfaces() -> getInterfaces
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class) -> findTypeParameters
    528:528:java.lang.Object getValueHandler() -> getValueHandler
    538:538:java.lang.Object getTypeHandler() -> getTypeHandler
    549:549:java.lang.Object getContentValueHandler() -> getContentValueHandler
    560:560:java.lang.Object getContentTypeHandler() -> getContentTypeHandler
    565:565:boolean hasValueHandler() -> hasValueHandler
    576:576:boolean hasHandlers() -> hasHandlers
    596:598:java.lang.String getGenericSignature() -> getGenericSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    617:619:java.lang.String getErasedSignature() -> getErasedSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    648:648:int hashCode() -> hashCode
    21:21:com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    21:21:com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
    21:21:com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    21:21:com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
com.fasterxml.jackson.databind.JsonDeserializer -> com.fasterxml.jackson.databind.n:
# {"fileName":"JsonDeserializer.java","id":"sourceFile"}
    47:47:void <init>() -> <init>
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    129:130:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    152:152:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    167:168:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.lang.Object) -> deserializeWithType
    187:187:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    200:200:com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer) -> replaceDelegatee
    225:225:java.lang.Class handledType() -> handledType
    237:237:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    253:253:boolean isCachable() -> isCachable
    267:267:com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    283:283:java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    309:309:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    328:328:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    350:350:java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    376:376:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    388:388:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    415:415:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    425:426:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    449:449:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    462:462:java.lang.Object getNullValue() -> getNullValue
    468:468:java.lang.Object getEmptyValue() -> getEmptyValue
com.fasterxml.jackson.databind.JsonDeserializer$None -> com.fasterxml.jackson.databind.n$a:
# {"fileName":"JsonDeserializer.java","id":"sourceFile"}
    484:484:void <init>() -> <init>
com.fasterxml.jackson.databind.JsonMappingException -> com.fasterxml.jackson.databind.o:
# {"fileName":"JsonMappingException.java","id":"sourceFile"}
    long serialVersionUID -> e
    int MAX_REFS_TO_LIST -> b
    java.util.LinkedList _path -> c
    java.io.Closeable _processor -> d
    209:209:void <init>(java.lang.String) -> <init>
    215:215:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    221:221:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    227:227:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable) -> <init>
    233:241:void <init>(java.io.Closeable,java.lang.String) -> <init>
    247:255:void <init>(java.io.Closeable,java.lang.String,java.lang.Throwable) -> <init>
    261:263:void <init>(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    269:269:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> from
    276:276:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> from
    283:283:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> from
    290:290:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable) -> from
    297:297:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> from
    304:304:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Throwable) -> from
    309:309:com.fasterxml.jackson.core.JsonParser _parser(com.fasterxml.jackson.databind.DeserializationContext) -> _parser
    316:316:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String) -> from
    326:326:com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String,java.lang.Throwable) -> from
    331:331:com.fasterxml.jackson.core.JsonGenerator _generator(com.fasterxml.jackson.databind.SerializerProvider) -> _generator
    345:348:com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException) -> fromUnexpectedIOE
    361:361:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapWithPath
    373:373:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> wrapWithPath
    385:405:com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException$Reference) -> wrapWithPath
    412:413:com.fasterxml.jackson.databind.JsonMappingException withCause(java.lang.Throwable) -> withCause
    428:431:java.util.List getPath() -> getPath
    440:440:java.lang.String getPathReference() -> getPathReference
    445:446:java.lang.StringBuilder getPathReference(java.lang.StringBuilder) -> getPathReference
    455:456:void prependPath(java.lang.Object,java.lang.String) -> prependPath
    464:465:void prependPath(java.lang.Object,int) -> prependPath
    469:479:void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference) -> prependPath
    489:489:java.lang.Object getProcessor() -> getProcessor
    493:493:java.lang.String getLocalizedMessage() -> getLocalizedMessage
    502:502:java.lang.String getMessage() -> getMessage
    508:521:java.lang.String _buildMessage() -> _buildMessage
    527:527:java.lang.String toString() -> toString
    538:548:void _appendPathDesc(java.lang.StringBuilder) -> _appendPathDesc
com.fasterxml.jackson.databind.JsonMappingException$Reference -> com.fasterxml.jackson.databind.o$a:
# {"fileName":"JsonMappingException.java","id":"sourceFile"}
    long serialVersionUID -> e
    java.lang.Object _from -> a
    java.lang.String _fieldName -> b
    int _index -> c
    java.lang.String _desc -> d
    69:84:void <init>() -> <init>
    69:86:void <init>(java.lang.Object) -> <init>
    69:94:void <init>(java.lang.Object,java.lang.String) -> <init>
    69:99:void <init>(java.lang.Object,int) -> <init>
    102:102:void setFieldName(java.lang.String) -> setFieldName
    103:103:void setIndex(int) -> setIndex
    104:104:void setDescription(java.lang.String) -> setDescription
    117:117:java.lang.Object getFrom() -> getFrom
    119:119:java.lang.String getFieldName() -> getFieldName
    120:120:int getIndex() -> getIndex
    122:156:java.lang.String getDescription() -> getDescription
    161:161:java.lang.String toString() -> toString
    172:173:java.lang.Object writeReplace() -> writeReplace
com.fasterxml.jackson.databind.JsonNode -> com.fasterxml.jackson.databind.p:
# {"fileName":"JsonNode.java","id":"sourceFile"}
    91:91:void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    124:124:int size() -> size
    135:135:boolean isEmpty() -> isEmpty
    140:144:boolean isValueNode() -> isValueNode
    150:151:boolean isContainerNode() -> isContainerNode
    156:156:boolean isMissingNode() -> isMissingNode
    161:161:boolean isArray() -> isArray
    166:166:boolean isObject() -> isObject
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    209:209:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    236:236:java.util.Iterator fieldNames() -> fieldNames
    253:260:com.fasterxml.jackson.databind.JsonNode at(com.fasterxml.jackson.core.JsonPointer) -> at
    283:283:com.fasterxml.jackson.databind.JsonNode at(java.lang.String) -> at
    com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer) -> _at
    com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    324:324:boolean isPojo() -> isPojo
    331:331:boolean isNumber() -> isNumber
    339:339:boolean isIntegralNumber() -> isIntegralNumber
    345:345:boolean isFloatingPointNumber() -> isFloatingPointNumber
    357:357:boolean isShort() -> isShort
    369:369:boolean isInt() -> isInt
    381:381:boolean isLong() -> isLong
    386:386:boolean isFloat() -> isFloat
    388:388:boolean isDouble() -> isDouble
    389:389:boolean isBigDecimal() -> isBigDecimal
    390:390:boolean isBigInteger() -> isBigInteger
    397:397:boolean isTextual() -> isTextual
    405:405:boolean isBoolean() -> isBoolean
    413:413:boolean isNull() -> isNull
    425:425:boolean isBinary() -> isBinary
    442:442:boolean canConvertToInt() -> canConvertToInt
    458:458:boolean canConvertToLong() -> canConvertToLong
    480:480:boolean canConvertToExactIntegral() -> canConvertToExactIntegral
    499:499:java.lang.String textValue() -> textValue
    512:512:byte[] binaryValue() -> binaryValue
    523:523:boolean booleanValue() -> booleanValue
    533:533:java.lang.Number numberValue() -> numberValue
    545:545:short shortValue() -> shortValue
    557:557:int intValue() -> intValue
    569:569:long longValue() -> longValue
    582:582:float floatValue() -> floatValue
    595:595:double doubleValue() -> doubleValue
    604:604:java.math.BigDecimal decimalValue() -> decimalValue
    617:617:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    642:643:java.lang.String asText(java.lang.String) -> asText
    657:657:int asInt() -> asInt
    671:671:int asInt(int) -> asInt
    685:685:long asLong() -> asLong
    699:699:long asLong(long) -> asLong
    713:713:double asDouble() -> asDouble
    727:727:double asDouble(double) -> asDouble
    741:741:boolean asBoolean() -> asBoolean
    755:755:boolean asBoolean(boolean) -> asBoolean
    777:777:com.fasterxml.jackson.databind.JsonNode require() -> require
    794:794:com.fasterxml.jackson.databind.JsonNode requireNonNull() -> requireNonNull
    818:818:com.fasterxml.jackson.databind.JsonNode required(java.lang.String) -> required
    842:842:com.fasterxml.jackson.databind.JsonNode required(int) -> required
    865:865:com.fasterxml.jackson.databind.JsonNode requiredAt(java.lang.String) -> requiredAt
    888:901:com.fasterxml.jackson.databind.JsonNode requiredAt(com.fasterxml.jackson.core.JsonPointer) -> requiredAt
    932:932:boolean has(java.lang.String) -> has
    958:958:boolean has(int) -> has
    973:974:boolean hasNonNull(java.lang.String) -> hasNonNull
    989:990:boolean hasNonNull(int) -> hasNonNull
    1005:1005:java.util.Iterator iterator() -> iterator
    1014:1014:java.util.Iterator elements() -> elements
    1022:1022:java.util.Iterator fields() -> fields
    1037:1037:java.util.Set properties() -> properties
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    1068:1072:java.util.List findValues(java.lang.String) -> findValues
    1081:1085:java.util.List findValuesAsText(java.lang.String) -> findValuesAsText
    com.fasterxml.jackson.databind.JsonNode findPath(java.lang.String) -> findPath
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    1124:1128:java.util.List findParents(java.lang.String) -> findParents
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    1155:1155:com.fasterxml.jackson.databind.node.ObjectNode withObject(java.lang.String) -> withObject
    1168:1168:com.fasterxml.jackson.databind.node.ObjectNode withObject(java.lang.String,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withObject
    1186:1186:com.fasterxml.jackson.databind.node.ObjectNode withObject(com.fasterxml.jackson.core.JsonPointer) -> withObject
    1260:1261:com.fasterxml.jackson.databind.node.ObjectNode withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withObject
    1284:1285:com.fasterxml.jackson.databind.JsonNode with(java.lang.String) -> with
    1310:1311:com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String) -> withArray
    1324:1324:com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withArray
    1340:1340:com.fasterxml.jackson.databind.node.ArrayNode withArray(com.fasterxml.jackson.core.JsonPointer) -> withArray
    1408:1409:com.fasterxml.jackson.databind.node.ArrayNode withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withArray
    1437:1437:boolean equals(java.util.Comparator,com.fasterxml.jackson.databind.JsonNode) -> equals
    java.lang.String toString() -> toString
    1471:1471:java.lang.String toPrettyString() -> toPrettyString
    boolean equals(java.lang.Object) -> equals
    1495:1495:com.fasterxml.jackson.databind.JsonNode _this() -> _this
    1504:1504:java.lang.Object _reportRequiredViolation(java.lang.String,java.lang.Object[]) -> _reportRequiredViolation
    42:42:com.fasterxml.jackson.core.TreeNode at(java.lang.String) -> at
    42:42:com.fasterxml.jackson.core.TreeNode at(com.fasterxml.jackson.core.JsonPointer) -> at
    42:42:com.fasterxml.jackson.core.TreeNode path(int) -> path
    42:42:com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    42:42:com.fasterxml.jackson.core.TreeNode get(int) -> get
    42:42:com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
com.fasterxml.jackson.databind.JsonNode$1 -> com.fasterxml.jackson.databind.p$1:
# {"fileName":"JsonNode.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$node$JsonNodeType -> a
    140:140:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.JsonNode$OverwriteMode -> com.fasterxml.jackson.databind.p$a:
# {"fileName":"JsonNode.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode NONE -> a
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode NULLS -> b
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode SCALARS -> c
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode ALL -> d
    com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] $VALUES -> e
    59:59:com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] values() -> values
    59:59:com.fasterxml.jackson.databind.JsonNode$OverwriteMode valueOf(java.lang.String) -> valueOf
    59:59:void <init>(java.lang.String,int) -> <init>
    59:82:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.JsonSerializable -> com.fasterxml.jackson.databind.q:
# {"fileName":"JsonSerializable.java","id":"sourceFile"}
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.JsonSerializable$Base -> com.fasterxml.jackson.databind.q$a:
# {"fileName":"JsonSerializable.java","id":"sourceFile"}
    54:54:void <init>() -> <init>
    61:61:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
com.fasterxml.jackson.databind.JsonSerializer -> com.fasterxml.jackson.databind.r:
# {"fileName":"JsonSerializer.java","id":"sourceFile"}
    53:53:void <init>() -> <init>
    77:77:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    90:90:com.fasterxml.jackson.databind.JsonSerializer replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer) -> replaceDelegatee
    104:104:com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    156:163:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    182:182:java.lang.Class handledType() -> handledType
    196:196:boolean isEmpty(java.lang.Object) -> isEmpty
    211:211:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    219:219:boolean usesObjectId() -> usesObjectId
    229:229:boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    244:244:com.fasterxml.jackson.databind.JsonSerializer getDelegatee() -> getDelegatee
    258:258:java.util.Iterator properties() -> properties
    276:277:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.JsonSerializer$None -> com.fasterxml.jackson.databind.r$a:
# {"fileName":"JsonSerializer.java","id":"sourceFile"}
    292:292:void <init>() -> <init>
com.fasterxml.jackson.databind.KeyDeserializer -> com.fasterxml.jackson.databind.s:
# {"fileName":"KeyDeserializer.java","id":"sourceFile"}
    10:10:void <init>() -> <init>
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
com.fasterxml.jackson.databind.KeyDeserializer$None -> com.fasterxml.jackson.databind.s$a:
# {"fileName":"KeyDeserializer.java","id":"sourceFile"}
    25:25:void <init>() -> <init>
com.fasterxml.jackson.databind.MapperFeature -> com.fasterxml.jackson.databind.t:
# {"fileName":"MapperFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.MapperFeature USE_ANNOTATIONS -> a
    com.fasterxml.jackson.databind.MapperFeature USE_GETTERS_AS_SETTERS -> b
    com.fasterxml.jackson.databind.MapperFeature PROPAGATE_TRANSIENT_MARKER -> c
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_CREATORS -> d
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_FIELDS -> e
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_GETTERS -> f
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_IS_GETTERS -> g
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_SETTERS -> h
    com.fasterxml.jackson.databind.MapperFeature REQUIRE_SETTERS_FOR_GETTERS -> i
    com.fasterxml.jackson.databind.MapperFeature ALLOW_FINAL_FIELDS_AS_MUTATORS -> j
    com.fasterxml.jackson.databind.MapperFeature INFER_PROPERTY_MUTATORS -> k
    com.fasterxml.jackson.databind.MapperFeature INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES -> l
    com.fasterxml.jackson.databind.MapperFeature ALLOW_VOID_VALUED_PROPERTIES -> m
    com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS -> n
    com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS -> o
    com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING -> p
    com.fasterxml.jackson.databind.MapperFeature USE_BASE_TYPE_AS_DEFAULT_IMPL -> q
    com.fasterxml.jackson.databind.MapperFeature INFER_BUILDER_TYPE_BINDINGS -> r
    com.fasterxml.jackson.databind.MapperFeature REQUIRE_TYPE_ID_FOR_SUBTYPES -> s
    com.fasterxml.jackson.databind.MapperFeature DEFAULT_VIEW_INCLUSION -> t
    com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY -> u
    com.fasterxml.jackson.databind.MapperFeature SORT_CREATOR_PROPERTIES_FIRST -> v
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES -> w
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS -> x
    com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_VALUES -> y
    com.fasterxml.jackson.databind.MapperFeature USE_WRAPPER_NAME_AS_PROPERTY_NAME -> z
    com.fasterxml.jackson.databind.MapperFeature USE_STD_BEAN_NAMING -> A
    com.fasterxml.jackson.databind.MapperFeature ALLOW_EXPLICIT_PROPERTY_RENAMING -> B
    com.fasterxml.jackson.databind.MapperFeature ALLOW_IS_GETTERS_FOR_NON_BOOLEAN -> C
    com.fasterxml.jackson.databind.MapperFeature ALLOW_COERCION_OF_SCALARS -> D
    com.fasterxml.jackson.databind.MapperFeature IGNORE_DUPLICATE_MODULE_REGISTRATIONS -> E
    com.fasterxml.jackson.databind.MapperFeature IGNORE_MERGE_FOR_UNMERGEABLE -> F
    com.fasterxml.jackson.databind.MapperFeature BLOCK_UNSAFE_POLYMORPHIC_BASE_TYPES -> G
    com.fasterxml.jackson.databind.MapperFeature APPLY_DEFAULT_VALUES -> H
    boolean _defaultState -> I
    long _mask -> J
    com.fasterxml.jackson.databind.MapperFeature[] $VALUES -> K
    17:17:com.fasterxml.jackson.databind.MapperFeature[] values() -> values
    17:17:com.fasterxml.jackson.databind.MapperFeature valueOf(java.lang.String) -> valueOf
    623:629:long collectLongDefaults() -> collectLongDefaults
    632:635:void <init>(java.lang.String,int,boolean) -> <init>
    638:638:boolean enabledByDefault() -> enabledByDefault
    645:645:int getMask() -> getMask
    650:650:long getLongMask() -> getLongMask
    656:656:boolean enabledIn(int) -> enabledIn
    661:661:boolean enabledIn(long) -> enabledIn
    17:615:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.MappingIterator -> com.fasterxml.jackson.databind.u:
# {"fileName":"MappingIterator.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR -> a
    int STATE_CLOSED -> b
    int STATE_NEED_RESYNC -> c
    int STATE_MAY_HAVE_VALUE -> d
    int STATE_HAS_VALUE -> e
    com.fasterxml.jackson.databind.JavaType _type -> f
    com.fasterxml.jackson.databind.DeserializationContext _context -> g
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> h
    com.fasterxml.jackson.core.JsonParser _parser -> i
    com.fasterxml.jackson.core.JsonStreamContext _seqContext -> j
    java.lang.Object _updatedValue -> k
    boolean _closeParser -> l
    int _state -> m
    121:163:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer,boolean,java.lang.Object) -> <init>
    173:173:com.fasterxml.jackson.databind.MappingIterator emptyIterator() -> emptyIterator
    186:190:boolean hasNext() -> hasNext
    199:203:java.lang.Object next() -> next
    209:209:void remove() -> remove
    214:220:void close() -> close
    234:261:boolean hasNextValue() -> hasNextValue
    266:297:java.lang.Object nextValue() -> nextValue
    309:309:java.util.List readAll() -> readAll
    322:325:java.util.List readAll(java.util.List) -> readAll
    336:339:java.util.Collection readAll(java.util.Collection) -> readAll
    354:354:com.fasterxml.jackson.core.JsonParser getParser() -> getParser
    365:365:com.fasterxml.jackson.core.FormatSchema getParserSchema() -> getParserSchema
    379:379:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    390:408:void _resync() -> _resync
    412:412:java.lang.Object _throwNoSuchElement() -> _throwNoSuchElement
    416:416:java.lang.Object _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException) -> _handleMappingException
    420:420:java.lang.Object _handleIOException(java.io.IOException) -> _handleIOException
    16:16:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.MappingJsonFactory -> com.fasterxml.jackson.databind.v:
# {"fileName":"MappingJsonFactory.java","id":"sourceFile"}
    long serialVersionUID -> t
    24:25:void <init>() -> <init>
    29:33:void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    37:41:void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    48:48:com.fasterxml.jackson.databind.ObjectMapper getCodec() -> getCodec
    54:56:com.fasterxml.jackson.core.JsonFactory copy() -> copy
    74:74:java.lang.String getFormatName() -> getFormatName
    83:86:com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    17:17:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
com.fasterxml.jackson.databind.Module -> com.fasterxml.jackson.databind.w:
# {"fileName":"Module.java","id":"sourceFile"}
    25:25:void <init>() -> <init>
    java.lang.String getModuleName() -> getModuleName
    com.fasterxml.jackson.core.Version version() -> version
    62:62:java.lang.Object getTypeId() -> getTypeId
    void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> setupModule
    87:87:java.lang.Iterable getDependencies() -> getDependencies
com.fasterxml.jackson.databind.Module$SetupContext -> com.fasterxml.jackson.databind.w$a:
# {"fileName":"Module.java","id":"sourceFile"}
    com.fasterxml.jackson.core.Version getMapperVersion() -> getMapperVersion
    com.fasterxml.jackson.core.ObjectCodec getOwner() -> getOwner
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.MutableConfigOverride configOverride(java.lang.Class) -> configOverride
    void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> addDeserializers
    void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addSerializers
    void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addKeySerializers
    void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> addValueInstantiators
    void setClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> setClassIntrospector
    void insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> appendAnnotationIntrospector
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.util.Collection) -> registerSubtypes
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
    void addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addDeserializationProblemHandler
    void setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setNamingStrategy
com.fasterxml.jackson.databind.ObjectMapper -> com.fasterxml.jackson.databind.x:
# {"fileName":"ObjectMapper.java","id":"sourceFile"}
    long serialVersionUID -> q
    com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> a
    com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE -> b
    com.fasterxml.jackson.core.JsonFactory _jsonFactory -> c
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> d
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> e
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> f
    com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides -> g
    com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs -> h
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns -> i
    com.fasterxml.jackson.databind.SerializationConfig _serializationConfig -> j
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> k
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> l
    com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig -> m
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext -> n
    java.util.Set _registeredModuleTypes -> o
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> p
    576:577:void <init>() -> <init>
    585:586:void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    595:596:void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    554:633:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.core.JsonFactory) -> <init>
    554:690:void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext) -> <init>
    699:699:com.fasterxml.jackson.databind.introspect.ClassIntrospector defaultClassIntrospector() -> defaultClassIntrospector
    724:725:com.fasterxml.jackson.databind.ObjectMapper copy() -> copy
    738:739:com.fasterxml.jackson.databind.ObjectMapper copyWith(com.fasterxml.jackson.core.JsonFactory) -> copyWith
    747:752:void _checkInvalidCopy(java.lang.Class) -> _checkInvalidCopy
    768:768:com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig) -> _newReader
    780:780:com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues) -> _newReader
    790:790:com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig) -> _newWriter
    800:800:com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema) -> _newWriter
    811:811:com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter) -> _newWriter
    826:826:com.fasterxml.jackson.core.Version version() -> version
    844:1044:com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module) -> registerModule
    1060:1063:com.fasterxml.jackson.databind.ObjectMapper registerModules(com.fasterxml.jackson.databind.Module[]) -> registerModules
    1079:1083:com.fasterxml.jackson.databind.ObjectMapper registerModules(java.lang.Iterable) -> registerModules
    1101:1102:java.util.Set getRegisteredModuleIds() -> getRegisteredModuleIds
    1115:1115:java.util.List findModules() -> findModules
    1129:1134:java.util.List findModules(java.lang.ClassLoader) -> findModules
    1138:1143:java.util.ServiceLoader secureGetServiceLoader(java.lang.Class,java.lang.ClassLoader) -> secureGetServiceLoader
    1165:1165:com.fasterxml.jackson.databind.ObjectMapper findAndRegisterModules() -> findAndRegisterModules
    1184:1187:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    1199:1202:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    1214:1217:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    1229:1232:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    1244:1247:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) -> createGenerator
    1265:1266:com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    1278:1279:com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    1291:1292:com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    1304:1305:com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    1317:1318:com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    1330:1331:com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    1343:1344:com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    1356:1357:com.fasterxml.jackson.core.JsonParser createParser(char[]) -> createParser
    1369:1370:com.fasterxml.jackson.core.JsonParser createParser(char[],int,int) -> createParser
    1382:1383:com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    1395:1395:com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() -> createNonBlockingByteArrayParser
    1413:1413:com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig() -> getSerializationConfig
    1426:1426:com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    1437:1437:com.fasterxml.jackson.databind.DeserializationContext getDeserializationContext() -> getDeserializationContext
    1451:1452:com.fasterxml.jackson.databind.ObjectMapper setSerializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory) -> setSerializerFactory
    1463:1463:com.fasterxml.jackson.databind.ser.SerializerFactory getSerializerFactory() -> getSerializerFactory
    1472:1473:com.fasterxml.jackson.databind.ObjectMapper setSerializerProvider(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) -> setSerializerProvider
    1484:1484:com.fasterxml.jackson.databind.SerializerProvider getSerializerProvider() -> getSerializerProvider
    1496:1496:com.fasterxml.jackson.databind.SerializerProvider getSerializerProviderInstance() -> getSerializerProviderInstance
    1525:1526:com.fasterxml.jackson.databind.ObjectMapper setMixIns(java.util.Map) -> setMixIns
    1543:1544:com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class,java.lang.Class) -> addMixIn
    1557:1563:com.fasterxml.jackson.databind.ObjectMapper setMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> setMixInResolver
    1567:1567:java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    1572:1572:int mixInCount() -> mixInCount
    1580:1581:void setMixInAnnotations(java.util.Map) -> setMixInAnnotations
    1588:1589:void addMixInAnnotations(java.lang.Class,java.lang.Class) -> addMixInAnnotations
    1603:1603:com.fasterxml.jackson.databind.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    1617:1618:com.fasterxml.jackson.databind.ObjectMapper setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> setVisibility
    1647:1650:com.fasterxml.jackson.databind.ObjectMapper setVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> setVisibility
    1657:1657:com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    1664:1667:com.fasterxml.jackson.databind.ObjectMapper setSubtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> setSubtypeResolver
    1681:1683:com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> setAnnotationIntrospector
    1703:1705:com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospectors(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> setAnnotationIntrospectors
    1712:1714:com.fasterxml.jackson.databind.ObjectMapper setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setPropertyNamingStrategy
    1722:1722:com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    1731:1733:com.fasterxml.jackson.databind.ObjectMapper setAccessorNaming(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> setAccessorNaming
    1747:1748:com.fasterxml.jackson.databind.ObjectMapper setDefaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setDefaultPrettyPrinter
    1756:1757:void setVisibilityChecker(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> setVisibilityChecker
    1768:1770:com.fasterxml.jackson.databind.ObjectMapper setPolymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> setPolymorphicTypeValidator
    1782:1782:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator() -> getPolymorphicTypeValidator
    1801:1802:com.fasterxml.jackson.databind.ObjectMapper setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> setSerializationInclusion
    1811:1811:com.fasterxml.jackson.databind.ObjectMapper setPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setPropertyInclusion
    1822:1823:com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setDefaultPropertyInclusion
    1835:1836:com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> setDefaultPropertyInclusion
    1847:1848:com.fasterxml.jackson.databind.ObjectMapper setDefaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter$Value) -> setDefaultSetterInfo
    1860:1861:com.fasterxml.jackson.databind.ObjectMapper setDefaultVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> setDefaultVisibility
    1872:1873:com.fasterxml.jackson.databind.ObjectMapper setDefaultMergeable(java.lang.Boolean) -> setDefaultMergeable
    1880:1881:com.fasterxml.jackson.databind.ObjectMapper setDefaultLeniency(java.lang.Boolean) -> setDefaultLeniency
    1898:1899:void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    1910:1911:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    1917:1918:void registerSubtypes(java.util.Collection) -> registerSubtypes
    1941:1941:com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> activateDefaultTyping
    1962:1962:com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> activateDefaultTyping
    1990:1998:com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> activateDefaultTyping
    2023:2029:com.fasterxml.jackson.databind.ObjectMapper activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String) -> activateDefaultTypingAsProperty
    2041:2041:com.fasterxml.jackson.databind.ObjectMapper deactivateDefaultTyping() -> deactivateDefaultTyping
    2060:2062:com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> setDefaultTyping
    2076:2076:com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping() -> enableDefaultTyping
    2084:2084:com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> enableDefaultTyping
    2092:2092:com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> enableDefaultTyping
    2100:2100:com.fasterxml.jackson.databind.ObjectMapper enableDefaultTypingAsProperty(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String) -> enableDefaultTypingAsProperty
    2108:2108:com.fasterxml.jackson.databind.ObjectMapper disableDefaultTyping() -> disableDefaultTyping
    2135:2135:com.fasterxml.jackson.databind.cfg.MutableConfigOverride configOverride(java.lang.Class) -> configOverride
    2154:2154:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigDefaults() -> coercionConfigDefaults
    2164:2164:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(com.fasterxml.jackson.databind.type.LogicalType) -> coercionConfigFor
    2174:2174:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(java.lang.Class) -> coercionConfigFor
    2187:2187:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    2199:2202:com.fasterxml.jackson.databind.ObjectMapper setTypeFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> setTypeFactory
    2211:2212:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    2222:2223:com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference) -> constructType
    2243:2243:com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    2252:2253:com.fasterxml.jackson.databind.ObjectMapper setNodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> setNodeFactory
    2265:2266:com.fasterxml.jackson.databind.ObjectMapper setConstructorDetector(com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> setConstructorDetector
    2274:2275:com.fasterxml.jackson.databind.ObjectMapper addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addHandler
    2283:2284:com.fasterxml.jackson.databind.ObjectMapper clearProblemHandlers() -> clearProblemHandlers
    2302:2304:com.fasterxml.jackson.databind.ObjectMapper setConfig(com.fasterxml.jackson.databind.DeserializationConfig) -> setConfig
    2318:2319:void setFilters(com.fasterxml.jackson.databind.ser.FilterProvider) -> setFilters
    2333:2334:com.fasterxml.jackson.databind.ObjectMapper setFilterProvider(com.fasterxml.jackson.databind.ser.FilterProvider) -> setFilterProvider
    2348:2350:com.fasterxml.jackson.databind.ObjectMapper setBase64Variant(com.fasterxml.jackson.core.Base64Variant) -> setBase64Variant
    2368:2370:com.fasterxml.jackson.databind.ObjectMapper setConfig(com.fasterxml.jackson.databind.SerializationConfig) -> setConfig
    2398:2398:com.fasterxml.jackson.core.JsonFactory tokenStreamFactory() -> tokenStreamFactory
    2401:2401:com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    2415:2417:com.fasterxml.jackson.databind.ObjectMapper setDateFormat(java.text.DateFormat) -> setDateFormat
    2425:2425:java.text.DateFormat getDateFormat() -> getDateFormat
    2437:2439:java.lang.Object setHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> setHandlerInstantiator
    2447:2448:com.fasterxml.jackson.databind.ObjectMapper setInjectableValues(com.fasterxml.jackson.databind.InjectableValues) -> setInjectableValues
    2455:2455:com.fasterxml.jackson.databind.InjectableValues getInjectableValues() -> getInjectableValues
    2463:2465:com.fasterxml.jackson.databind.ObjectMapper setLocale(java.util.Locale) -> setLocale
    2473:2475:com.fasterxml.jackson.databind.ObjectMapper setTimeZone(java.util.TimeZone) -> setTimeZone
    2487:2489:com.fasterxml.jackson.databind.ObjectMapper setDefaultAttributes(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> setDefaultAttributes
    2503:2503:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    2511:2515:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.MapperFeature,boolean) -> configure
    2523:2525:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.MapperFeature[]) -> enable
    2533:2535:com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.MapperFeature[]) -> disable
    2549:2549:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    2564:2566:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.SerializationFeature,boolean) -> configure
    2581:2582:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature) -> enable
    2598:2599:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> enable
    2614:2615:com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.SerializationFeature) -> disable
    2631:2632:com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> disable
    2646:2646:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    2661:2663:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean) -> configure
    2678:2679:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature) -> enable
    2695:2696:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> enable
    2711:2712:com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.DeserializationFeature) -> disable
    2728:2729:com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> disable
    2750:2757:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.cfg.DatatypeFeature,boolean) -> configure
    2767:2767:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    2785:2786:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    2805:2808:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.core.JsonParser$Feature[]) -> enable
    2827:2830:com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.core.JsonParser$Feature[]) -> disable
    2840:2840:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    2858:2859:com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    2878:2881:com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> enable
    2900:2903:com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> disable
    2919:2919:boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    2932:2932:boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature) -> isEnabled
    2939:2939:boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature) -> isEnabled
    2973:2974:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    2998:2999:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    3022:3023:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    3042:3043:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValue
    3073:3090:com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    3115:3115:com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    3129:3134:com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValues
    3150:3150:com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    3160:3160:com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    3198:3199:com.fasterxml.jackson.databind.JsonNode readTree(java.io.InputStream) -> readTree
    3207:3208:com.fasterxml.jackson.databind.JsonNode readTree(java.io.Reader) -> readTree
    3217:3223:com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) -> readTree
    3232:3233:com.fasterxml.jackson.databind.JsonNode readTree(byte[]) -> readTree
    3241:3242:com.fasterxml.jackson.databind.JsonNode readTree(byte[],int,int) -> readTree
    3251:3252:com.fasterxml.jackson.databind.JsonNode readTree(java.io.File) -> readTree
    3267:3268:com.fasterxml.jackson.databind.JsonNode readTree(java.net.URL) -> readTree
    3286:3308:void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    3320:3326:void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode) -> writeTree
    3335:3341:void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.JsonNode) -> writeTree
    3352:3352:com.fasterxml.jackson.databind.node.ObjectNode createObjectNode() -> createObjectNode
    3364:3364:com.fasterxml.jackson.databind.node.ArrayNode createArrayNode() -> createArrayNode
    3369:3369:com.fasterxml.jackson.databind.JsonNode missingNode() -> missingNode
    3374:3374:com.fasterxml.jackson.databind.JsonNode nullNode() -> nullNode
    3385:3386:com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    3411:3444:java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    3460:3483:java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,com.fasterxml.jackson.databind.JavaType) -> treeToValue
    3517:3537:com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object) -> valueToTree
    3563:3563:boolean canSerialize(java.lang.Class) -> canSerialize
    3574:3574:boolean canSerialize(java.lang.Class,java.util.concurrent.atomic.AtomicReference) -> canSerialize
    3596:3597:boolean canDeserialize(com.fasterxml.jackson.databind.JavaType) -> canDeserialize
    3609:3610:boolean canDeserialize(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference) -> canDeserialize
    3636:3637:java.lang.Object readValue(java.io.File,java.lang.Class) -> readValue
    3656:3657:java.lang.Object readValue(java.io.File,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    3676:3677:java.lang.Object readValue(java.io.File,com.fasterxml.jackson.databind.JavaType) -> readValue
    3702:3703:java.lang.Object readValue(java.net.URL,java.lang.Class) -> readValue
    3713:3714:java.lang.Object readValue(java.net.URL,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    3724:3725:java.lang.Object readValue(java.net.URL,com.fasterxml.jackson.databind.JavaType) -> readValue
    3739:3740:java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    3754:3755:java.lang.Object readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    3770:3776:java.lang.Object readValue(java.lang.String,com.fasterxml.jackson.databind.JavaType) -> readValue
    3784:3785:java.lang.Object readValue(java.io.Reader,java.lang.Class) -> readValue
    3792:3793:java.lang.Object readValue(java.io.Reader,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    3800:3801:java.lang.Object readValue(java.io.Reader,com.fasterxml.jackson.databind.JavaType) -> readValue
    3808:3809:java.lang.Object readValue(java.io.InputStream,java.lang.Class) -> readValue
    3816:3817:java.lang.Object readValue(java.io.InputStream,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    3824:3825:java.lang.Object readValue(java.io.InputStream,com.fasterxml.jackson.databind.JavaType) -> readValue
    3832:3833:java.lang.Object readValue(byte[],java.lang.Class) -> readValue
    3841:3842:java.lang.Object readValue(byte[],int,int,java.lang.Class) -> readValue
    3849:3850:java.lang.Object readValue(byte[],com.fasterxml.jackson.core.type.TypeReference) -> readValue
    3857:3858:java.lang.Object readValue(byte[],int,int,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    3865:3866:java.lang.Object readValue(byte[],com.fasterxml.jackson.databind.JavaType) -> readValue
    3873:3874:java.lang.Object readValue(byte[],int,int,com.fasterxml.jackson.databind.JavaType) -> readValue
    3880:3882:java.lang.Object readValue(java.io.DataInput,java.lang.Class) -> readValue
    3888:3889:java.lang.Object readValue(java.io.DataInput,com.fasterxml.jackson.databind.JavaType) -> readValue
    3906:3907:void writeValue(java.io.File,java.lang.Object) -> writeValue
    3923:3924:void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    3931:3932:void writeValue(java.io.DataOutput,java.lang.Object) -> writeValue
    3947:3948:void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    3962:3969:java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    3986:3994:byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    4010:4010:com.fasterxml.jackson.databind.ObjectWriter writer() -> writer
    4019:4019:com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.SerializationFeature) -> writer
    4029:4029:com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> writer
    4038:4038:com.fasterxml.jackson.databind.ObjectWriter writer(java.text.DateFormat) -> writer
    4046:4046:com.fasterxml.jackson.databind.ObjectWriter writerWithView(java.lang.Class) -> writerWithView
    4061:4062:com.fasterxml.jackson.databind.ObjectWriter writerFor(java.lang.Class) -> writerFor
    4078:4079:com.fasterxml.jackson.databind.ObjectWriter writerFor(com.fasterxml.jackson.core.type.TypeReference) -> writerFor
    4095:4095:com.fasterxml.jackson.databind.ObjectWriter writerFor(com.fasterxml.jackson.databind.JavaType) -> writerFor
    4104:4107:com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.PrettyPrinter) -> writer
    4115:4117:com.fasterxml.jackson.databind.ObjectWriter writerWithDefaultPrettyPrinter() -> writerWithDefaultPrettyPrinter
    4125:4125:com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.ser.FilterProvider) -> writer
    4136:4137:com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.FormatSchema) -> writer
    4147:4147:com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.Base64Variant) -> writer
    4157:4157:com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.io.CharacterEscapes) -> writer
    4167:4167:com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> writer
    4175:4177:com.fasterxml.jackson.databind.ObjectWriter writerWithType(java.lang.Class) -> writerWithType
    4186:4188:com.fasterxml.jackson.databind.ObjectWriter writerWithType(com.fasterxml.jackson.core.type.TypeReference) -> writerWithType
    4197:4197:com.fasterxml.jackson.databind.ObjectWriter writerWithType(com.fasterxml.jackson.databind.JavaType) -> writerWithType
    4213:4213:com.fasterxml.jackson.databind.ObjectReader reader() -> reader
    4224:4224:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.DeserializationFeature) -> reader
    4236:4236:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> reader
    4250:4252:com.fasterxml.jackson.databind.ObjectReader readerForUpdating(java.lang.Object) -> readerForUpdating
    4263:4263:com.fasterxml.jackson.databind.ObjectReader readerFor(com.fasterxml.jackson.databind.JavaType) -> readerFor
    4274:4275:com.fasterxml.jackson.databind.ObjectReader readerFor(java.lang.Class) -> readerFor
    4286:4287:com.fasterxml.jackson.databind.ObjectReader readerFor(com.fasterxml.jackson.core.type.TypeReference) -> readerFor
    4302:4304:com.fasterxml.jackson.databind.ObjectReader readerForArrayOf(java.lang.Class) -> readerForArrayOf
    4319:4321:com.fasterxml.jackson.databind.ObjectReader readerForListOf(java.lang.Class) -> readerForListOf
    4336:4338:com.fasterxml.jackson.databind.ObjectReader readerForMapOf(java.lang.Class) -> readerForMapOf
    4347:4348:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> reader
    4360:4361:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.FormatSchema) -> reader
    4372:4372:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.InjectableValues) -> reader
    4381:4381:com.fasterxml.jackson.databind.ObjectReader readerWithView(java.lang.Class) -> readerWithView
    4391:4391:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.Base64Variant) -> reader
    4401:4401:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> reader
    4409:4409:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.JavaType) -> reader
    4418:4418:com.fasterxml.jackson.databind.ObjectReader reader(java.lang.Class) -> reader
    4427:4427:com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.type.TypeReference) -> reader
    4475:4475:java.lang.Object convertValue(java.lang.Object,java.lang.Class) -> convertValue
    4485:4485:java.lang.Object convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference) -> convertValue
    4495:4495:java.lang.Object convertValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> convertValue
    4512:4544:java.lang.Object _convert(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _convert
    4587:4610:java.lang.Object updateValue(java.lang.Object,java.lang.Object) -> updateValue
    4632:4632:com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
    4649:4650:void acceptJsonFormatVisitor(java.lang.Class,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    4667:4671:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    4687:4687:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> _constructDefaultTypeResolverBuilder
    4701:4701:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig) -> _serializerProvider
    4713:4725:void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _writeValueAndClose
    4734:4745:void _writeCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> _writeCloseable
    4754:4765:void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> _writeCloseableValue
    4772:4774:void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    4793:4808:java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _readValue
    4814:4833:java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _readMapAndClose
    4844:4876:com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser) -> _readTreeAndClose
    4888:4888:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig) -> createDeserializationContext
    4904:4920:com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _initForReading
    4930:4935:void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _verifyNoTrailingTokens
    4951:4962:com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _findRootDeserializer
    4970:4976:void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema) -> _verifySchemaType
    4979:4982:void _assertNotNull(java.lang.String,java.lang.Object) -> _assertNotNull
    121:121:com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    121:121:com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    121:121:java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    121:121:java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    121:121:java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    121:121:com.fasterxml.jackson.core.TreeNode nullNode() -> nullNode
    121:121:com.fasterxml.jackson.core.TreeNode missingNode() -> missingNode
    375:388:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectMapper$1 -> com.fasterxml.jackson.databind.x$1:
# {"fileName":"ObjectMapper.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ObjectMapper this$0 -> a
    880:880:void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    885:885:com.fasterxml.jackson.core.Version getMapperVersion() -> getMapperVersion
    892:892:com.fasterxml.jackson.core.ObjectCodec getOwner() -> getOwner
    897:897:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    902:902:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    907:907:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    912:912:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    917:917:boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    922:922:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    927:927:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    934:934:com.fasterxml.jackson.databind.cfg.MutableConfigOverride configOverride(java.lang.Class) -> configOverride
    941:943:void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> addDeserializers
    947:949:void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> addKeyDeserializers
    953:955:void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    961:962:void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addSerializers
    966:967:void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addKeySerializers
    971:972:void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    978:980:void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> addAbstractTypeResolver
    984:987:void addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> addTypeModifier
    991:993:void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> addValueInstantiators
    997:999:void setClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> setClassIntrospector
    1003:1005:void insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> insertAnnotationIntrospector
    1009:1011:void appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> appendAnnotationIntrospector
    1015:1016:void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    1020:1021:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    1025:1026:void registerSubtypes(java.util.Collection) -> registerSubtypes
    1030:1031:void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
    1035:1036:void addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addDeserializationProblemHandler
    1040:1041:void setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setNamingStrategy
com.fasterxml.jackson.databind.ObjectMapper$2 -> com.fasterxml.jackson.databind.x$2:
# {"fileName":"ObjectMapper.java","id":"sourceFile"}
    java.lang.ClassLoader val$classLoader -> a
    java.lang.Class val$clazz -> b
    1143:1143:void <init>(java.lang.ClassLoader,java.lang.Class) -> <init>
    1146:1147:java.util.ServiceLoader run() -> run
    1143:1143:java.lang.Object run() -> run
com.fasterxml.jackson.databind.ObjectMapper$3 -> com.fasterxml.jackson.databind.x$3:
# {"fileName":"ObjectMapper.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$ObjectMapper$DefaultTyping -> a
    331:331:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder -> com.fasterxml.jackson.databind.x$a:
# {"fileName":"ObjectMapper.java","id":"sourceFile"}
    long serialVersionUID -> i
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor -> a
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator -> b
    252:253:void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> <init>
    258:261:void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> <init>
    265:268:void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder,java.lang.Class) -> <init>
    273:276:java.lang.Object _requireNonNull(java.lang.Object,java.lang.String) -> _requireNonNull
    284:284:com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder construct(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> construct
    289:293:com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
    298:298:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig) -> subTypeValidator
    305:305:com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    312:312:com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    327:363:boolean useForType(com.fasterxml.jackson.databind.JavaType) -> useForType
    227:227:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
    227:227:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping -> com.fasterxml.jackson.databind.x$b:
# {"fileName":"ObjectMapper.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping JAVA_LANG_OBJECT -> a
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE -> b
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping NON_CONCRETE_AND_ARRAYS -> c
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping NON_FINAL -> d
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping EVERYTHING -> e
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping[] $VALUES -> f
    152:152:com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping[] values() -> values
    152:152:com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping valueOf(java.lang.String) -> valueOf
    152:152:void <init>(java.lang.String,int) -> <init>
    152:214:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectReader -> com.fasterxml.jackson.databind.y:
# {"fileName":"ObjectReader.java","id":"sourceFile"}
    long serialVersionUID -> m
    com.fasterxml.jackson.databind.DeserializationConfig _config -> a
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _context -> b
    com.fasterxml.jackson.core.JsonFactory _parserFactory -> c
    boolean _unwrapRoot -> d
    com.fasterxml.jackson.core.filter.TokenFilter _filter -> n
    com.fasterxml.jackson.databind.JavaType _valueType -> e
    com.fasterxml.jackson.databind.JsonDeserializer _rootDeserializer -> f
    java.lang.Object _valueToUpdate -> g
    com.fasterxml.jackson.core.FormatSchema _schema -> h
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> i
    com.fasterxml.jackson.databind.deser.DataFormatReaders _dataFormatReaders -> j
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> k
    com.fasterxml.jackson.databind.JavaType _jsonNodeType -> l
    173:174:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    183:197:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    206:221:void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders) -> <init>
    227:242:void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    245:262:void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory) -> <init>
    264:277:void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.filter.TokenFilter) -> <init>
    285:285:com.fasterxml.jackson.core.Version version() -> version
    302:302:com.fasterxml.jackson.databind.ObjectReader _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory) -> _new
    311:311:com.fasterxml.jackson.databind.ObjectReader _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig) -> _new
    323:323:com.fasterxml.jackson.databind.ObjectReader _new(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders) -> _new
    336:336:com.fasterxml.jackson.databind.MappingIterator _newIterator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer,boolean) -> _newIterator
    349:364:com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> _initForReading
    379:380:void _initForMultiRead(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> _initForMultiRead
    393:393:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationFeature) -> with
    403:403:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> with
    411:411:com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withFeatures
    419:419:com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.databind.DeserializationFeature) -> without
    428:428:com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> without
    436:436:com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withoutFeatures
    452:452:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> with
    462:462:com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withFeatures
    472:472:com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> without
    482:482:com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withoutFeatures
    501:501:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.JsonParser$Feature) -> with
    513:513:com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.core.JsonParser$Feature[]) -> withFeatures
    525:525:com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.core.JsonParser$Feature) -> without
    537:537:com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.core.JsonParser$Feature[]) -> withoutFeatures
    555:555:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.StreamReadFeature) -> with
    567:567:com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.core.StreamReadFeature) -> without
    583:583:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.FormatFeature) -> with
    593:593:com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withFeatures
    603:603:com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.core.FormatFeature) -> without
    613:613:com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withoutFeatures
    628:629:com.fasterxml.jackson.databind.ObjectReader at(java.lang.String) -> at
    638:639:com.fasterxml.jackson.databind.ObjectReader at(com.fasterxml.jackson.core.JsonPointer) -> at
    650:650:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationConfig) -> with
    662:665:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.InjectableValues) -> with
    679:679:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> with
    694:702:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.JsonFactory) -> with
    715:715:com.fasterxml.jackson.databind.ObjectReader withRootName(java.lang.String) -> withRootName
    722:722:com.fasterxml.jackson.databind.ObjectReader withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    736:736:com.fasterxml.jackson.databind.ObjectReader withoutRootName() -> withoutRootName
    749:753:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.FormatSchema) -> with
    768:777:com.fasterxml.jackson.databind.ObjectReader forType(com.fasterxml.jackson.databind.JavaType) -> forType
    791:791:com.fasterxml.jackson.databind.ObjectReader forType(java.lang.Class) -> forType
    804:804:com.fasterxml.jackson.databind.ObjectReader forType(com.fasterxml.jackson.core.type.TypeReference) -> forType
    812:812:com.fasterxml.jackson.databind.ObjectReader withType(com.fasterxml.jackson.databind.JavaType) -> withType
    820:820:com.fasterxml.jackson.databind.ObjectReader withType(java.lang.Class) -> withType
    828:828:com.fasterxml.jackson.databind.ObjectReader withType(java.lang.reflect.Type) -> withType
    836:836:com.fasterxml.jackson.databind.ObjectReader withType(com.fasterxml.jackson.core.type.TypeReference) -> withType
    849:867:com.fasterxml.jackson.databind.ObjectReader withValueToUpdate(java.lang.Object) -> withValueToUpdate
    879:879:com.fasterxml.jackson.databind.ObjectReader withView(java.lang.Class) -> withView
    883:883:com.fasterxml.jackson.databind.ObjectReader with(java.util.Locale) -> with
    887:887:com.fasterxml.jackson.databind.ObjectReader with(java.util.TimeZone) -> with
    891:891:com.fasterxml.jackson.databind.ObjectReader withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> withHandler
    895:895:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.Base64Variant) -> with
    921:921:com.fasterxml.jackson.databind.ObjectReader withFormatDetection(com.fasterxml.jackson.databind.ObjectReader[]) -> withFormatDetection
    940:940:com.fasterxml.jackson.databind.ObjectReader withFormatDetection(com.fasterxml.jackson.databind.deser.DataFormatReaders) -> withFormatDetection
    948:948:com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    955:955:com.fasterxml.jackson.databind.ObjectReader withAttributes(java.util.Map) -> withAttributes
    962:962:com.fasterxml.jackson.databind.ObjectReader withAttribute(java.lang.Object,java.lang.Object) -> withAttribute
    969:969:com.fasterxml.jackson.databind.ObjectReader withoutAttribute(java.lang.Object) -> withoutAttribute
    979:986:com.fasterxml.jackson.databind.ObjectReader _with(com.fasterxml.jackson.databind.DeserializationConfig) -> _with
    996:996:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    1000:1000:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    1007:1007:boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    1011:1011:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    1018:1018:boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature) -> isEnabled
    1025:1025:com.fasterxml.jackson.databind.DeserializationConfig getConfig() -> getConfig
    1033:1033:com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    1037:1037:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    1044:1044:com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    1051:1051:com.fasterxml.jackson.databind.InjectableValues getInjectableValues() -> getInjectableValues
    1058:1058:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    1076:1077:com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    1089:1090:com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    1102:1103:com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    1115:1116:com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    1128:1129:com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    1141:1142:com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    1154:1155:com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    1167:1168:com.fasterxml.jackson.core.JsonParser createParser(char[]) -> createParser
    1180:1181:com.fasterxml.jackson.core.JsonParser createParser(char[],int,int) -> createParser
    1193:1194:com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) -> createParser
    1206:1206:com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() -> createNonBlockingByteArrayParser
    1228:1229:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser) -> readValue
    1246:1247:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    1264:1265:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    1281:1282:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    1293:1294:java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValue
    1318:1319:java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    1343:1344:java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    1368:1369:java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    1392:1393:java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValues
    1404:1404:com.fasterxml.jackson.databind.JsonNode createArrayNode() -> createArrayNode
    1409:1409:com.fasterxml.jackson.databind.JsonNode createObjectNode() -> createObjectNode
    1414:1414:com.fasterxml.jackson.databind.JsonNode missingNode() -> missingNode
    1419:1419:com.fasterxml.jackson.databind.JsonNode nullNode() -> nullNode
    1424:1428:com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    1452:1453:com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    1458:1458:void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode) -> writeTree
    1478:1481:java.lang.Object readValue(java.io.InputStream) -> readValue
    1496:1496:java.lang.Object readValue(java.io.InputStream,java.lang.Class) -> readValue
    1510:1513:java.lang.Object readValue(java.io.Reader) -> readValue
    1528:1528:java.lang.Object readValue(java.io.Reader,java.lang.Class) -> readValue
    1542:1550:java.lang.Object readValue(java.lang.String) -> readValue
    1566:1566:java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    1580:1583:java.lang.Object readValue(byte[]) -> readValue
    1598:1598:java.lang.Object readValue(byte[],java.lang.Class) -> readValue
    1614:1617:java.lang.Object readValue(byte[],int,int) -> readValue
    1635:1635:java.lang.Object readValue(byte[],int,int,java.lang.Class) -> readValue
    1649:1653:java.lang.Object readValue(java.io.File) -> readValue
    1668:1668:java.lang.Object readValue(java.io.File,java.lang.Class) -> readValue
    1687:1690:java.lang.Object readValue(java.net.URL) -> readValue
    1705:1705:java.lang.Object readValue(java.net.URL,java.lang.Class) -> readValue
    1720:1724:java.lang.Object readValue(com.fasterxml.jackson.databind.JsonNode) -> readValue
    1739:1739:java.lang.Object readValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class) -> readValue
    1745:1748:java.lang.Object readValue(java.io.DataInput) -> readValue
    1763:1763:java.lang.Object readValue(java.io.DataInput,java.lang.Class) -> readValue
    1791:1794:com.fasterxml.jackson.databind.JsonNode readTree(java.io.InputStream) -> readTree
    1803:1806:com.fasterxml.jackson.databind.JsonNode readTree(java.io.Reader) -> readTree
    1815:1823:com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) -> readTree
    1833:1837:com.fasterxml.jackson.databind.JsonNode readTree(byte[]) -> readTree
    1846:1849:com.fasterxml.jackson.databind.JsonNode readTree(byte[],int,int) -> readTree
    1858:1861:com.fasterxml.jackson.databind.JsonNode readTree(java.io.DataInput) -> readTree
    1883:1886:com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser) -> readValues
    1911:1915:com.fasterxml.jackson.databind.MappingIterator readValues(java.io.InputStream) -> readValues
    1923:1930:com.fasterxml.jackson.databind.MappingIterator readValues(java.io.Reader) -> readValues
    1940:1947:com.fasterxml.jackson.databind.MappingIterator readValues(java.lang.String) -> readValues
    1955:1958:com.fasterxml.jackson.databind.MappingIterator readValues(byte[],int,int) -> readValues
    1966:1967:com.fasterxml.jackson.databind.MappingIterator readValues(byte[]) -> readValues
    1975:1979:com.fasterxml.jackson.databind.MappingIterator readValues(java.io.File) -> readValues
    1995:1999:com.fasterxml.jackson.databind.MappingIterator readValues(java.net.URL) -> readValues
    2007:2010:com.fasterxml.jackson.databind.MappingIterator readValues(java.io.DataInput) -> readValues
    2022:2028:java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    2039:2045:java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,com.fasterxml.jackson.databind.JavaType) -> treeToValue
    2051:2051:void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    2068:2086:java.lang.Object _bind(com.fasterxml.jackson.core.JsonParser,java.lang.Object) -> _bind
    2091:2112:java.lang.Object _bindAndClose(com.fasterxml.jackson.core.JsonParser) -> _bindAndClose
    2116:2118:com.fasterxml.jackson.databind.JsonNode _bindAndCloseAsTree(com.fasterxml.jackson.core.JsonParser) -> _bindAndCloseAsTree
    2125:2156:com.fasterxml.jackson.databind.JsonNode _bindAsTree(com.fasterxml.jackson.core.JsonParser) -> _bindAsTree
    2167:2196:com.fasterxml.jackson.databind.JsonNode _bindAsTreeOrNull(com.fasterxml.jackson.core.JsonParser) -> _bindAsTreeOrNull
    2204:2207:com.fasterxml.jackson.databind.MappingIterator _bindAndReadValues(com.fasterxml.jackson.core.JsonParser) -> _bindAndReadValues
    2216:2216:com.fasterxml.jackson.core.JsonParser _considerFilter(com.fasterxml.jackson.core.JsonParser,boolean) -> _considerFilter
    2227:2237:void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _verifyNoTrailingTokens
    2247:2252:java.lang.Object _detectBindAndClose(byte[],int,int) -> _detectBindAndClose
    2258:2268:java.lang.Object _detectBindAndClose(com.fasterxml.jackson.databind.deser.DataFormatReaders$Match,boolean) -> _detectBindAndClose
    2274:2284:com.fasterxml.jackson.databind.MappingIterator _detectBindAndReadValues(com.fasterxml.jackson.databind.deser.DataFormatReaders$Match,boolean) -> _detectBindAndReadValues
    2289:2295:com.fasterxml.jackson.databind.JsonNode _detectBindAndCloseAsTree(java.io.InputStream) -> _detectBindAndCloseAsTree
    2306:2307:void _reportUnkownFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders,com.fasterxml.jackson.databind.deser.DataFormatReaders$Match) -> _reportUnkownFormat
    2321:2327:void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema) -> _verifySchemaType
    2335:2335:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser) -> createDeserializationContext
    2340:2340:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDummyDeserializationContext() -> createDummyDeserializationContext
    2344:2344:java.io.InputStream _inputStream(java.net.URL) -> _inputStream
    2348:2348:java.io.InputStream _inputStream(java.io.File) -> _inputStream
    2354:2355:void _reportUndetectableSource(java.lang.Object) -> _reportUndetectableSource
    2370:2391:com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findRootDeserializer
    2400:2411:com.fasterxml.jackson.databind.JsonDeserializer _findTreeDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findTreeDeserializer
    2421:2439:com.fasterxml.jackson.databind.JsonDeserializer _prefetchRootDeserializer(com.fasterxml.jackson.databind.JavaType) -> _prefetchRootDeserializer
    2446:2451:com.fasterxml.jackson.databind.JavaType _jsonNodeType() -> _jsonNodeType
    2455:2458:void _assertNotNull(java.lang.String,java.lang.Object) -> _assertNotNull
    45:45:com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    45:45:com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    45:45:com.fasterxml.jackson.core.TreeNode nullNode() -> nullNode
    45:45:com.fasterxml.jackson.core.TreeNode missingNode() -> missingNode
com.fasterxml.jackson.databind.ObjectWriter -> com.fasterxml.jackson.databind.z:
# {"fileName":"ObjectWriter.java","id":"sourceFile"}
    long serialVersionUID -> h
    com.fasterxml.jackson.core.PrettyPrinter NULL_PRETTY_PRINTER -> a
    com.fasterxml.jackson.databind.SerializationConfig _config -> b
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> c
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> d
    com.fasterxml.jackson.core.JsonFactory _generatorFactory -> e
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings _generatorSettings -> f
    com.fasterxml.jackson.databind.ObjectWriter$Prefetch _prefetch -> g
    101:118:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter) -> <init>
    124:132:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig) -> <init>
    139:149:void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema) -> <init>
    156:165:void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter$Prefetch) -> <init>
    171:180:void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig) -> <init>
    186:197:void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory) -> <init>
    205:205:com.fasterxml.jackson.core.Version version() -> version
    220:220:com.fasterxml.jackson.databind.ObjectWriter _new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory) -> _new
    229:232:com.fasterxml.jackson.databind.ObjectWriter _new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig) -> _new
    243:246:com.fasterxml.jackson.databind.ObjectWriter _new(com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter$Prefetch) -> _new
    260:262:com.fasterxml.jackson.databind.SequenceWriter _newSequenceWriter(boolean,com.fasterxml.jackson.core.JsonGenerator,boolean) -> _newSequenceWriter
    276:276:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.SerializationFeature) -> with
    284:284:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> with
    292:292:com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withFeatures
    300:300:com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.databind.SerializationFeature) -> without
    308:308:com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> without
    316:316:com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withoutFeatures
    332:332:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> with
    342:342:com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withFeatures
    352:352:com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> without
    362:362:com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withoutFeatures
    375:375:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.JsonGenerator$Feature) -> with
    382:382:com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> withFeatures
    389:389:com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.core.JsonGenerator$Feature) -> without
    396:396:com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> withoutFeatures
    409:409:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.StreamWriteFeature) -> with
    416:416:com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.core.StreamWriteFeature) -> without
    429:429:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.FormatFeature) -> with
    436:436:com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withFeatures
    443:443:com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.core.FormatFeature) -> without
    450:450:com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withoutFeatures
    470:470:com.fasterxml.jackson.databind.ObjectWriter forType(com.fasterxml.jackson.databind.JavaType) -> forType
    481:481:com.fasterxml.jackson.databind.ObjectWriter forType(java.lang.Class) -> forType
    492:492:com.fasterxml.jackson.databind.ObjectWriter forType(com.fasterxml.jackson.core.type.TypeReference) -> forType
    500:500:com.fasterxml.jackson.databind.ObjectWriter withType(com.fasterxml.jackson.databind.JavaType) -> withType
    508:508:com.fasterxml.jackson.databind.ObjectWriter withType(java.lang.Class) -> withType
    516:516:com.fasterxml.jackson.databind.ObjectWriter withType(com.fasterxml.jackson.core.type.TypeReference) -> withType
    534:534:com.fasterxml.jackson.databind.ObjectWriter with(java.text.DateFormat) -> with
    542:542:com.fasterxml.jackson.databind.ObjectWriter withDefaultPrettyPrinter() -> withDefaultPrettyPrinter
    550:553:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.ser.FilterProvider) -> with
    561:561:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.PrettyPrinter) -> with
    576:576:com.fasterxml.jackson.databind.ObjectWriter withRootName(java.lang.String) -> withRootName
    583:583:com.fasterxml.jackson.databind.ObjectWriter withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    597:597:com.fasterxml.jackson.databind.ObjectWriter withoutRootName() -> withoutRootName
    608:609:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.FormatSchema) -> with
    617:617:com.fasterxml.jackson.databind.ObjectWriter withSchema(com.fasterxml.jackson.core.FormatSchema) -> withSchema
    629:629:com.fasterxml.jackson.databind.ObjectWriter withView(java.lang.Class) -> withView
    633:633:com.fasterxml.jackson.databind.ObjectWriter with(java.util.Locale) -> with
    637:637:com.fasterxml.jackson.databind.ObjectWriter with(java.util.TimeZone) -> with
    647:647:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.Base64Variant) -> with
    654:654:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.io.CharacterEscapes) -> with
    661:661:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.JsonFactory) -> with
    668:668:com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    678:678:com.fasterxml.jackson.databind.ObjectWriter withAttributes(java.util.Map) -> withAttributes
    685:685:com.fasterxml.jackson.databind.ObjectWriter withAttribute(java.lang.Object,java.lang.Object) -> withAttribute
    692:692:com.fasterxml.jackson.databind.ObjectWriter withoutAttribute(java.lang.Object) -> withoutAttribute
    699:699:com.fasterxml.jackson.databind.ObjectWriter withRootValueSeparator(java.lang.String) -> withRootValueSeparator
    706:706:com.fasterxml.jackson.databind.ObjectWriter withRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> withRootValueSeparator
    724:725:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    737:738:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    750:751:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    763:764:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    776:777:com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) -> createGenerator
    800:800:com.fasterxml.jackson.databind.SequenceWriter writeValues(java.io.File) -> writeValues
    819:820:com.fasterxml.jackson.databind.SequenceWriter writeValues(com.fasterxml.jackson.core.JsonGenerator) -> writeValues
    837:837:com.fasterxml.jackson.databind.SequenceWriter writeValues(java.io.Writer) -> writeValues
    854:854:com.fasterxml.jackson.databind.SequenceWriter writeValues(java.io.OutputStream) -> writeValues
    861:861:com.fasterxml.jackson.databind.SequenceWriter writeValues(java.io.DataOutput) -> writeValues
    880:880:com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(java.io.File) -> writeValuesAsArray
    900:901:com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(com.fasterxml.jackson.core.JsonGenerator) -> writeValuesAsArray
    920:920:com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(java.io.Writer) -> writeValuesAsArray
    939:939:com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(java.io.OutputStream) -> writeValuesAsArray
    946:946:com.fasterxml.jackson.databind.SequenceWriter writeValuesAsArray(java.io.DataOutput) -> writeValuesAsArray
    956:956:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    960:960:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    967:967:boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    975:975:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    982:982:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    989:989:boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature) -> isEnabled
    996:996:com.fasterxml.jackson.databind.SerializationConfig getConfig() -> getConfig
    1003:1003:com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    1007:1007:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    1019:1019:boolean hasPrefetchedSerializer() -> hasPrefetchedSerializer
    1026:1026:com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    1044:1066:void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    1081:1082:void writeValue(java.io.File,java.lang.Object) -> writeValue
    1098:1099:void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    1114:1115:void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    1123:1124:void writeValue(java.io.DataOutput,java.lang.Object) -> writeValue
    1138:1145:java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    1162:1170:byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    1195:1198:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    1206:1209:void acceptJsonFormatVisitor(java.lang.Class,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    1212:1213:boolean canSerialize(java.lang.Class) -> canSerialize
    1223:1224:boolean canSerialize(java.lang.Class,java.util.concurrent.atomic.AtomicReference) -> canSerialize
    1238:1238:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider() -> _serializerProvider
    1252:1258:void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema) -> _verifySchemaType
    1268:1279:void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _writeValueAndClose
    1288:1299:void _writeCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _writeCloseable
    1311:1313:com.fasterxml.jackson.core.JsonGenerator _configureGenerator(com.fasterxml.jackson.core.JsonGenerator) -> _configureGenerator
    1317:1320:void _assertNotNull(java.lang.String,java.lang.Object) -> _assertNotNull
    44:44:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings -> com.fasterxml.jackson.databind.z$a:
# {"fileName":"ObjectWriter.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings empty -> a
    com.fasterxml.jackson.core.PrettyPrinter prettyPrinter -> b
    com.fasterxml.jackson.core.FormatSchema schema -> c
    com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes -> d
    com.fasterxml.jackson.core.SerializableString rootValueSeparator -> e
    1370:1375:void <init>(com.fasterxml.jackson.core.PrettyPrinter,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.core.io.CharacterEscapes,com.fasterxml.jackson.core.SerializableString) -> <init>
    1379:1382:com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings with(com.fasterxml.jackson.core.PrettyPrinter) -> with
    1387:1387:com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings with(com.fasterxml.jackson.core.FormatSchema) -> with
    1392:1392:com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings with(com.fasterxml.jackson.core.io.CharacterEscapes) -> with
    1397:1406:com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings withRootValueSeparator(java.lang.String) -> withRootValueSeparator
    1411:1420:com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings withRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> withRootValueSeparator
    1424:1424:java.lang.String _rootValueSeparatorAsString() -> _rootValueSeparatorAsString
    1432:1452:void initialize(com.fasterxml.jackson.core.JsonGenerator) -> initialize
    1340:1340:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ObjectWriter$Prefetch -> com.fasterxml.jackson.databind.z$b:
# {"fileName":"ObjectWriter.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.ObjectWriter$Prefetch empty -> a
    com.fasterxml.jackson.databind.JavaType rootType -> c
    com.fasterxml.jackson.databind.JsonSerializer valueSerializer -> d
    com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer -> e
    1492:1496:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    1500:1547:com.fasterxml.jackson.databind.ObjectWriter$Prefetch forRootType(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.JavaType) -> forRootType
    1551:1551:com.fasterxml.jackson.databind.JsonSerializer getValueSerializer() -> getValueSerializer
    1555:1555:com.fasterxml.jackson.databind.jsontype.TypeSerializer getTypeSerializer() -> getTypeSerializer
    1559:1559:boolean hasSerializer() -> hasSerializer
    1565:1574:void serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) -> serialize
    1467:1467:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyMetadata -> com.fasterxml.jackson.databind.aa:
# {"fileName":"PropertyMetadata.java","id":"sourceFile"}
    long serialVersionUID -> k
    com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED -> a
    com.fasterxml.jackson.databind.PropertyMetadata STD_OPTIONAL -> b
    com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED_OR_OPTIONAL -> c
    java.lang.Boolean _required -> d
    java.lang.String _description -> e
    java.lang.Integer _index -> f
    java.lang.String _defaultValue -> g
    com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo _mergeInfo -> h
    com.fasterxml.jackson.annotation.Nulls _valueNulls -> i
    com.fasterxml.jackson.annotation.Nulls _contentNulls -> j
    122:130:void <init>(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String,com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> <init>
    137:144:com.fasterxml.jackson.databind.PropertyMetadata construct(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.String) -> construct
    150:154:com.fasterxml.jackson.databind.PropertyMetadata construct(boolean,java.lang.String,java.lang.Integer,java.lang.String) -> construct
    163:171:java.lang.Object readResolve() -> readResolve
    175:175:com.fasterxml.jackson.databind.PropertyMetadata withDescription(java.lang.String) -> withDescription
    183:183:com.fasterxml.jackson.databind.PropertyMetadata withMergeInfo(com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo) -> withMergeInfo
    192:192:com.fasterxml.jackson.databind.PropertyMetadata withNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls) -> withNulls
    197:205:com.fasterxml.jackson.databind.PropertyMetadata withDefaultValue(java.lang.String) -> withDefaultValue
    210:210:com.fasterxml.jackson.databind.PropertyMetadata withIndex(java.lang.Integer) -> withIndex
    215:222:com.fasterxml.jackson.databind.PropertyMetadata withRequired(java.lang.Boolean) -> withRequired
    232:232:java.lang.String getDescription() -> getDescription
    237:237:java.lang.String getDefaultValue() -> getDefaultValue
    245:245:boolean hasDefaultValue() -> hasDefaultValue
    247:247:boolean isRequired() -> isRequired
    249:249:java.lang.Boolean getRequired() -> getRequired
    254:254:java.lang.Integer getIndex() -> getIndex
    259:259:boolean hasIndex() -> hasIndex
    264:264:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo getMergeInfo() -> getMergeInfo
    269:269:com.fasterxml.jackson.annotation.Nulls getValueNulls() -> getValueNulls
    274:274:com.fasterxml.jackson.annotation.Nulls getContentNulls() -> getContentNulls
    19:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo -> com.fasterxml.jackson.databind.aa$a:
# {"fileName":"PropertyMetadata.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getter -> a
    boolean fromDefaults -> b
    46:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> <init>
    52:52:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForDefaults(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForDefaults
    56:56:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForTypeOverride(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForTypeOverride
    60:60:com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo createForPropertyOverride(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> createForPropertyOverride
com.fasterxml.jackson.databind.PropertyName -> com.fasterxml.jackson.databind.ab:
# {"fileName":"PropertyName.java","id":"sourceFile"}
    long serialVersionUID -> f
    java.lang.String _USE_DEFAULT -> g
    java.lang.String _NO_NAME -> h
    com.fasterxml.jackson.databind.PropertyName USE_DEFAULT -> a
    com.fasterxml.jackson.databind.PropertyName NO_NAME -> b
    java.lang.String _simpleName -> c
    java.lang.String _namespace -> d
    com.fasterxml.jackson.core.SerializableString _encodedSimple -> e
    61:62:void <init>(java.lang.String) -> <init>
    65:68:void <init>(java.lang.String,java.lang.String) -> <init>
    72:84:java.lang.Object readResolve() -> readResolve
    92:95:com.fasterxml.jackson.databind.PropertyName construct(java.lang.String) -> construct
    100:106:com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String) -> construct
    111:118:com.fasterxml.jackson.databind.PropertyName internSimpleName() -> internSimpleName
    127:133:com.fasterxml.jackson.databind.PropertyName withSimpleName(java.lang.String) -> withSimpleName
    141:148:com.fasterxml.jackson.databind.PropertyName withNamespace(java.lang.String) -> withNamespace
    158:158:java.lang.String getSimpleName() -> getSimpleName
    168:177:com.fasterxml.jackson.core.SerializableString simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig) -> simpleAsEncoded
    181:181:java.lang.String getNamespace() -> getNamespace
    185:185:boolean hasSimpleName() -> hasSimpleName
    193:193:boolean hasSimpleName(java.lang.String) -> hasSimpleName
    197:197:boolean hasNamespace() -> hasNamespace
    209:209:boolean isEmpty() -> isEmpty
    221:240:boolean equals(java.lang.Object) -> equals
    245:248:int hashCode() -> hashCode
    253:256:java.lang.String toString() -> toString
    29:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies -> com.fasterxml.jackson.databind.ac:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> h
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CAMEL_CASE -> a
    com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_CAMEL_CASE -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategy SNAKE_CASE -> c
    com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_SNAKE_CASE -> d
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CASE -> e
    com.fasterxml.jackson.databind.PropertyNamingStrategy KEBAB_CASE -> f
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_DOT_CASE -> g
    17:17:void <init>() -> <init>
    36:89:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$KebabCaseStrategy -> com.fasterxml.jackson.databind.ac$a:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategies$KebabCaseStrategy INSTANCE -> a
    392:392:void <init>() -> <init>
    404:404:java.lang.String translate(java.lang.String) -> translate
    399:399:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCamelCaseStrategy -> com.fasterxml.jackson.databind.ac$b:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCamelCaseStrategy INSTANCE -> a
    296:296:void <init>() -> <init>
    308:308:java.lang.String translate(java.lang.String) -> translate
    303:303:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCaseStrategy -> com.fasterxml.jackson.databind.ac$c:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCaseStrategy INSTANCE -> a
    367:367:void <init>() -> <init>
    379:382:java.lang.String translate(java.lang.String) -> translate
    374:374:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerDotCaseStrategy -> com.fasterxml.jackson.databind.ac$d:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerDotCaseStrategy INSTANCE -> a
    413:413:void <init>() -> <init>
    425:425:java.lang.String translate(java.lang.String) -> translate
    420:420:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase -> com.fasterxml.jackson.databind.ac$e:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> a
    100:100:void <init>() -> <init>
    107:107:java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    112:112:java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    117:117:java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    123:123:java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
    133:161:java.lang.String translateLowerCaseWithSeparator(java.lang.String,char) -> translateLowerCaseWithSeparator
com.fasterxml.jackson.databind.PropertyNamingStrategies$SnakeCaseStrategy -> com.fasterxml.jackson.databind.ac$f:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategies$SnakeCaseStrategy INSTANCE -> a
    220:220:void <init>() -> <init>
    233:261:java.lang.String translate(java.lang.String) -> translate
    227:227:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperCamelCaseStrategy -> com.fasterxml.jackson.databind.ac$g:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperCamelCaseStrategy INSTANCE -> a
    325:325:void <init>() -> <init>
    346:357:java.lang.String translate(java.lang.String) -> translate
    332:332:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperSnakeCaseStrategy -> com.fasterxml.jackson.databind.ac$h:
# {"fileName":"PropertyNamingStrategies.java","id":"sourceFile"}
    long serialVersionUID -> k
    com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperSnakeCaseStrategy INSTANCE -> b
    272:272:void <init>() -> <init>
    284:288:java.lang.String translate(java.lang.String) -> translate
    279:279:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategy -> com.fasterxml.jackson.databind.ad:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CAMEL_CASE -> c
    com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_CAMEL_CASE -> d
    com.fasterxml.jackson.databind.PropertyNamingStrategy SNAKE_CASE -> e
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CASE -> f
    com.fasterxml.jackson.databind.PropertyNamingStrategy KEBAB_CASE -> g
    com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_DOT_CASE -> h
    com.fasterxml.jackson.databind.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> i
    com.fasterxml.jackson.databind.PropertyNamingStrategy PASCAL_CASE_TO_CAMEL_CASE -> j
    38:38:void <init>() -> <init>
    119:119:java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    140:140:java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    160:160:java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    178:178:java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    50:407:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.PropertyNamingStrategy$KebabCaseStrategy -> com.fasterxml.jackson.databind.ad$a:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    369:369:void <init>() -> <init>
    373:373:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseStrategy -> com.fasterxml.jackson.databind.ad$b:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    354:354:void <init>() -> <init>
    358:358:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy -> com.fasterxml.jackson.databind.ad$c:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    413:413:void <init>() -> <init>
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerDotCaseStrategy -> com.fasterxml.jackson.databind.ad$d:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    384:384:void <init>() -> <init>
    387:387:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$PascalCaseStrategy -> com.fasterxml.jackson.databind.ad$e:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    419:419:void <init>() -> <init>
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase -> com.fasterxml.jackson.databind.ad$f:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    193:193:void <init>() -> <init>
    198:198:java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    204:204:java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    210:210:java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    217:217:java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
    227:258:java.lang.String translateLowerCaseWithSeparator(java.lang.String,char) -> translateLowerCaseWithSeparator
com.fasterxml.jackson.databind.PropertyNamingStrategy$SnakeCaseStrategy -> com.fasterxml.jackson.databind.ad$g:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    275:275:void <init>() -> <init>
    280:308:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$UpperCamelCaseStrategy -> com.fasterxml.jackson.databind.ad$h:
# {"fileName":"PropertyNamingStrategy.java","id":"sourceFile"}
    319:319:void <init>() -> <init>
    332:343:java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.RuntimeJsonMappingException -> com.fasterxml.jackson.databind.ae:
# {"fileName":"RuntimeJsonMappingException.java","id":"sourceFile"}
    11:12:void <init>(com.fasterxml.jackson.databind.JsonMappingException) -> <init>
    15:16:void <init>(java.lang.String) -> <init>
    19:20:void <init>(java.lang.String,com.fasterxml.jackson.databind.JsonMappingException) -> <init>
com.fasterxml.jackson.databind.SequenceWriter -> com.fasterxml.jackson.databind.af:
# {"fileName":"SequenceWriter.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider -> a
    com.fasterxml.jackson.databind.SerializationConfig _config -> b
    com.fasterxml.jackson.core.JsonGenerator _generator -> c
    com.fasterxml.jackson.databind.JsonSerializer _rootSerializer -> d
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> e
    boolean _closeGenerator -> f
    boolean _cfgFlush -> g
    boolean _cfgCloseCloseable -> h
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> i
    boolean _openArray -> j
    boolean _closed -> k
    81:94:void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.core.JsonGenerator,boolean,com.fasterxml.jackson.databind.ObjectWriter$Prefetch) -> <init>
    102:106:com.fasterxml.jackson.databind.SequenceWriter init(boolean) -> init
    121:121:com.fasterxml.jackson.core.Version version() -> version
    137:157:com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object) -> write
    171:192:com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> write
    197:200:com.fasterxml.jackson.databind.SequenceWriter writeAll(java.lang.Object[]) -> writeAll
    206:209:com.fasterxml.jackson.databind.SequenceWriter writeAll(java.util.Collection) -> writeAll
    217:220:com.fasterxml.jackson.databind.SequenceWriter writeAll(java.lang.Iterable) -> writeAll
    225:228:void flush() -> flush
    233:243:void close() -> close
    253:277:com.fasterxml.jackson.databind.SequenceWriter _writeCloseableValue(java.lang.Object) -> _writeCloseableValue
    282:303:com.fasterxml.jackson.databind.SequenceWriter _writeCloseableValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _writeCloseableValue
    309:316:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(java.lang.Class) -> _findAndAddDynamic
    322:329:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.JavaType) -> _findAndAddDynamic
com.fasterxml.jackson.databind.SerializationConfig -> com.fasterxml.jackson.databind.ag:
# {"fileName":"SerializationConfig.java","id":"sourceFile"}
    long serialVersionUID -> i
    com.fasterxml.jackson.core.PrettyPrinter DEFAULT_PRETTY_PRINTER -> a
    int SER_FEATURE_DEFAULTS -> w
    com.fasterxml.jackson.databind.ser.FilterProvider _filterProvider -> b
    com.fasterxml.jackson.core.PrettyPrinter _defaultPrettyPrinter -> c
    int _serFeatures -> d
    int _generatorFeatures -> e
    int _generatorFeaturesToChange -> f
    int _formatWriteFeatures -> g
    int _formatWriteFeaturesToChange -> h
    119:127:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    137:139:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    150:158:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    169:177:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> <init>
    184:192:void <init>(com.fasterxml.jackson.databind.SerializationConfig,long,int,int,int,int,int) -> <init>
    196:204:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    208:216:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.FilterProvider) -> <init>
    220:228:void <init>(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class) -> <init>
    232:240:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.PropertyName) -> <init>
    247:255:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.ContextAttributes) -> <init>
    262:270:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver) -> <init>
    277:285:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.PrettyPrinter) -> <init>
    292:300:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    310:310:com.fasterxml.jackson.databind.SerializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    315:315:com.fasterxml.jackson.databind.SerializationConfig _withMapperFeatures(long) -> _withMapperFeatures
    322:322:com.fasterxml.jackson.databind.SerializationConfig _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    327:334:com.fasterxml.jackson.databind.SerializationConfig withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    339:339:com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    344:344:com.fasterxml.jackson.databind.SerializationConfig withView(java.lang.Class) -> withView
    349:349:com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    365:370:com.fasterxml.jackson.databind.SerializationConfig with(java.text.DateFormat) -> with
    385:386:com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.SerializationFeature) -> with
    398:402:com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> with
    414:418:com.fasterxml.jackson.databind.SerializationConfig withFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withFeatures
    430:431:com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature) -> without
    443:447:com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> without
    459:463:com.fasterxml.jackson.databind.SerializationConfig withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withoutFeatures
    482:484:com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.core.JsonGenerator$Feature) -> with
    498:505:com.fasterxml.jackson.databind.SerializationConfig withFeatures(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> withFeatures
    519:521:com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.core.JsonGenerator$Feature) -> without
    535:542:com.fasterxml.jackson.databind.SerializationConfig withoutFeatures(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> withoutFeatures
    562:567:com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.core.FormatFeature) -> with
    582:592:com.fasterxml.jackson.databind.SerializationConfig withFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withFeatures
    607:612:com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.core.FormatFeature) -> without
    626:636:com.fasterxml.jackson.databind.SerializationConfig withoutFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> withoutFeatures
    644:662:com.fasterxml.jackson.databind.SerializationConfig _withJsonWriteFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> _withJsonWriteFeatures
    671:689:com.fasterxml.jackson.databind.SerializationConfig _withoutJsonWriteFeatures(com.fasterxml.jackson.core.FormatFeature[]) -> _withoutJsonWriteFeatures
    703:703:com.fasterxml.jackson.databind.SerializationConfig withFilters(com.fasterxml.jackson.databind.ser.FilterProvider) -> withFilters
    716:717:com.fasterxml.jackson.databind.SerializationConfig withPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> withPropertyInclusion
    724:724:com.fasterxml.jackson.databind.SerializationConfig withDefaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> withDefaultPrettyPrinter
    734:738:com.fasterxml.jackson.core.PrettyPrinter constructDefaultPrettyPrinter() -> constructDefaultPrettyPrinter
    756:782:void initialize(com.fasterxml.jackson.core.JsonGenerator) -> initialize
    796:797:com.fasterxml.jackson.annotation.JsonInclude$Include getSerializationInclusion() -> getSerializationInclusion
    809:812:boolean useRootWrapping() -> useRootWrapping
    824:824:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    835:839:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature,com.fasterxml.jackson.core.JsonFactory) -> isEnabled
    849:849:boolean hasSerializationFeatures(int) -> hasSerializationFeatures
    853:853:int getSerializationFeatures() -> getSerializationFeatures
    868:868:boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    878:878:com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> getFilterProvider
    892:892:com.fasterxml.jackson.core.PrettyPrinter getDefaultPrettyPrinter() -> getDefaultPrettyPrinter
    906:906:com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> introspect
    30:30:com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    30:30:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    30:30:com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    30:30:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.text.DateFormat) -> with
    30:30:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    30:30:com.fasterxml.jackson.databind.cfg.MapperConfigBase _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    30:30:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(long) -> _withMapperFeatures
    30:30:com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    38:41:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.SerializationFeature -> com.fasterxml.jackson.databind.ah:
# {"fileName":"SerializationFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE -> a
    com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT -> b
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS -> c
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_SELF_REFERENCES -> d
    com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS -> e
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS -> f
    com.fasterxml.jackson.databind.SerializationFeature WRITE_SELF_REFERENCES_AS_NULL -> g
    com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE -> h
    com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE -> i
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS -> j
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS -> k
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_WITH_ZONE_ID -> l
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_WITH_CONTEXT_TIME_ZONE -> m
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DURATIONS_AS_TIMESTAMPS -> n
    com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> o
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING -> p
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX -> q
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUM_KEYS_USING_INDEX -> r
    com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES -> s
    com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS -> t
    com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> u
    com.fasterxml.jackson.databind.SerializationFeature WRITE_BIGDECIMAL_AS_PLAIN -> v
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS -> w
    com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS -> x
    com.fasterxml.jackson.databind.SerializationFeature EAGER_SERIALIZER_FETCH -> y
    com.fasterxml.jackson.databind.SerializationFeature USE_EQUALITY_FOR_OBJECT_ID -> z
    boolean _defaultState -> A
    int _mask -> B
    com.fasterxml.jackson.databind.SerializationFeature[] $VALUES -> C
    17:17:com.fasterxml.jackson.databind.SerializationFeature[] values() -> values
    17:17:com.fasterxml.jackson.databind.SerializationFeature valueOf(java.lang.String) -> valueOf
    484:487:void <init>(java.lang.String,int,boolean) -> <init>
    490:490:boolean enabledByDefault() -> enabledByDefault
    494:494:int getMask() -> getMask
    497:497:boolean enabledIn(int) -> enabledIn
    17:478:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.SerializerProvider -> com.fasterxml.jackson.databind.ai:
# {"fileName":"SerializerProvider.java","id":"sourceFile"}
    boolean CACHE_UNKNOWN_MAPPINGS -> a
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> b
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> c
    com.fasterxml.jackson.databind.SerializationConfig _config -> d
    java.lang.Class _serializationView -> e
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> f
    com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache -> g
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> h
    com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer -> i
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> j
    com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer -> k
    com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer -> l
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> m
    java.text.DateFormat _dateFormat -> n
    boolean _stdNullValueSerializer -> o
    135:209:void <init>() -> <init>
    135:238:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    135:262:void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    281:285:void setDefaultKeySerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setDefaultKeySerializer
    298:302:void setNullValueSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setNullValueSerializer
    311:315:void setNullKeySerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setNullKeySerializer
    327:327:com.fasterxml.jackson.databind.SerializationConfig getConfig() -> getConfig
    331:331:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    336:336:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    343:348:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    352:352:java.lang.Class getActiveView() -> getActiveView
    356:356:boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    361:361:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    366:366:boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    371:371:com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    376:376:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    383:383:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> getDefaultPropertyInclusion
    394:394:java.util.Locale getLocale() -> getLocale
    405:405:java.util.TimeZone getTimeZone() -> getTimeZone
    416:416:java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    422:423:com.fasterxml.jackson.databind.SerializerProvider setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    441:441:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    451:451:boolean hasSerializationFeatures(int) -> hasSerializationFeatures
    462:462:com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> getFilterProvider
    473:473:com.fasterxml.jackson.core.JsonGenerator getGenerator() -> getGenerator
    491:491:com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion(com.fasterxml.jackson.core.ObjectCodec) -> bufferForValueConversion
    501:501:com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion() -> bufferForValueConversion
    com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    547:570:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findValueSerializer
    589:607:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findValueSerializer
    620:636:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class) -> findValueSerializer
    650:663:com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType) -> findValueSerializer
    683:698:com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findPrimaryPropertySerializer
    711:728:com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findPrimaryPropertySerializer
    755:770:com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findContentValueSerializer
    783:800:com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findContentValueSerializer
    823:844:com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty) -> findTypedValueSerializer
    868:888:com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty) -> findTypedValueSerializer
    899:899:com.fasterxml.jackson.databind.jsontype.TypeSerializer findTypeSerializer(com.fasterxml.jackson.databind.JavaType) -> findTypeSerializer
    915:917:com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findKeySerializer
    926:926:com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findKeySerializer
    939:939:com.fasterxml.jackson.databind.JsonSerializer getDefaultNullKeySerializer() -> getDefaultNullKeySerializer
    946:946:com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer() -> getDefaultNullValueSerializer
    966:966:com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findNullKeySerializer
    982:982:com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty) -> findNullValueSerializer
    999:1003:com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    1014:1024:boolean isUnknownTypeSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> isUnknownTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> serializerInstance
    java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
    boolean includeFilterSuppressNulls(java.lang.Object) -> includeFilterSuppressNulls
    1091:1096:com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> handlePrimaryContextualization
    1119:1124:com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> handleSecondaryContextualization
    1142:1152:void defaultSerializeValue(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeValue
    1162:1176:void defaultSerializeField(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeField
    1188:1193:void defaultSerializeDateValue(long,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateValue
    1204:1209:void defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateValue
    1218:1223:void defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateKey
    1232:1237:void defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateKey
    1241:1246:void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeNull
    1262:1262:void reportMappingProblem(java.lang.String,java.lang.Object[]) -> reportMappingProblem
    1274:1280:java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[]) -> reportBadTypeDefinition
    1292:1303:java.lang.Object reportBadPropertyDefinition(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.String,java.lang.Object[]) -> reportBadPropertyDefinition
    1308:1308:java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> reportBadDefinition
    1316:1317:java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.Throwable) -> reportBadDefinition
    1325:1326:java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String,java.lang.Throwable) -> reportBadDefinition
    1337:1338:void reportMappingProblem(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> reportMappingProblem
    1344:1346:com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String) -> invalidTypeIdException
    1366:1366:com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String,java.lang.Object[]) -> mappingException
    1380:1380:com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> mappingException
    1392:1402:void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _reportIncompatibleRootType
    1415:1431:com.fasterxml.jackson.databind.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class) -> _findExplicitUntypedSerializer
    1448:1463:com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class) -> _createAndCacheUntypedSerializer
    1471:1483:com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> _createAndCacheUntypedSerializer
    1503:1503:com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> _createUntypedSerializer
    1516:1519:com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> _handleContextualResolvable
    1526:1529:com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer) -> _handleResolvable
    1540:1557:java.text.DateFormat _dateFormat() -> _dateFormat
    51:51:com.fasterxml.jackson.databind.DatabindContext setAttribute(java.lang.Object,java.lang.Object) -> setAttribute
    51:51:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    61:73:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.EnumNaming -> com.fasterxml.jackson.databind.annotation.a:
# {"fileName":"EnumNaming.java","id":"sourceFile"}
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JacksonStdImpl -> com.fasterxml.jackson.databind.annotation.b:
# {"fileName":"JacksonStdImpl.java","id":"sourceFile"}
com.fasterxml.jackson.databind.annotation.JsonAppend -> com.fasterxml.jackson.databind.annotation.c:
# {"fileName":"JsonAppend.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.annotation.JsonAppend$Attr[] attrs() -> attrs
    com.fasterxml.jackson.databind.annotation.JsonAppend$Prop[] props() -> props
    boolean prepend() -> prepend
com.fasterxml.jackson.databind.annotation.JsonAppend$Attr -> com.fasterxml.jackson.databind.annotation.c$a:
# {"fileName":"JsonAppend.java","id":"sourceFile"}
    java.lang.String value() -> value
    java.lang.String propName() -> propName
    java.lang.String propNamespace() -> propNamespace
    com.fasterxml.jackson.annotation.JsonInclude$Include include() -> include
    boolean required() -> required
com.fasterxml.jackson.databind.annotation.JsonAppend$Prop -> com.fasterxml.jackson.databind.annotation.c$b:
# {"fileName":"JsonAppend.java","id":"sourceFile"}
    java.lang.Class value() -> value
    java.lang.String name() -> name
    java.lang.String namespace() -> namespace
    com.fasterxml.jackson.annotation.JsonInclude$Include include() -> include
    boolean required() -> required
    java.lang.Class type() -> type
com.fasterxml.jackson.databind.annotation.JsonDeserialize -> com.fasterxml.jackson.databind.annotation.d:
# {"fileName":"JsonDeserialize.java","id":"sourceFile"}
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class builder() -> builder
    java.lang.Class converter() -> converter
    java.lang.Class contentConverter() -> contentConverter
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
com.fasterxml.jackson.databind.annotation.JsonNaming -> com.fasterxml.jackson.databind.annotation.e:
# {"fileName":"JsonNaming.java","id":"sourceFile"}
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder -> com.fasterxml.jackson.databind.annotation.f:
# {"fileName":"JsonPOJOBuilder.java","id":"sourceFile"}
    java.lang.String DEFAULT_BUILD_METHOD -> a
    java.lang.String DEFAULT_WITH_PREFIX -> b
    java.lang.String buildMethodName() -> buildMethodName
    java.lang.String withPrefix() -> withPrefix
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value -> com.fasterxml.jackson.databind.annotation.f$a:
# {"fileName":"JsonPOJOBuilder.java","id":"sourceFile"}
    java.lang.String buildMethodName -> a
    java.lang.String withPrefix -> b
    87:88:void <init>(com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder) -> <init>
    91:94:void <init>(java.lang.String,java.lang.String) -> <init>
com.fasterxml.jackson.databind.annotation.JsonSerialize -> com.fasterxml.jackson.databind.annotation.g:
# {"fileName":"JsonSerialize.java","id":"sourceFile"}
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class nullsUsing() -> nullsUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing typing() -> typing
    java.lang.Class converter() -> converter
    java.lang.Class contentConverter() -> contentConverter
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion include() -> include
com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion -> com.fasterxml.jackson.databind.annotation.g$a:
# {"fileName":"JsonSerialize.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion ALWAYS -> a
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_NULL -> b
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_DEFAULT -> c
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_EMPTY -> d
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion DEFAULT_INCLUSION -> e
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] $VALUES -> f
    192:192:com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] values() -> values
    192:192:com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
    193:193:void <init>(java.lang.String,int) -> <init>
    192:242:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing -> com.fasterxml.jackson.databind.annotation.g$b:
# {"fileName":"JsonSerialize.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DYNAMIC -> a
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing STATIC -> b
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DEFAULT_TYPING -> c
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] $VALUES -> d
    251:251:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] values() -> values
    251:251:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
    251:251:void <init>(java.lang.String,int) -> <init>
    251:271:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver -> com.fasterxml.jackson.databind.annotation.h:
# {"fileName":"JsonTypeIdResolver.java","id":"sourceFile"}
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonTypeResolver -> com.fasterxml.jackson.databind.annotation.i:
# {"fileName":"JsonTypeResolver.java","id":"sourceFile"}
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonValueInstantiator -> com.fasterxml.jackson.databind.annotation.j:
# {"fileName":"JsonValueInstantiator.java","id":"sourceFile"}
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.NoClass -> com.fasterxml.jackson.databind.annotation.k:
# {"fileName":"NoClass.java","id":"sourceFile"}
    17:17:void <init>() -> <init>
com.fasterxml.jackson.databind.annotation.package-info -> com.fasterxml.jackson.databind.annotation.l:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.cfg.BaseSettings -> com.fasterxml.jackson.databind.cfg.a:
# {"fileName":"BaseSettings.java","id":"sourceFile"}
    long serialVersionUID -> m
    java.util.TimeZone DEFAULT_TIMEZONE -> n
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> a
    com.fasterxml.jackson.databind.introspect.ClassIntrospector _classIntrospector -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> c
    com.fasterxml.jackson.databind.PropertyNamingStrategy _propertyNamingStrategy -> d
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider _accessorNaming -> e
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _typeResolverBuilder -> f
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _typeValidator -> g
    java.text.DateFormat _dateFormat -> h
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator _handlerInstantiator -> i
    java.util.Locale _locale -> j
    java.util.TimeZone _timeZone -> k
    com.fasterxml.jackson.core.Base64Variant _defaultBase64 -> l
    160:173:void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> <init>
    182:184:void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> <init>
    193:193:com.fasterxml.jackson.databind.cfg.BaseSettings copy() -> copy
    214:217:com.fasterxml.jackson.databind.cfg.BaseSettings withClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> withClassIntrospector
    223:226:com.fasterxml.jackson.databind.cfg.BaseSettings withAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAnnotationIntrospector
    232:232:com.fasterxml.jackson.databind.cfg.BaseSettings withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    236:236:com.fasterxml.jackson.databind.cfg.BaseSettings withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    250:253:com.fasterxml.jackson.databind.cfg.BaseSettings withPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> withPropertyNamingStrategy
    260:263:com.fasterxml.jackson.databind.cfg.BaseSettings withAccessorNaming(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> withAccessorNaming
    269:272:com.fasterxml.jackson.databind.cfg.BaseSettings withTypeFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> withTypeFactory
    278:281:com.fasterxml.jackson.databind.cfg.BaseSettings withTypeResolverBuilder(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    287:295:com.fasterxml.jackson.databind.cfg.BaseSettings withDateFormat(java.text.DateFormat) -> withDateFormat
    301:304:com.fasterxml.jackson.databind.cfg.BaseSettings withHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> withHandlerInstantiator
    310:313:com.fasterxml.jackson.databind.cfg.BaseSettings with(java.util.Locale) -> with
    325:335:com.fasterxml.jackson.databind.cfg.BaseSettings with(java.util.TimeZone) -> with
    345:348:com.fasterxml.jackson.databind.cfg.BaseSettings with(com.fasterxml.jackson.core.Base64Variant) -> with
    358:361:com.fasterxml.jackson.databind.cfg.BaseSettings with(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> with
    374:374:com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    378:378:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    382:382:com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    386:386:com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider getAccessorNaming() -> getAccessorNaming
    390:390:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    394:394:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> getTypeResolverBuilder
    401:401:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator() -> getPolymorphicTypeValidator
    405:405:java.text.DateFormat getDateFormat() -> getDateFormat
    409:409:com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    413:413:java.util.Locale getLocale() -> getLocale
    417:418:java.util.TimeZone getTimeZone() -> getTimeZone
    429:429:boolean hasExplicitTimeZone() -> hasExplicitTimeZone
    433:433:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    444:450:java.text.DateFormat _force(java.text.DateFormat,java.util.TimeZone) -> _force
    33:38:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionAction -> com.fasterxml.jackson.databind.cfg.b:
# {"fileName":"CoercionAction.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.CoercionAction Fail -> a
    com.fasterxml.jackson.databind.cfg.CoercionAction TryConvert -> b
    com.fasterxml.jackson.databind.cfg.CoercionAction AsNull -> c
    com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty -> d
    com.fasterxml.jackson.databind.cfg.CoercionAction[] $VALUES -> e
    16:16:com.fasterxml.jackson.databind.cfg.CoercionAction[] values() -> values
    16:16:com.fasterxml.jackson.databind.cfg.CoercionAction valueOf(java.lang.String) -> valueOf
    16:16:void <init>(java.lang.String,int) -> <init>
    16:40:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionConfig -> com.fasterxml.jackson.databind.cfg.c:
# {"fileName":"CoercionConfig.java","id":"sourceFile"}
    long serialVersionUID -> c
    int INPUT_SHAPE_COUNT -> d
    java.lang.Boolean _acceptBlankAsEmpty -> a
    com.fasterxml.jackson.databind.cfg.CoercionAction[] _coercionsByShape -> b
    23:28:void <init>() -> <init>
    30:34:void <init>(com.fasterxml.jackson.databind.cfg.CoercionConfig) -> <init>
    37:37:com.fasterxml.jackson.databind.cfg.CoercionAction findAction(com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> findAction
    41:41:java.lang.Boolean getAcceptBlankAsEmpty() -> getAcceptBlankAsEmpty
    13:13:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionConfigs -> com.fasterxml.jackson.databind.cfg.d:
# {"fileName":"CoercionConfigs.java","id":"sourceFile"}
    long serialVersionUID -> e
    int TARGET_TYPE_COUNT -> f
    com.fasterxml.jackson.databind.cfg.CoercionAction _defaultAction -> a
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig _defaultCoercions -> b
    com.fasterxml.jackson.databind.cfg.MutableCoercionConfig[] _perTypeCoercions -> c
    java.util.Map _perClassCoercions -> d
    49:51:void <init>() -> <init>
    57:62:void <init>(com.fasterxml.jackson.databind.cfg.CoercionAction,com.fasterxml.jackson.databind.cfg.MutableCoercionConfig,com.fasterxml.jackson.databind.cfg.MutableCoercionConfig[],java.util.Map) -> <init>
    74:92:com.fasterxml.jackson.databind.cfg.CoercionConfigs copy() -> copy
    97:100:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig _copy(com.fasterxml.jackson.databind.cfg.MutableCoercionConfig) -> _copy
    110:110:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig defaultCoercions() -> defaultCoercions
    120:127:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig findOrCreateCoercion(com.fasterxml.jackson.databind.type.LogicalType) -> findOrCreateCoercion
    131:139:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig findOrCreateCoercion(java.lang.Class) -> findOrCreateCoercion
    166:249:com.fasterxml.jackson.databind.cfg.CoercionAction findCoercion(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> findCoercion
    272:326:com.fasterxml.jackson.databind.cfg.CoercionAction findCoercionFromBlankString(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class,com.fasterxml.jackson.databind.cfg.CoercionAction) -> findCoercionFromBlankString
    330:330:boolean _isScalarType(com.fasterxml.jackson.databind.type.LogicalType) -> _isScalarType
    19:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionConfigs$1 -> com.fasterxml.jackson.databind.cfg.d$1:
# {"fileName":"CoercionConfigs.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionInputShape -> a
    194:194:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.CoercionInputShape -> com.fasterxml.jackson.databind.cfg.e:
# {"fileName":"CoercionInputShape.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Array -> a
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Object -> b
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Integer -> c
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Float -> d
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Boolean -> e
    com.fasterxml.jackson.databind.cfg.CoercionInputShape String -> f
    com.fasterxml.jackson.databind.cfg.CoercionInputShape Binary -> g
    com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyArray -> h
    com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyObject -> i
    com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString -> j
    com.fasterxml.jackson.databind.cfg.CoercionInputShape[] $VALUES -> k
    19:19:com.fasterxml.jackson.databind.cfg.CoercionInputShape[] values() -> values
    19:19:com.fasterxml.jackson.databind.cfg.CoercionInputShape valueOf(java.lang.String) -> valueOf
    19:19:void <init>(java.lang.String,int) -> <init>
    19:93:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConfigFeature -> com.fasterxml.jackson.databind.cfg.f:
# {"fileName":"ConfigFeature.java","id":"sourceFile"}
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
    boolean enabledIn(int) -> enabledIn
com.fasterxml.jackson.databind.cfg.ConfigOverride -> com.fasterxml.jackson.databind.cfg.g:
# {"fileName":"ConfigOverride.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonFormat$Value _format -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value _include -> b
    com.fasterxml.jackson.annotation.JsonInclude$Value _includeAsProperty -> c
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value _ignorals -> d
    com.fasterxml.jackson.annotation.JsonSetter$Value _setterInfo -> e
    com.fasterxml.jackson.annotation.JsonAutoDetect$Value _visibility -> f
    java.lang.Boolean _isIgnoredType -> g
    java.lang.Boolean _mergeable -> h
    76:76:void <init>() -> <init>
    77:86:void <init>(com.fasterxml.jackson.databind.cfg.ConfigOverride) -> <init>
    94:94:com.fasterxml.jackson.databind.cfg.ConfigOverride empty() -> empty
    97:97:com.fasterxml.jackson.annotation.JsonFormat$Value getFormat() -> getFormat
    98:98:com.fasterxml.jackson.annotation.JsonInclude$Value getInclude() -> getInclude
    103:103:com.fasterxml.jackson.annotation.JsonInclude$Value getIncludeAsProperty() -> getIncludeAsProperty
    105:105:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getIgnorals() -> getIgnorals
    108:108:java.lang.Boolean getIsIgnoredType() -> getIsIgnoredType
    114:114:com.fasterxml.jackson.annotation.JsonSetter$Value getSetterInfo() -> getSetterInfo
    119:119:com.fasterxml.jackson.annotation.JsonAutoDetect$Value getVisibility() -> getVisibility
    124:124:java.lang.Boolean getMergeable() -> getMergeable
com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty -> com.fasterxml.jackson.databind.cfg.g$a:
# {"fileName":"ConfigOverride.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty INSTANCE -> i
    135:135:void <init>() -> <init>
    133:133:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConfigOverrides -> com.fasterxml.jackson.databind.cfg.h:
# {"fileName":"ConfigOverrides.java","id":"sourceFile"}
    long serialVersionUID -> g
    java.util.Map _overrides -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion -> b
    com.fasterxml.jackson.annotation.JsonSetter$Value _defaultSetterInfo -> c
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> d
    java.lang.Boolean _defaultMergeable -> e
    java.lang.Boolean _defaultLeniency -> f
    64:71:void <init>() -> <init>
    79:86:void <init>(java.util.Map,com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonSetter$Value,com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean,java.lang.Boolean) -> <init>
    95:96:void <init>(java.util.Map,com.fasterxml.jackson.annotation.JsonInclude$Value,com.fasterxml.jackson.annotation.JsonSetter$Value,com.fasterxml.jackson.databind.introspect.VisibilityChecker,java.lang.Boolean) -> <init>
    101:109:com.fasterxml.jackson.databind.cfg.ConfigOverrides copy() -> copy
    121:124:com.fasterxml.jackson.databind.cfg.ConfigOverride findOverride(java.lang.Class) -> findOverride
    128:136:com.fasterxml.jackson.databind.cfg.MutableConfigOverride findOrCreateOverride(java.lang.Class) -> findOrCreateOverride
    149:164:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatDefaults(java.lang.Class) -> findFormatDefaults
    174:174:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion() -> getDefaultInclusion
    178:178:com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    182:182:java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    189:189:java.lang.Boolean getDefaultLeniency() -> getDefaultLeniency
    196:196:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibility() -> getDefaultVisibility
    203:204:void setDefaultInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setDefaultInclusion
    210:211:void setDefaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter$Value) -> setDefaultSetterInfo
    217:218:void setDefaultMergeable(java.lang.Boolean) -> setDefaultMergeable
    224:225:void setDefaultLeniency(java.lang.Boolean) -> setDefaultLeniency
    231:232:void setDefaultVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> setDefaultVisibility
    241:241:java.util.Map _newMap() -> _newMap
com.fasterxml.jackson.databind.cfg.ConstructorDetector -> com.fasterxml.jackson.databind.cfg.i:
# {"fileName":"ConstructorDetector.java","id":"sourceFile"}
    long serialVersionUID -> h
    com.fasterxml.jackson.databind.cfg.ConstructorDetector DEFAULT -> a
    com.fasterxml.jackson.databind.cfg.ConstructorDetector USE_PROPERTIES_BASED -> b
    com.fasterxml.jackson.databind.cfg.ConstructorDetector USE_DELEGATING -> c
    com.fasterxml.jackson.databind.cfg.ConstructorDetector EXPLICIT_ONLY -> d
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor _singleArgMode -> e
    boolean _requireCtorAnnotation -> f
    boolean _allowJDKTypeCtors -> g
    134:138:void <init>(com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor,boolean,boolean) -> <init>
    145:146:void <init>(com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor) -> <init>
    149:149:com.fasterxml.jackson.databind.cfg.ConstructorDetector withSingleArgMode(com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor) -> withSingleArgMode
    154:154:com.fasterxml.jackson.databind.cfg.ConstructorDetector withRequireAnnotation(boolean) -> withRequireAnnotation
    159:159:com.fasterxml.jackson.databind.cfg.ConstructorDetector withAllowJDKTypeConstructors(boolean) -> withAllowJDKTypeConstructors
    170:170:com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor singleArgMode() -> singleArgMode
    174:174:boolean requireCtorAnnotation() -> requireCtorAnnotation
    178:178:boolean allowJDKTypeConstructors() -> allowJDKTypeConstructors
    182:182:boolean singleArgCreatorDefaultsToDelegating() -> singleArgCreatorDefaultsToDelegating
    186:186:boolean singleArgCreatorDefaultsToProperties() -> singleArgCreatorDefaultsToProperties
    201:215:boolean shouldIntrospectorImplicitConstructors(java.lang.Class) -> shouldIntrospectorImplicitConstructors
    80:101:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor -> com.fasterxml.jackson.databind.cfg.i$a:
# {"fileName":"ConstructorDetector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor DELEGATING -> a
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor PROPERTIES -> b
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor HEURISTIC -> c
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor REQUIRE_MODE -> d
    com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor[] $VALUES -> e
    34:34:com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor[] values() -> values
    34:34:com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    34:58:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.ContextAttributes -> com.fasterxml.jackson.databind.cfg.j:
# {"fileName":"ContextAttributes.java","id":"sourceFile"}
    21:21:void <init>() -> <init>
    24:24:com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty() -> getEmpty
    com.fasterxml.jackson.databind.cfg.ContextAttributes withSharedAttribute(java.lang.Object,java.lang.Object) -> withSharedAttribute
    com.fasterxml.jackson.databind.cfg.ContextAttributes withSharedAttributes(java.util.Map) -> withSharedAttributes
    com.fasterxml.jackson.databind.cfg.ContextAttributes withoutSharedAttribute(java.lang.Object) -> withoutSharedAttribute
    java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object) -> withPerCallAttribute
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl -> com.fasterxml.jackson.databind.cfg.j$a:
# {"fileName":"ContextAttributes.java","id":"sourceFile"}
    long serialVersionUID -> e
    com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl EMPTY -> a
    java.lang.Object NULL_SURROGATE -> b
    java.util.Map _shared -> c
    java.util.Map _nonShared -> d
    92:95:void <init>(java.util.Map) -> <init>
    97:100:void <init>(java.util.Map,java.util.Map) -> <init>
    103:103:com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty() -> getEmpty
    117:123:com.fasterxml.jackson.databind.cfg.ContextAttributes withSharedAttribute(java.lang.Object,java.lang.Object) -> withSharedAttribute
    128:128:com.fasterxml.jackson.databind.cfg.ContextAttributes withSharedAttributes(java.util.Map) -> withSharedAttributes
    135:148:com.fasterxml.jackson.databind.cfg.ContextAttributes withoutSharedAttribute(java.lang.Object) -> withoutSharedAttribute
    160:169:java.lang.Object getAttribute(java.lang.Object) -> getAttribute
    176:193:com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object) -> withPerCallAttribute
    208:213:com.fasterxml.jackson.databind.cfg.ContextAttributes nonSharedInstance(java.lang.Object,java.lang.Object) -> nonSharedInstance
    218:218:java.util.Map _copy(java.util.Map) -> _copy
    67:69:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.DatatypeFeature -> com.fasterxml.jackson.databind.cfg.k:
# {"fileName":"DatatypeFeature.java","id":"sourceFile"}
    int featureIndex() -> featureIndex
com.fasterxml.jackson.databind.cfg.DatatypeFeatures -> com.fasterxml.jackson.databind.cfg.l:
# {"fileName":"DatatypeFeatures.java","id":"sourceFile"}
    long serialVersionUID -> c
    int FEATURE_INDEX_ENUM -> a
    int FEATURE_INDEX_JSON_NODE -> b
    int _enabledFor1 -> d
    int _enabledFor2 -> e
    int _explicitFor1 -> f
    int _explicitFor2 -> g
    25:30:void <init>(int,int,int,int) -> <init>
    33:33:com.fasterxml.jackson.databind.cfg.DatatypeFeatures defaultFeatures() -> defaultFeatures
    38:42:com.fasterxml.jackson.databind.cfg.DatatypeFeatures _with(int,int,int,int) -> _with
    62:72:com.fasterxml.jackson.databind.cfg.DatatypeFeatures with(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> with
    86:99:com.fasterxml.jackson.databind.cfg.DatatypeFeatures withFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withFeatures
    113:123:com.fasterxml.jackson.databind.cfg.DatatypeFeatures without(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> without
    137:150:com.fasterxml.jackson.databind.cfg.DatatypeFeatures withoutFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withoutFeatures
    155:159:int _calcMask(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> _calcMask
    179:186:boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    200:207:boolean isExplicitlySet(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isExplicitlySet
    224:231:boolean isExplicitlyEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isExplicitlyEnabled
    248:255:boolean isExplicitlyDisabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isExplicitlyDisabled
    270:283:java.lang.Boolean getExplicitState(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> getExplicitState
com.fasterxml.jackson.databind.cfg.DatatypeFeatures$DefaultHolder -> com.fasterxml.jackson.databind.cfg.l$a:
# {"fileName":"DatatypeFeatures.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures DEFAULT_FEATURES -> a
    297:297:void <init>() -> <init>
    309:315:int collectDefaults(java.lang.Enum[]) -> collectDefaults
    319:319:com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDefault() -> getDefault
    301:305:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig -> com.fasterxml.jackson.databind.cfg.m:
# {"fileName":"DeserializerFactoryConfig.java","id":"sourceFile"}
    long serialVersionUID -> k
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> a
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] NO_MODIFIERS -> b
    com.fasterxml.jackson.databind.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> c
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> d
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] DEFAULT_KEY_DESERIALIZERS -> e
    com.fasterxml.jackson.databind.deser.Deserializers[] _additionalDeserializers -> f
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] _additionalKeyDeserializers -> g
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] _modifiers -> h
    com.fasterxml.jackson.databind.AbstractTypeResolver[] _abstractTypeResolvers -> i
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] _valueInstantiators -> j
    71:72:void <init>() -> <init>
    83:91:void <init>(com.fasterxml.jackson.databind.deser.Deserializers[],com.fasterxml.jackson.databind.deser.KeyDeserializers[],com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[],com.fasterxml.jackson.databind.AbstractTypeResolver[],com.fasterxml.jackson.databind.deser.ValueInstantiators[]) -> <init>
    101:105:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    117:121:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    133:137:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    150:154:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    170:174:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    178:178:boolean hasDeserializers() -> hasDeserializers
    180:180:boolean hasKeyDeserializers() -> hasKeyDeserializers
    182:182:boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    184:184:boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    186:186:boolean hasValueInstantiators() -> hasValueInstantiators
    189:189:java.lang.Iterable deserializers() -> deserializers
    193:193:java.lang.Iterable keyDeserializers() -> keyDeserializers
    197:197:java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    201:201:java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    205:205:java.lang.Iterable valueInstantiators() -> valueInstantiators
    17:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.EnumFeature -> com.fasterxml.jackson.databind.cfg.n:
# {"fileName":"EnumFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.EnumFeature READ_ENUM_KEYS_USING_INDEX -> a
    com.fasterxml.jackson.databind.cfg.EnumFeature WRITE_ENUMS_TO_LOWERCASE -> b
    int FEATURE_INDEX -> c
    boolean _enabledByDefault -> d
    int _mask -> e
    com.fasterxml.jackson.databind.cfg.EnumFeature[] $VALUES -> f
    11:11:com.fasterxml.jackson.databind.cfg.EnumFeature[] values() -> values
    11:11:com.fasterxml.jackson.databind.cfg.EnumFeature valueOf(java.lang.String) -> valueOf
    50:53:void <init>(java.lang.String,int,boolean) -> <init>
    56:56:boolean enabledByDefault() -> enabledByDefault
    58:58:boolean enabledIn(int) -> enabledIn
    60:60:int getMask() -> getMask
    64:64:int featureIndex() -> featureIndex
    11:39:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.HandlerInstantiator -> com.fasterxml.jackson.databind.cfg.o:
# {"fileName":"HandlerInstantiator.java","id":"sourceFile"}
    30:30:void <init>() -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> serializerInstance
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    115:115:com.fasterxml.jackson.databind.deser.ValueInstantiator valueInstantiatorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
    126:126:com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> objectIdGeneratorInstance
    130:130:com.fasterxml.jackson.annotation.ObjectIdResolver resolverIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> resolverIdGeneratorInstance
    141:141:com.fasterxml.jackson.databind.PropertyNamingStrategy namingStrategyInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> namingStrategyInstance
    151:151:com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> converterInstance
    162:162:com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter virtualPropertyWriterInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> virtualPropertyWriterInstance
    180:180:java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
com.fasterxml.jackson.databind.cfg.JsonNodeFeature -> com.fasterxml.jackson.databind.cfg.p:
# {"fileName":"JsonNodeFeature.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature READ_NULL_PROPERTIES -> a
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature WRITE_NULL_PROPERTIES -> b
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature STRIP_TRAILING_BIGDECIMAL_ZEROES -> c
    int FEATURE_INDEX -> d
    boolean _enabledByDefault -> e
    int _mask -> f
    com.fasterxml.jackson.databind.cfg.JsonNodeFeature[] $VALUES -> g
    9:9:com.fasterxml.jackson.databind.cfg.JsonNodeFeature[] values() -> values
    9:9:com.fasterxml.jackson.databind.cfg.JsonNodeFeature valueOf(java.lang.String) -> valueOf
    63:66:void <init>(java.lang.String,int,boolean) -> <init>
    69:69:boolean enabledByDefault() -> enabledByDefault
    71:71:boolean enabledIn(int) -> enabledIn
    73:73:int getMask() -> getMask
    77:77:int featureIndex() -> featureIndex
    9:51:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.MapperBuilder -> com.fasterxml.jackson.databind.cfg.q:
# {"fileName":"MapperBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ObjectMapper _mapper -> a
    50:52:void <init>(com.fasterxml.jackson.databind.ObjectMapper) -> <init>
    62:62:com.fasterxml.jackson.databind.ObjectMapper build() -> build
    72:72:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    75:75:boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    78:78:boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    82:82:boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    85:85:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    95:95:com.fasterxml.jackson.core.TokenStreamFactory streamFactory() -> streamFactory
    106:107:com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.databind.MapperFeature[]) -> enable
    112:113:com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.databind.MapperFeature[]) -> disable
    118:119:com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.databind.MapperFeature,boolean) -> configure
    123:126:com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.databind.SerializationFeature[]) -> enable
    130:133:com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.databind.SerializationFeature[]) -> disable
    137:138:com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.databind.SerializationFeature,boolean) -> configure
    142:145:com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.databind.DeserializationFeature[]) -> enable
    149:152:com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.databind.DeserializationFeature[]) -> disable
    156:157:com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean) -> configure
    161:164:com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> enable
    168:171:com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> disable
    175:176:com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.databind.cfg.DatatypeFeature,boolean) -> configure
    186:187:com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.core.JsonParser$Feature[]) -> enable
    191:192:com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.core.JsonParser$Feature[]) -> disable
    196:197:com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    201:202:com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> enable
    206:207:com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.core.JsonGenerator$Feature[]) -> disable
    211:212:com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    222:225:com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.core.StreamReadFeature[]) -> enable
    229:232:com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.core.StreamReadFeature[]) -> disable
    236:237:com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.core.StreamReadFeature,boolean) -> configure
    241:244:com.fasterxml.jackson.databind.cfg.MapperBuilder enable(com.fasterxml.jackson.core.StreamWriteFeature[]) -> enable
    248:251:com.fasterxml.jackson.databind.cfg.MapperBuilder disable(com.fasterxml.jackson.core.StreamWriteFeature[]) -> disable
    255:256:com.fasterxml.jackson.databind.cfg.MapperBuilder configure(com.fasterxml.jackson.core.StreamWriteFeature,boolean) -> configure
    277:278:com.fasterxml.jackson.databind.cfg.MapperBuilder withConfigOverride(java.lang.Class,java.util.function.Consumer) -> withConfigOverride
    305:306:com.fasterxml.jackson.databind.cfg.MapperBuilder withCoercionConfig(com.fasterxml.jackson.databind.type.LogicalType,java.util.function.Consumer) -> withCoercionConfig
    317:318:com.fasterxml.jackson.databind.cfg.MapperBuilder withCoercionConfig(java.lang.Class,java.util.function.Consumer) -> withCoercionConfig
    327:328:com.fasterxml.jackson.databind.cfg.MapperBuilder withCoercionConfigDefaults(java.util.function.Consumer) -> withCoercionConfigDefaults
    346:347:com.fasterxml.jackson.databind.cfg.MapperBuilder addModule(com.fasterxml.jackson.databind.Module) -> addModule
    352:355:com.fasterxml.jackson.databind.cfg.MapperBuilder addModules(com.fasterxml.jackson.databind.Module[]) -> addModules
    360:363:com.fasterxml.jackson.databind.cfg.MapperBuilder addModules(java.lang.Iterable) -> addModules
    374:374:java.util.List findModules() -> findModules
    386:391:java.util.List findModules(java.lang.ClassLoader) -> findModules
    395:400:java.util.ServiceLoader secureGetServiceLoader(java.lang.Class,java.lang.ClassLoader) -> secureGetServiceLoader
    420:420:com.fasterxml.jackson.databind.cfg.MapperBuilder findAndAddModules() -> findAndAddModules
    440:441:com.fasterxml.jackson.databind.cfg.MapperBuilder annotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> annotationIntrospector
    457:458:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultAttributes(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> defaultAttributes
    468:469:com.fasterxml.jackson.databind.cfg.MapperBuilder typeFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> typeFactory
    473:474:com.fasterxml.jackson.databind.cfg.MapperBuilder subtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> subtypeResolver
    478:479:com.fasterxml.jackson.databind.cfg.MapperBuilder visibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> visibility
    483:484:com.fasterxml.jackson.databind.cfg.MapperBuilder visibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> visibility
    497:498:com.fasterxml.jackson.databind.cfg.MapperBuilder handlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> handlerInstantiator
    510:511:com.fasterxml.jackson.databind.cfg.MapperBuilder propertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> propertyNamingStrategy
    525:529:com.fasterxml.jackson.databind.cfg.MapperBuilder accessorNaming(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> accessorNaming
    539:540:com.fasterxml.jackson.databind.cfg.MapperBuilder serializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory) -> serializerFactory
    552:553:com.fasterxml.jackson.databind.cfg.MapperBuilder filterProvider(com.fasterxml.jackson.databind.ser.FilterProvider) -> filterProvider
    557:558:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> defaultPrettyPrinter
    568:569:com.fasterxml.jackson.databind.cfg.MapperBuilder injectableValues(com.fasterxml.jackson.databind.InjectableValues) -> injectableValues
    573:574:com.fasterxml.jackson.databind.cfg.MapperBuilder nodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> nodeFactory
    586:587:com.fasterxml.jackson.databind.cfg.MapperBuilder constructorDetector(com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> constructorDetector
    596:597:com.fasterxml.jackson.databind.cfg.MapperBuilder addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addHandler
    605:606:com.fasterxml.jackson.databind.cfg.MapperBuilder clearProblemHandlers() -> clearProblemHandlers
    616:617:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter$Value) -> defaultSetterInfo
    626:627:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultMergeable(java.lang.Boolean) -> defaultMergeable
    636:637:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultLeniency(java.lang.Boolean) -> defaultLeniency
    653:654:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultDateFormat(java.text.DateFormat) -> defaultDateFormat
    662:663:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultTimeZone(java.util.TimeZone) -> defaultTimeZone
    671:672:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultLocale(java.util.Locale) -> defaultLocale
    690:691:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultBase64Variant(com.fasterxml.jackson.core.Base64Variant) -> defaultBase64Variant
    702:703:com.fasterxml.jackson.databind.cfg.MapperBuilder serializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> serializationInclusion
    716:717:com.fasterxml.jackson.databind.cfg.MapperBuilder defaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> defaultPropertyInclusion
    748:749:com.fasterxml.jackson.databind.cfg.MapperBuilder addMixIn(java.lang.Class,java.lang.Class) -> addMixIn
    769:770:com.fasterxml.jackson.databind.cfg.MapperBuilder removeMixIn(java.lang.Class) -> removeMixIn
    780:781:com.fasterxml.jackson.databind.cfg.MapperBuilder registerSubtypes(java.lang.Class[]) -> registerSubtypes
    785:786:com.fasterxml.jackson.databind.cfg.MapperBuilder registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    790:791:com.fasterxml.jackson.databind.cfg.MapperBuilder registerSubtypes(java.util.Collection) -> registerSubtypes
    808:809:com.fasterxml.jackson.databind.cfg.MapperBuilder polymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> polymorphicTypeValidator
    828:829:com.fasterxml.jackson.databind.cfg.MapperBuilder activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> activateDefaultTyping
    843:844:com.fasterxml.jackson.databind.cfg.MapperBuilder activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> activateDefaultTyping
    865:866:com.fasterxml.jackson.databind.cfg.MapperBuilder activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> activateDefaultTyping
    883:884:com.fasterxml.jackson.databind.cfg.MapperBuilder activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String) -> activateDefaultTypingAsProperty
    894:895:com.fasterxml.jackson.databind.cfg.MapperBuilder deactivateDefaultTyping() -> deactivateDefaultTyping
    916:917:com.fasterxml.jackson.databind.cfg.MapperBuilder setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> setDefaultTyping
    928:928:com.fasterxml.jackson.databind.cfg.MapperBuilder _this() -> _this
com.fasterxml.jackson.databind.cfg.MapperBuilder$1 -> com.fasterxml.jackson.databind.cfg.q$1:
# {"fileName":"MapperBuilder.java","id":"sourceFile"}
    java.lang.ClassLoader val$classLoader -> a
    java.lang.Class val$clazz -> b
    400:400:void <init>(java.lang.ClassLoader,java.lang.Class) -> <init>
    403:404:java.util.ServiceLoader run() -> run
    400:400:java.lang.Object run() -> run
com.fasterxml.jackson.databind.cfg.MapperConfig -> com.fasterxml.jackson.databind.cfg.r:
# {"fileName":"MapperConfig.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> j
    com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT -> k
    long _mapperFeatures -> l
    com.fasterxml.jackson.databind.cfg.BaseSettings _base -> m
    78:81:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,long) -> <init>
    84:87:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,long) -> <init>
    90:93:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    96:99:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig) -> <init>
    107:113:int collectFeatureDefaults(java.lang.Class) -> collectFeatureDefaults
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature,boolean) -> with
    150:150:boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    163:163:boolean hasMapperFeatures(int) -> hasMapperFeatures
    boolean isEnabled(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> isEnabled
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    190:190:boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    205:205:boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    213:213:boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    boolean useRootWrapping() -> useRootWrapping
    245:245:com.fasterxml.jackson.core.SerializableString compileString(java.lang.String) -> compileString
    255:255:com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    265:268:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    272:272:com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    277:277:com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider getAccessorNaming() -> getAccessorNaming
    281:281:com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    297:297:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(com.fasterxml.jackson.databind.JavaType) -> getDefaultTyper
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    314:321:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator() -> getPolymorphicTypeValidator
    325:325:com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    337:337:com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> constructType
    349:349:com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference) -> constructType
    354:354:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    368:368:com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class) -> introspectClassAnnotations
    376:376:com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectClassAnnotations
    385:385:com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(java.lang.Class) -> introspectDirectClassAnnotations
    394:394:com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectDirectClassAnnotations
    com.fasterxml.jackson.databind.cfg.ConfigOverride findConfigOverride(java.lang.Class) -> findConfigOverride
    com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class) -> getConfigOverride
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion() -> getDefaultPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> getDefaultPropertyInclusion
    460:464:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,com.fasterxml.jackson.annotation.JsonInclude$Value) -> getDefaultPropertyInclusion
    com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class) -> getDefaultInclusion
    497:501:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class,com.fasterxml.jackson.annotation.JsonInclude$Value) -> getDefaultInclusion
    com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class) -> getDefaultPropertyIgnorals
    com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyIgnorals
    com.fasterxml.jackson.annotation.JsonIncludeProperties$Value getDefaultPropertyInclusions(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyInclusions
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultVisibilityChecker
    com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    java.lang.Boolean getDefaultMergeable(java.lang.Class) -> getDefaultMergeable
    621:621:java.text.DateFormat getDateFormat() -> getDateFormat
    628:628:java.util.Locale getLocale() -> getLocale
    635:635:java.util.TimeZone getTimeZone() -> getTimeZone
    649:649:boolean hasExplicitTimeZone() -> hasExplicitTimeZone
    java.lang.Class getActiveView() -> getActiveView
    665:665:com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType) -> findRootName
    com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class) -> findRootName
    700:707:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    717:724:com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    51:56:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.MapperConfigBase -> com.fasterxml.jackson.databind.cfg.s:
# {"fileName":"MapperConfigBase.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.ConfigOverride EMPTY_OVERRIDE -> n
    long DEFAULT_MAPPER_FEATURES -> a
    long AUTO_DETECT_MASK -> b
    com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns -> o
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> p
    com.fasterxml.jackson.databind.PropertyName _rootName -> q
    java.lang.Class _view -> r
    com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes -> s
    com.fasterxml.jackson.databind.util.RootNameLookup _rootNames -> t
    com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides -> u
    com.fasterxml.jackson.databind.cfg.DatatypeFeatures _datatypeFeatures -> v
    134:144:void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    158:167:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides) -> <init>
    175:184:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase) -> <init>
    188:197:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.BaseSettings) -> <init>
    201:210:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,long) -> <init>
    213:222:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> <init>
    225:234:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.PropertyName) -> <init>
    238:247:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,java.lang.Class) -> <init>
    254:263:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver) -> <init>
    270:279:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.ContextAttributes) -> <init>
    286:295:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> <init>
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> _withBase
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _withMapperFeatures(long) -> _withMapperFeatures
    com.fasterxml.jackson.databind.cfg.MapperConfigBase _with(com.fasterxml.jackson.databind.cfg.DatatypeFeatures) -> _with
    322:322:com.fasterxml.jackson.databind.cfg.DatatypeFeatures _datatypeFeatures() -> _datatypeFeatures
    339:346:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    357:364:com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    372:380:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.MapperFeature,boolean) -> with
    396:396:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> with
    406:406:com.fasterxml.jackson.databind.cfg.MapperConfigBase withFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withFeatures
    416:416:com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.cfg.DatatypeFeature) -> without
    426:426:com.fasterxml.jackson.databind.cfg.MapperConfigBase withoutFeatures(com.fasterxml.jackson.databind.cfg.DatatypeFeature[]) -> withoutFeatures
    436:438:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.DatatypeFeature,boolean) -> with
    455:455:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.AnnotationIntrospector) -> with
    463:463:com.fasterxml.jackson.databind.cfg.MapperConfigBase withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    471:471:com.fasterxml.jackson.databind.cfg.MapperConfigBase withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    483:483:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.ContextAttributes) -> with
    507:507:com.fasterxml.jackson.databind.cfg.MapperConfigBase withAttributes(java.util.Map) -> withAttributes
    517:517:com.fasterxml.jackson.databind.cfg.MapperConfigBase withAttribute(java.lang.Object,java.lang.Object) -> withAttribute
    527:527:com.fasterxml.jackson.databind.cfg.MapperConfigBase withoutAttribute(java.lang.Object) -> withoutAttribute
    542:542:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.type.TypeFactory) -> with
    550:550:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> with
    562:562:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> with
    573:573:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider) -> with
    585:585:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> with
    599:599:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.core.Base64Variant) -> with
    610:610:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.text.DateFormat) -> with
    618:618:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.Locale) -> with
    626:626:com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(com.fasterxml.jackson.databind.PropertyName) -> withRootName
    648:651:com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    678:678:com.fasterxml.jackson.databind.cfg.DatatypeFeatures getDatatypeFeatures() -> getDatatypeFeatures
    688:688:com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    696:696:java.lang.String getRootName() -> getRootName
    703:703:com.fasterxml.jackson.databind.PropertyName getFullRootName() -> getFullRootName
    708:708:java.lang.Class getActiveView() -> getActiveView
    713:713:com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes() -> getAttributes
    724:725:com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class) -> getConfigOverride
    730:730:com.fasterxml.jackson.databind.cfg.ConfigOverride findConfigOverride(java.lang.Class) -> findConfigOverride
    735:735:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion() -> getDefaultPropertyInclusion
    740:745:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class) -> getDefaultPropertyInclusion
    751:756:com.fasterxml.jackson.annotation.JsonInclude$Value getDefaultInclusion(java.lang.Class,java.lang.Class) -> getDefaultInclusion
    761:761:com.fasterxml.jackson.annotation.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class) -> getDefaultPropertyFormat
    766:775:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class) -> getDefaultPropertyIgnorals
    782:786:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyIgnorals
    793:794:com.fasterxml.jackson.annotation.JsonIncludeProperties$Value getDefaultPropertyInclusions(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultPropertyInclusions
    800:820:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    831:844:com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getDefaultVisibilityChecker
    849:849:com.fasterxml.jackson.annotation.JsonSetter$Value getDefaultSetterInfo() -> getDefaultSetterInfo
    854:854:java.lang.Boolean getDefaultMergeable() -> getDefaultMergeable
    860:867:java.lang.Boolean getDefaultMergeable(java.lang.Class) -> getDefaultMergeable
    878:881:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType) -> findRootName
    886:889:com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class) -> findRootName
    904:904:java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    910:910:com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver copy() -> copy
    918:918:int mixInCount() -> mixInCount
    23:23:com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature,boolean) -> with
    23:23:com.fasterxml.jackson.databind.cfg.MapperConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    23:23:com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    32:44:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.MutableCoercionConfig -> com.fasterxml.jackson.databind.cfg.t:
# {"fileName":"MutableCoercionConfig.java","id":"sourceFile"}
    long serialVersionUID -> c
    16:16:void <init>() -> <init>
    19:20:void <init>(com.fasterxml.jackson.databind.cfg.MutableCoercionConfig) -> <init>
    23:23:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig copy() -> copy
    28:29:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setCoercion(com.fasterxml.jackson.databind.cfg.CoercionInputShape,com.fasterxml.jackson.databind.cfg.CoercionAction) -> setCoercion
    33:34:com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setAcceptBlankAsEmpty(java.lang.Boolean) -> setAcceptBlankAsEmpty
com.fasterxml.jackson.databind.cfg.MutableConfigOverride -> com.fasterxml.jackson.databind.cfg.u:
# {"fileName":"MutableConfigOverride.java","id":"sourceFile"}
    long serialVersionUID -> i
    24:24:void <init>() -> <init>
    27:28:void <init>(com.fasterxml.jackson.databind.cfg.MutableConfigOverride) -> <init>
    31:31:com.fasterxml.jackson.databind.cfg.MutableConfigOverride copy() -> copy
    35:36:com.fasterxml.jackson.databind.cfg.MutableConfigOverride setFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> setFormat
    46:47:com.fasterxml.jackson.databind.cfg.MutableConfigOverride setInclude(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setInclude
    59:60:com.fasterxml.jackson.databind.cfg.MutableConfigOverride setIncludeAsProperty(com.fasterxml.jackson.annotation.JsonInclude$Value) -> setIncludeAsProperty
    64:65:com.fasterxml.jackson.databind.cfg.MutableConfigOverride setIgnorals(com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value) -> setIgnorals
    69:70:com.fasterxml.jackson.databind.cfg.MutableConfigOverride setIsIgnoredType(java.lang.Boolean) -> setIsIgnoredType
    77:78:com.fasterxml.jackson.databind.cfg.MutableConfigOverride setSetterInfo(com.fasterxml.jackson.annotation.JsonSetter$Value) -> setSetterInfo
    85:86:com.fasterxml.jackson.databind.cfg.MutableConfigOverride setVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> setVisibility
    93:94:com.fasterxml.jackson.databind.cfg.MutableConfigOverride setMergeable(java.lang.Boolean) -> setMergeable
com.fasterxml.jackson.databind.cfg.PackageVersion -> com.fasterxml.jackson.databind.cfg.v:
# {"fileName":"PackageVersion.java","id":"sourceFile"}
    com.fasterxml.jackson.core.Version VERSION -> a
    12:12:void <init>() -> <init>
    18:18:com.fasterxml.jackson.core.Version version() -> version
    13:13:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig -> com.fasterxml.jackson.databind.cfg.w:
# {"fileName":"SerializerFactoryConfig.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS -> a
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS -> b
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers -> c
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers -> d
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers -> e
    42:43:void <init>() -> <init>
    48:54:void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]) -> <init>
    58:62:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    67:71:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    76:80:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    83:83:boolean hasSerializers() -> hasSerializers
    84:84:boolean hasKeySerializers() -> hasKeySerializers
    85:85:boolean hasSerializerModifiers() -> hasSerializerModifiers
    86:86:java.lang.Iterable serializers() -> serializers
    87:87:java.lang.Iterable keySerializers() -> keySerializers
    88:88:java.lang.Iterable serializerModifiers() -> serializerModifiers
    19:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.cfg.package-info -> com.fasterxml.jackson.databind.cfg.x:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.deser.AbstractDeserializer -> com.fasterxml.jackson.databind.deser.a:
# {"fileName":"AbstractDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> i
    com.fasterxml.jackson.databind.JavaType _baseType -> a
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> b
    java.util.Map _backRefProperties -> c
    java.util.Map _properties -> d
    boolean _acceptString -> e
    boolean _acceptBoolean -> f
    boolean _acceptInt -> g
    boolean _acceptDouble -> h
    66:76:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map,java.util.Map) -> <init>
    81:82:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map) -> <init>
    85:94:void <init>(com.fasterxml.jackson.databind.BeanDescription) -> <init>
    101:111:void <init>(com.fasterxml.jackson.databind.deser.AbstractDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,java.util.Map) -> <init>
    120:120:com.fasterxml.jackson.databind.deser.AbstractDeserializer constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription) -> constructForNonPOJO
    127:175:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    186:186:java.lang.Class handledType() -> handledType
    190:190:boolean isCachable() -> isCachable
    196:196:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    206:206:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    216:216:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    225:225:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    241:263:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    273:274:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    292:319:java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeIfNatural
    328:336:java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromObjectId
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory -> com.fasterxml.jackson.databind.deser.b:
# {"fileName":"BasicDeserializerFactory.java","id":"sourceFile"}
    java.lang.Class CLASS_OBJECT -> c
    java.lang.Class CLASS_STRING -> e
    java.lang.Class CLASS_CHAR_SEQUENCE -> f
    java.lang.Class CLASS_ITERABLE -> g
    java.lang.Class CLASS_MAP_ENTRY -> h
    java.lang.Class CLASS_SERIALIZABLE -> i
    com.fasterxml.jackson.databind.PropertyName UNWRAPPED_CREATOR_PARAM_NAME -> a
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig _factoryConfig -> b
    79:81:void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> <init>
    91:91:com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig getFactoryConfig() -> getFactoryConfig
    com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> withConfig
    108:108:com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    117:117:com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    126:126:com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    135:135:com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    144:144:com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    158:170:com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> mapAbstractType
    180:189:com.fasterxml.jackson.databind.JavaType _mapAbstractType2(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _mapAbstractType2
    208:242:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> findValueInstantiator
    257:310:com.fasterxml.jackson.databind.deser.ValueInstantiator _constructDefaultValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> _constructDefaultValueInstantiator
    316:341:java.util.Map _findCreatorsFromProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> _findCreatorsFromProperties
    348:378:com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiatorInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> _valueInstantiatorInstance
    400:414:void _addRecordConstructor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,java.util.List) -> _addRecordConstructor
    426:473:void _addExplicitConstructorCreators(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,boolean) -> _addExplicitConstructorCreators
    479:622:void _addImplicitConstructorCreators(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,java.util.List) -> _addImplicitConstructorCreators
    634:681:void _addExplicitFactoryCreators(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,boolean) -> _addExplicitFactoryCreators
    687:789:void _addImplicitFactoryCreators(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState,java.util.List) -> _addImplicitFactoryCreators
    810:847:void _addExplicitDelegatingCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitDelegatingCreator
    860:885:void _addExplicitPropertyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitPropertyCreator
    893:895:void _addExplicitAnyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> _addExplicitAnyCreator
    909:1004:void _addExplicitAnyCreator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate,com.fasterxml.jackson.databind.cfg.ConstructorDetector) -> _addExplicitAnyCreator
    1011:1040:boolean _checkIfCreatorPropertyBased(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> _checkIfCreatorPropertyBased
    1048:1095:void _checkImplicitlyNamedConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.List) -> _checkImplicitlyNamedConstructors
    1101:1147:boolean _handleSingleArgumentCreator(com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,boolean) -> _handleSingleArgumentCreator
    1161:1166:void _validateNamedPropertyParameter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate,int,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.JacksonInject$Value) -> _validateNamedPropertyParameter
    1174:1177:void _reportUnwrappedCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> _reportUnwrappedCreatorProperty
    1190:1235:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.PropertyName,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.annotation.JacksonInject$Value) -> constructCreatorProperty
    1240:1257:com.fasterxml.jackson.databind.PropertyName _findParamName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _findParamName
    1269:1316:com.fasterxml.jackson.databind.PropertyMetadata _getSetterInfo(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> _getSetterInfo
    1330:1362:com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> createArrayDeserializer
    1376:1452:com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionDeserializer
    1457:1462:com.fasterxml.jackson.databind.type.CollectionType _mapAbstractCollectionType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig) -> _mapAbstractCollectionType
    1471:1492:com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionLikeDeserializer
    1506:1605:com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> createMapDeserializer
    1610:1615:com.fasterxml.jackson.databind.type.MapType _mapAbstractMapType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig) -> _mapAbstractMapType
    1624:1655:com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createMapLikeDeserializer
    1672:1724:com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createEnumDeserializer
    1733:1740:com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createTreeDeserializer
    1748:1785:com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription) -> createReferenceDeserializer
    1799:1831:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    1844:1844:com.fasterxml.jackson.databind.JsonDeserializer findOptionalStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findOptionalStdDeserializer
    1858:1894:com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> createKeyDeserializer
    1901:1951:com.fasterxml.jackson.databind.KeyDeserializer _createEnumKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _createEnumKeyDeserializer
    1968:2005:boolean hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasExplicitDeserializerFor
    2031:2045:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyTypeDeserializer
    2064:2074:com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyContentTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyContentTypeDeserializer
    2088:2147:com.fasterxml.jackson.databind.JsonDeserializer findDefaultDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findDefaultDeserializer
    2151:2152:com.fasterxml.jackson.databind.JavaType _findRemappedType(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _findRemappedType
    2165:2171:com.fasterxml.jackson.databind.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomTreeNodeDeserializer
    2179:2186:com.fasterxml.jackson.databind.JsonDeserializer _findCustomReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomReferenceDeserializer
    2194:2200:com.fasterxml.jackson.databind.JsonDeserializer _findCustomBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomBeanDeserializer
    2208:2215:com.fasterxml.jackson.databind.JsonDeserializer _findCustomArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomArrayDeserializer
    2223:2230:com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomCollectionDeserializer
    2238:2245:com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    2252:2258:com.fasterxml.jackson.databind.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomEnumDeserializer
    2267:2274:com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomMapDeserializer
    2283:2290:com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomMapLikeDeserializer
    2311:2318:com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializerFromAnnotation
    2330:2337:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializerFromAnnotation
    2347:2354:com.fasterxml.jackson.databind.JsonDeserializer findContentDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializerFromAnnotation
    2370:2414:com.fasterxml.jackson.databind.JavaType resolveMemberAndTypeAnnotations(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> resolveMemberAndTypeAnnotations
    2420:2430:com.fasterxml.jackson.databind.util.EnumResolver constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> constructEnumResolver
    2441:2445:com.fasterxml.jackson.databind.util.EnumResolver constructEnumNamingStrategyResolver(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> constructEnumNamingStrategyResolver
    2453:2458:boolean _hasCreatorAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> _hasCreatorAnnotation
    2478:2482:com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> modifyTypeByAnnotation
    2493:2493:com.fasterxml.jackson.databind.JavaType resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> resolveType
    2502:2506:com.fasterxml.jackson.databind.introspect.AnnotatedMethod _findJsonValueFor(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _findJsonValueFor
    48:59:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$1 -> com.fasterxml.jackson.databind.deser.b$1:
# {"fileName":"BasicDeserializerFactory.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonCreator$Mode -> a
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$ConstructorDetector$SingleArgConstructor -> b
    456:936:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$ContainerDefaultMappings -> com.fasterxml.jackson.databind.deser.b$a:
# {"fileName":"BasicDeserializerFactory.java","id":"sourceFile"}
    java.util.HashMap _collectionFallbacks -> a
    java.util.HashMap _mapFallbacks -> b
    2517:2517:void <init>() -> <init>
    2566:2566:java.lang.Class findCollectionFallback(com.fasterxml.jackson.databind.JavaType) -> findCollectionFallback
    2570:2570:java.lang.Class findMapFallback(com.fasterxml.jackson.databind.JavaType) -> findMapFallback
    2523:2563:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$CreatorCollectionState -> com.fasterxml.jackson.databind.deser.b$b:
# {"fileName":"BasicDeserializerFactory.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.DeserializationContext context -> a
    com.fasterxml.jackson.databind.BeanDescription beanDesc -> b
    com.fasterxml.jackson.databind.introspect.VisibilityChecker vchecker -> c
    com.fasterxml.jackson.databind.deser.impl.CreatorCollector creators -> d
    java.util.Map creatorParams -> e
    java.util.List _implicitFactoryCandidates -> f
    int _explicitFactoryCount -> g
    java.util.List _implicitConstructorCandidates -> h
    int _explicitConstructorCount -> i
    2597:2603:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,java.util.Map) -> <init>
    2606:2606:com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector() -> annotationIntrospector
    2612:2616:void addImplicitFactoryCandidate(com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> addImplicitFactoryCandidate
    2619:2620:void increaseExplicitFactoryCount() -> increaseExplicitFactoryCount
    2623:2623:boolean hasExplicitFactories() -> hasExplicitFactories
    2627:2627:boolean hasImplicitFactoryCandidates() -> hasImplicitFactoryCandidates
    2631:2631:java.util.List implicitFactoryCandidates() -> implicitFactoryCandidates
    2637:2641:void addImplicitConstructorCandidate(com.fasterxml.jackson.databind.deser.impl.CreatorCandidate) -> addImplicitConstructorCandidate
    2644:2645:void increaseExplicitConstructorCount() -> increaseExplicitConstructorCount
    2648:2648:boolean hasExplicitConstructors() -> hasExplicitConstructors
    2652:2652:boolean hasImplicitConstructorCandidates() -> hasImplicitConstructorCandidates
    2656:2656:java.util.List implicitConstructorCandidates() -> implicitConstructorCandidates
com.fasterxml.jackson.databind.deser.BeanDeserializer -> com.fasterxml.jackson.databind.deser.c:
# {"fileName":"BeanDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> w
    java.lang.Exception _nullFromCreator -> a
    com.fasterxml.jackson.databind.util.NameTransformer _currentlyTransforming -> x
    59:61:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean) -> <init>
    73:75:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,java.util.Set,boolean) -> <init>
    82:83:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) -> <init>
    86:87:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean) -> <init>
    90:91:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    94:95:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    102:103:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set) -> <init>
    109:110:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set,java.util.Set) -> <init>
    113:114:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    121:132:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    137:137:com.fasterxml.jackson.databind.deser.BeanDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    143:143:com.fasterxml.jackson.databind.deser.BeanDeserializer withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    148:148:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    153:153:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    158:159:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    175:187:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    194:224:java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> _deserializeOther
    229:229:java.lang.Object _missingToken(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _missingToken
    241:286:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    303:323:java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> vanillaDeserialize
    339:401:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    416:548:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    559:562:com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    570:574:java.lang.Object _deserializeWithErrorWrapping(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _deserializeWithErrorWrapping
    592:604:java.lang.Object deserializeFromNull(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromNull
    611:656:java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromArray
    669:690:java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> deserializeWithView
    707:768:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithUnwrapped
    776:826:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    837:933:java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    946:959:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithExternalTypeId
    966:967:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    974:1017:java.lang.Object _deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler) -> _deserializeWithExternalTypeId
    1025:1108:java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    1119:1122:java.lang.Exception _creatorReturnedNullException() -> _creatorReturnedNullException
    20:20:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    20:20:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
com.fasterxml.jackson.databind.deser.BeanDeserializer$1 -> com.fasterxml.jackson.databind.deser.c$1:
# {"fileName":"BeanDeserializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> b
    195:627:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring -> com.fasterxml.jackson.databind.deser.c$a:
# {"fileName":"BeanDeserializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.DeserializationContext _context -> a
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _prop -> b
    java.lang.Object _bean -> c
    1137:1140:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    1143:1144:void setBean(java.lang.Object) -> setBean
    1149:1155:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.BeanDeserializerBase -> com.fasterxml.jackson.databind.deser.d:
# {"fileName":"BeanDeserializerBase.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.PropertyName TEMP_PROPERTY_NAME -> b
    com.fasterxml.jackson.databind.JavaType _beanType -> c
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> d
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> e
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> f
    com.fasterxml.jackson.databind.JsonDeserializer _arrayDelegateDeserializer -> g
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> h
    boolean _nonStandardCreation -> i
    boolean _vanillaProcessing -> j
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties -> k
    com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables -> l
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> m
    java.util.Set _ignorableProps -> n
    java.util.Set _includableProps -> o
    boolean _ignoreAllUnknown -> p
    boolean _needViewProcesing -> q
    java.util.Map _backRefs -> r
    java.util.HashMap _subDeserializers -> s
    com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> t
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> u
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> v
    218:263:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,java.util.Set,boolean) -> <init>
    266:267:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) -> <init>
    271:295:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean) -> <init>
    299:335:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    339:374:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    382:408:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set,java.util.Set) -> <init>
    415:438:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    443:444:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    468:468:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    486:486:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.Set) -> withIgnorableProperties
    503:654:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    662:684:void _replaceProperty(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _replaceProperty
    691:710:com.fasterxml.jackson.databind.JsonDeserializer _findDelegateDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> _findDelegateDeserializer
    727:739:com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> findConvertingDeserializer
    753:825:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    834:866:com.fasterxml.jackson.databind.deser.BeanDeserializerBase _handleByNameInclusion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _handleByNameInclusion
    877:898:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveManagedReferenceProperty
    908:914:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolvedObjectIdProperty
    925:939:com.fasterxml.jackson.databind.util.NameTransformer _findPropertyUnwrapper(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findPropertyUnwrapper
    952:977:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveInnerClassValuedProperty
    985:1017:com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveMergeAndNullSettings(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> _resolveMergeAndNullSettings
    1029:1029:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    1035:1035:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    1046:1048:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    1059:1059:boolean isCachable() -> isCachable
    1071:1071:boolean isCaseInsensitive() -> isCaseInsensitive
    1079:1079:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    1084:1084:java.lang.Class handledType() -> handledType
    1094:1094:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    1098:1098:boolean hasProperty(java.lang.String) -> hasProperty
    1102:1102:boolean hasViews() -> hasViews
    1109:1109:int getPropertyCount() -> getPropertyCount
    1114:1118:java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    1125:1125:java.lang.Class getBeanClass() -> getBeanClass
    1128:1128:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    1132:1132:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    1144:1147:java.util.Iterator properties() -> properties
    1159:1162:java.util.Iterator creatorProperties() -> creatorProperties
    1168:1168:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    1180:1185:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(java.lang.String) -> findProperty
    1200:1205:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(int) -> findProperty
    1215:1218:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    1223:1223:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    1247:1248:void replaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> replaceProperty
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    1269:1296:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    1311:1329:java.lang.Object _handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object) -> _handleTypedObjectId
    1345:1362:java.lang.Object _convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer) -> _convertObjectId
    1375:1375:java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithObjectId
    1384:1393:java.lang.Object deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectId
    1399:1424:java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    1435:1481:java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromNumber
    1488:1504:java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromString
    1513:1547:java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromDouble
    1555:1567:java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBoolean
    1578:1578:java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromArray
    1586:1613:java.lang.Object deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromEmbedded
    1620:1624:com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer() -> _delegateDeserializer
    1636:1639:void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> injectValues
    1651:1661:java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handleUnknownProperties
    1676:1689:void handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownVanilla
    1700:1710:void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    1722:1726:void handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleIgnoredProperty
    1745:1747:java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handlePolymorphic
    1767:1790:java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.StreamReadConstraints,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handlePolymorphic
    1804:1828:com.fasterxml.jackson.databind.JsonDeserializer _findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> _findSubclassDeserializer
    1853:1853:void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    1863:1877:java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> throwOrReturnThrowable
    1883:1898:java.lang.Object wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> wrapInstantiationProblem
    35:35:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder -> com.fasterxml.jackson.databind.deser.e:
# {"fileName":"BeanDeserializerBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.DeserializationConfig _config -> a
    com.fasterxml.jackson.databind.DeserializationContext _context -> b
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> c
    java.util.Map _properties -> d
    java.util.List _injectables -> e
    java.util.HashMap _backRefProperties -> f
    java.util.HashSet _ignorableProps -> g
    java.util.HashSet _includableProps -> h
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> i
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> j
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> k
    boolean _ignoreAllUnknown -> l
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> m
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value _builderConfig -> n
    57:129:void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    57:156:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> <init>
    159:159:java.util.HashMap _copy(java.util.HashMap) -> _copy
    164:164:java.util.List _copy(java.util.List) -> _copy
    177:178:void addOrReplaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> addOrReplaceProperty
    187:191:void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addProperty
    201:224:void addBackReferenceProperty(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addBackReferenceProperty
    231:242:void addInjectable(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> addInjectable
    250:254:void addIgnorable(java.lang.String) -> addIgnorable
    263:267:void addIncludable(java.lang.String) -> addIncludable
    281:282:void addCreatorProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addCreatorProperty
    286:290:void setAnySetter(com.fasterxml.jackson.databind.deser.SettableAnyProperty) -> setAnySetter
    293:294:void setIgnoreUnknownProperties(boolean) -> setIgnoreUnknownProperties
    297:298:void setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator) -> setValueInstantiator
    301:302:void setObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> setObjectIdReader
    305:307:void setPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value) -> setPOJOBuilder
    324:324:java.util.Iterator getProperties() -> getProperties
    328:328:com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    332:332:boolean hasProperty(com.fasterxml.jackson.databind.PropertyName) -> hasProperty
    336:336:com.fasterxml.jackson.databind.deser.SettableBeanProperty removeProperty(com.fasterxml.jackson.databind.PropertyName) -> removeProperty
    340:340:com.fasterxml.jackson.databind.deser.SettableAnyProperty getAnySetter() -> getAnySetter
    344:344:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    348:348:java.util.List getInjectables() -> getInjectables
    352:352:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    356:356:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getBuildMethod() -> getBuildMethod
    360:360:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value getBuilderConfig() -> getBuilderConfig
    367:367:boolean hasIgnorable(java.lang.String) -> hasIgnorable
    383:413:com.fasterxml.jackson.databind.JsonDeserializer build() -> build
    426:426:com.fasterxml.jackson.databind.deser.AbstractDeserializer buildAbstract() -> buildAbstract
    437:486:com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBased(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> buildBuilderBased
    496:496:com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean) -> createBuilderBasedDeserializer
    526:574:void _fixAccess(java.util.Collection) -> _fixAccess
    578:595:java.util.Map _collectAliases(java.util.Collection) -> _collectAliases
    602:606:boolean _findCaseInsensitivity() -> _findCaseInsensitivity
    620:627:void _handleBadAccess(java.lang.IllegalArgumentException) -> _handleBadAccess
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory -> com.fasterxml.jackson.databind.deser.f:
# {"fileName":"BeanDeserializerFactory.java","id":"sourceFile"}
    long serialVersionUID -> e
    java.lang.Class[] INIT_CAUSE_PARAMS -> f
    com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance -> c
    57:58:void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> <init>
    68:78:com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> withConfig
    98:151:com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createBeanDeserializer
    162:170:com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> createBuilderBasedDeserializer
    183:192:com.fasterxml.jackson.databind.JsonDeserializer findStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findStdDeserializer
    210:218:com.fasterxml.jackson.databind.JsonDeserializer _findUnsupportedTypeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _findUnsupportedTypeDeserializer
    226:232:com.fasterxml.jackson.databind.JavaType materializeAbstractType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> materializeAbstractType
    262:304:com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildBeanDeserializer
    322:371:com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildBuilderBasedDeserializer
    378:411:void addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addObjectIdReader
    418:477:com.fasterxml.jackson.databind.JsonDeserializer buildThrowableDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildThrowableDeserializer
    493:493:com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> constructBeanDeserializerBuilder
    507:662:void addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addBeanProps
    668:669:boolean _isSetterlessType(java.lang.Class) -> _isSetterlessType
    687:687:java.util.List filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set) -> filterBeanProps
    704:726:java.util.List filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set,java.util.Set) -> filterBeanProps
    740:764:void addBackReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addBackReferenceProperties
    771:772:void addReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addReferenceProperties
    782:791:void addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addInjectables
    810:883:com.fasterxml.jackson.databind.deser.SettableAnyProperty constructAnySetter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> constructAnySetter
    900:936:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> constructSettableProperty
    947:960:com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> constructSetterlessProperty
    979:992:boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    1002:1022:boolean isIgnorableType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class,java.util.Map) -> isIgnorableType
    1032:1033:void _validateSubType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _validateSubType
    41:53:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.BeanDeserializerModifier -> com.fasterxml.jackson.databind.deser.g:
# {"fileName":"BeanDeserializerModifier.java","id":"sourceFile"}
    48:48:void <init>() -> <init>
    62:62:java.util.List updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> updateProperties
    75:75:com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder updateBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> updateBuilder
    92:92:com.fasterxml.jackson.databind.JsonDeserializer modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyDeserializer
    109:109:com.fasterxml.jackson.databind.JsonDeserializer modifyEnumDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyEnumDeserializer
    120:120:com.fasterxml.jackson.databind.JsonDeserializer modifyReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyReferenceDeserializer
    142:142:com.fasterxml.jackson.databind.JsonDeserializer modifyArrayDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyArrayDeserializer
    153:153:com.fasterxml.jackson.databind.JsonDeserializer modifyCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyCollectionDeserializer
    164:164:com.fasterxml.jackson.databind.JsonDeserializer modifyCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyCollectionLikeDeserializer
    175:175:com.fasterxml.jackson.databind.JsonDeserializer modifyMapDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyMapDeserializer
    186:186:com.fasterxml.jackson.databind.JsonDeserializer modifyMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyMapLikeDeserializer
    200:200:com.fasterxml.jackson.databind.KeyDeserializer modifyKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> modifyKeyDeserializer
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer -> com.fasterxml.jackson.databind.deser.h:
# {"fileName":"BuilderBasedDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> x
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> a
    com.fasterxml.jackson.databind.JavaType _targetType -> w
    55:56:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,boolean) -> <init>
    67:76:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,java.util.Set,boolean) -> <init>
    88:91:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.Set,boolean,boolean) -> <init>
    99:100:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer) -> <init>
    104:107:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,boolean) -> <init>
    110:113:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    116:119:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    122:123:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.Set) -> <init>
    126:129:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.Set,java.util.Set) -> <init>
    132:135:void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> <init>
    144:144:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    149:149:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    155:155:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    160:160:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    165:165:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    170:171:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    183:183:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    196:202:java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> finishBuild
    214:243:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    257:268:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    285:301:java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> vanillaDeserialize
    312:346:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    364:448:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    454:495:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _deserialize
    502:536:java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromArray
    549:569:java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> deserializeWithView
    586:636:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithUnwrapped
    644:705:java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    712:742:java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> deserializeWithUnwrapped
    755:758:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithExternalTypeId
    765:811:java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    819:820:java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer$1 -> com.fasterxml.jackson.databind.deser.h$1:
# {"fileName":"BuilderBasedDeserializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> a
    518:518:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.ContextualDeserializer -> com.fasterxml.jackson.databind.deser.i:
# {"fileName":"ContextualDeserializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer -> com.fasterxml.jackson.databind.deser.j:
# {"fileName":"ContextualKeyDeserializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.CreatorProperty -> com.fasterxml.jackson.databind.deser.k:
# {"fileName":"CreatorProperty.java","id":"sourceFile"}
    long serialVersionUID -> v
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter _annotated -> c
    com.fasterxml.jackson.annotation.JacksonInject$Value _injectableValue -> d
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _fallbackSetter -> e
    int _creatorIndex -> f
    boolean _ignorable -> g
    87:92:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,com.fasterxml.jackson.annotation.JacksonInject$Value,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    104:108:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    134:134:com.fasterxml.jackson.databind.deser.CreatorProperty construct(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,com.fasterxml.jackson.annotation.JacksonInject$Value,com.fasterxml.jackson.databind.PropertyMetadata) -> construct
    142:148:void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    152:158:void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    162:162:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    167:172:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    177:177:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    182:185:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    194:195:void setFallbackSetter(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> setFallbackSetter
    199:200:void markAsIgnorable() -> markAsIgnorable
    204:204:boolean isIgnorable() -> isIgnorable
    222:227:java.lang.Object findInjectableValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> findInjectableValue
    237:238:void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> inject
    248:251:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    254:254:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    257:257:int getCreatorIndex() -> getCreatorIndex
    270:272:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    278:279:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    285:287:void set(java.lang.Object,java.lang.Object) -> set
    292:293:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    303:307:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    313:313:java.lang.Object getInjectableValueId() -> getInjectableValueId
    318:318:boolean isInjectionOnly() -> isInjectionOnly
    330:330:java.lang.String toString() -> toString
    340:343:void _verifySetter() -> _verifySetter
    348:356:void _reportMissingSetter(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _reportMissingSetter
com.fasterxml.jackson.databind.deser.DataFormatReaders -> com.fasterxml.jackson.databind.deser.l:
# {"fileName":"DataFormatReaders.java","id":"sourceFile"}
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> a
    com.fasterxml.jackson.databind.ObjectReader[] _readers -> b
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> c
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> d
    int _maxInputLookahead -> e
    65:67:void <init>(com.fasterxml.jackson.databind.ObjectReader[]) -> <init>
    70:71:void <init>(java.util.Collection) -> <init>
    76:81:void <init>(com.fasterxml.jackson.databind.ObjectReader[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int) -> <init>
    90:93:com.fasterxml.jackson.databind.deser.DataFormatReaders withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withOptimalMatch
    97:100:com.fasterxml.jackson.databind.deser.DataFormatReaders withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withMinimalMatch
    104:104:com.fasterxml.jackson.databind.deser.DataFormatReaders with(com.fasterxml.jackson.databind.ObjectReader[]) -> with
    109:112:com.fasterxml.jackson.databind.deser.DataFormatReaders withMaxInputLookahead(int) -> withMaxInputLookahead
    123:128:com.fasterxml.jackson.databind.deser.DataFormatReaders with(com.fasterxml.jackson.databind.DeserializationConfig) -> with
    133:138:com.fasterxml.jackson.databind.deser.DataFormatReaders withType(com.fasterxml.jackson.databind.JavaType) -> withType
    157:157:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(java.io.InputStream) -> findFormat
    169:169:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(byte[]) -> findFormat
    183:183:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(byte[],int,int) -> findFormat
    195:206:java.lang.String toString() -> toString
    217:239:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match _findFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader) -> _findFormat
com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader -> com.fasterxml.jackson.databind.deser.l$a:
# {"fileName":"DataFormatReaders.java","id":"sourceFile"}
    254:255:void <init>(java.io.InputStream,byte[]) -> <init>
    257:258:void <init>(byte[]) -> <init>
    260:261:void <init>(byte[],int,int) -> <init>
    265:265:com.fasterxml.jackson.databind.deser.DataFormatReaders$Match createMatcher(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> createMatcher
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match -> com.fasterxml.jackson.databind.deser.l$b:
# {"fileName":"DataFormatReaders.java","id":"sourceFile"}
    java.io.InputStream _originalStream -> a
    byte[] _bufferedData -> b
    int _bufferedStart -> c
    int _bufferedLength -> d
    com.fasterxml.jackson.databind.ObjectReader _match -> e
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> f
    305:312:void <init>(java.io.InputStream,byte[],int,int,com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> <init>
    324:324:boolean hasMatch() -> hasMatch
    331:331:com.fasterxml.jackson.core.format.MatchStrength getMatchStrength() -> getMatchStrength
    337:337:com.fasterxml.jackson.databind.ObjectReader getReader() -> getReader
    347:347:java.lang.String getMatchedFormatName() -> getMatchedFormatName
    363:370:com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> createParserWithMatch
    381:384:java.io.InputStream getDataStream() -> getDataStream
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext -> com.fasterxml.jackson.databind.deser.m:
# {"fileName":"DefaultDeserializationContext.java","id":"sourceFile"}
    long serialVersionUID -> o
    java.util.LinkedHashMap _objectIds -> n
    java.util.List _objectIdResolvers -> p
    45:46:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache) -> <init>
    50:51:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    56:57:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    61:62:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    68:69:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext) -> <init>
    80:80:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext copy() -> copy
    94:131:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver) -> findObjectId
    147:147:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId createReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> createReadableObjectId
    153:183:void checkUnresolvedObjectId() -> checkUnresolvedObjectId
    197:197:boolean tryToResolveUnresolvedObjectId(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId) -> tryToResolveUnresolvedObjectId
    211:243:com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> deserializerInstance
    250:284:com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> with
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> createInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDummyInstance(com.fasterxml.jackson.databind.DeserializationConfig) -> createDummyInstance
    319:325:java.lang.Object readRootValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object) -> readRootValue
    333:366:java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object) -> _unwrapAndDeserialize
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl -> com.fasterxml.jackson.databind.deser.m$a:
# {"fileName":"DefaultDeserializationContext.java","id":"sourceFile"}
    long serialVersionUID -> o
    387:388:void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    392:393:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> <init>
    395:395:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl) -> <init>
    398:399:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.deser.DeserializerFactory) -> <init>
    402:403:void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.DeserializationConfig) -> <init>
    407:408:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext copy() -> copy
    414:414:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> createInstance
    420:420:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDummyInstance(com.fasterxml.jackson.databind.DeserializationConfig) -> createDummyInstance
    425:425:com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> with
com.fasterxml.jackson.databind.deser.DeserializationProblemHandler -> com.fasterxml.jackson.databind.deser.n:
# {"fileName":"DeserializationProblemHandler.java","id":"sourceFile"}
    java.lang.Object NOT_HANDLED -> a
    33:33:void <init>() -> <init>
    74:74:boolean handleUnknownProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    106:106:java.lang.Object handleWeirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String) -> handleWeirdKey
    140:140:java.lang.Object handleWeirdStringValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String,java.lang.String) -> handleWeirdStringValue
    173:173:java.lang.Object handleWeirdNumberValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Number,java.lang.String) -> handleWeirdNumberValue
    201:201:java.lang.Object handleWeirdNativeValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser) -> handleWeirdNativeValue
    218:218:java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleUnexpectedToken
    254:254:java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleUnexpectedToken
    288:288:java.lang.Object handleInstantiationProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,java.lang.Throwable) -> handleInstantiationProblem
    324:324:java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleMissingInstantiator
    362:362:com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleUnknownTypeId
    398:398:com.fasterxml.jackson.databind.JavaType handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String) -> handleMissingTypeId
    416:416:java.lang.Object handleMissingInstantiator(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,com.fasterxml.jackson.core.JsonParser,java.lang.String) -> handleMissingInstantiator
    41:41:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.DeserializerCache -> com.fasterxml.jackson.databind.deser.o:
# {"fileName":"DeserializerCache.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers -> a
    java.util.HashMap _incompleteDeserializers -> b
    54:55:void <init>() -> <init>
    44:60:void <init>(int) -> <init>
    70:71:java.lang.Object writeReplace() -> writeReplace
    93:93:int cachedDeserializersCount() -> cachedDeserializersCount
    104:105:void flushCachedDeserializers() -> flushCachedDeserializers
    139:151:com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> findValueDeserializer
    166:174:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> findKeyDeserializer
    189:193:boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> hasValueDeserializerFor
    204:210:com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType) -> _findCachedDeserializer
    228:251:com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createAndCacheValueDeserializer
    264:300:com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createAndCache2
    319:359:com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createDeserializer
    366:415:com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _createDeserializer2
    427:433:com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializerFromAnnotation
    446:451:com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer) -> findConvertingDeserializer
    458:462:com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findConverter
    484:533:com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> modifyTypeByAnnotation
    549:565:boolean _hasCustomHandlers(com.fasterxml.jackson.databind.JavaType) -> _hasCustomHandlers
    570:580:java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class) -> _verifyAsClass
    593:597:com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _handleUnknownValueDeserializer
    603:603:com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _handleUnknownKeyDeserializer
com.fasterxml.jackson.databind.deser.DeserializerFactory -> com.fasterxml.jackson.databind.deser.p:
# {"fileName":"DeserializerFactory.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> d
    41:41:void <init>() -> <init>
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> mapAbstractType
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> findValueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> createBuilderBasedDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription) -> createReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createTreeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> createArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> createMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createMapLikeDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> createKeyDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    boolean hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasExplicitDeserializerFor
    43:43:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.Deserializers -> com.fasterxml.jackson.databind.deser.q:
# {"fileName":"Deserializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findReferenceDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
    254:254:boolean hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasDeserializerFor
com.fasterxml.jackson.databind.deser.Deserializers$Base -> com.fasterxml.jackson.databind.deser.q$a:
# {"fileName":"Deserializers.java","id":"sourceFile"}
    270:270:void <init>() -> <init>
    278:278:com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    286:286:com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    295:295:com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findReferenceDeserializer
    303:303:com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    312:312:com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    321:321:com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    330:330:com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    340:340:com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    350:350:com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
com.fasterxml.jackson.databind.deser.KeyDeserializers -> com.fasterxml.jackson.databind.deser.r:
# {"fileName":"KeyDeserializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.deser.NullValueProvider -> com.fasterxml.jackson.databind.deser.s:
# {"fileName":"NullValueProvider.java","id":"sourceFile"}
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    52:52:java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
com.fasterxml.jackson.databind.deser.ResolvableDeserializer -> com.fasterxml.jackson.databind.deser.t:
# {"fileName":"ResolvableDeserializer.java","id":"sourceFile"}
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
com.fasterxml.jackson.databind.deser.SettableAnyProperty -> com.fasterxml.jackson.databind.deser.u:
# {"fileName":"SettableAnyProperty.java","id":"sourceFile"}
    long serialVersionUID -> h
    com.fasterxml.jackson.databind.BeanProperty _property -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _setter -> b
    boolean _setterIsField -> c
    com.fasterxml.jackson.databind.JavaType _type -> d
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> e
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> f
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> g
    65:73:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    83:83:com.fasterxml.jackson.databind.deser.SettableAnyProperty constructForMethod(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> constructForMethod
    96:104:com.fasterxml.jackson.databind.deser.SettableAnyProperty constructForMapField(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> constructForMapField
    115:117:com.fasterxml.jackson.databind.deser.SettableAnyProperty constructForJsonNodeField(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> constructForJsonNodeField
    com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    124:126:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    139:142:java.lang.Object readResolve() -> readResolve
    151:151:com.fasterxml.jackson.databind.BeanProperty getProperty() -> getProperty
    153:153:boolean hasValueDeserializer() -> hasValueDeserializer
    155:155:com.fasterxml.jackson.databind.JavaType getType() -> getType
    160:160:java.lang.String getPropertyName() -> getPropertyName
    177:188:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    192:198:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    205:211:void set(java.lang.Object,java.lang.Object,java.lang.Object) -> set
    void _set(java.lang.Object,java.lang.Object,java.lang.Object) -> _set
    229:246:void _throwAsIOE(java.lang.Exception,java.lang.Object,java.lang.Object) -> _throwAsIOE
    249:249:java.lang.String getClassName() -> getClassName
    251:251:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring -> com.fasterxml.jackson.databind.deser.u$a:
# {"fileName":"SettableAnyProperty.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _parent -> a
    java.lang.Object _pojo -> b
    java.lang.String _propName -> c
    261:265:void <init>(com.fasterxml.jackson.databind.deser.SettableAnyProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object,java.lang.String) -> <init>
    271:276:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.SettableAnyProperty$JsonNodeFieldAnyProperty -> com.fasterxml.jackson.databind.deser.u$b:
# {"fileName":"SettableAnyProperty.java","id":"sourceFile"}
    long serialVersionUID -> i
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> h
    387:389:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    397:398:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    404:404:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    409:410:void _set(java.lang.Object,java.lang.Object,java.lang.Object) -> _set
    415:432:void setProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> setProperty
    437:437:com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MapFieldAnyProperty -> com.fasterxml.jackson.databind.deser.u$c:
# {"fileName":"SettableAnyProperty.java","id":"sourceFile"}
    long serialVersionUID -> i
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> h
    330:333:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    337:337:com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    346:355:void _set(java.lang.Object,java.lang.Object,java.lang.Object) -> _set
    362:369:java.util.Map _createAndSetMap(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.Object,java.lang.Object) -> _createAndSetMap
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MethodAnyProperty -> com.fasterxml.jackson.databind.deser.u$d:
# {"fileName":"SettableAnyProperty.java","id":"sourceFile"}
    long serialVersionUID -> h
    297:299:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    305:306:void _set(java.lang.Object,java.lang.Object,java.lang.Object) -> _set
    310:310:com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.SettableBeanProperty -> com.fasterxml.jackson.databind.deser.v:
# {"fileName":"SettableBeanProperty.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonDeserializer MISSING_VALUE_DESERIALIZER -> h
    com.fasterxml.jackson.databind.PropertyName _propName -> i
    com.fasterxml.jackson.databind.JavaType _type -> j
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> k
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> l
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> m
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> n
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> o
    java.lang.String _managedReferenceName -> p
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> q
    com.fasterxml.jackson.databind.util.ViewMatcher _viewMatcher -> r
    int _propertyIndex -> s
    136:138:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations) -> <init>
    125:167:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    125:192:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    125:211:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    125:241:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    125:260:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    290:292:com.fasterxml.jackson.databind.deser.SettableBeanProperty withSimpleName(java.lang.String) -> withSimpleName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    301:302:void setManagedReferenceName(java.lang.String) -> setManagedReferenceName
    305:306:void setObjectIdInfo(com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> setObjectIdInfo
    309:314:void setViews(java.lang.Class[]) -> setViews
    320:324:void assignIndex(int) -> assignIndex
    335:335:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    340:340:void markAsIgnorable() -> markAsIgnorable
    345:345:boolean isIgnorable() -> isIgnorable
    355:355:java.lang.String getName() -> getName
    360:360:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    364:364:com.fasterxml.jackson.databind.JavaType getType() -> getType
    368:368:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    379:379:java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    387:392:void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    401:401:java.lang.Class getDeclaringClass() -> getDeclaringClass
    404:404:java.lang.String getManagedReferenceName() -> getManagedReferenceName
    406:406:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    409:409:boolean hasValueDeserializer() -> hasValueDeserializer
    412:412:boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    415:419:com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    422:422:com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    427:427:com.fasterxml.jackson.databind.deser.NullValueProvider getNullValueProvider() -> getNullValueProvider
    430:430:boolean visibleInView(java.lang.Class) -> visibleInView
    433:433:boolean hasViews() -> hasViews
    442:442:int getPropertyIndex() -> getPropertyIndex
    452:454:int getCreatorIndex() -> getCreatorIndex
    461:461:java.lang.Object getInjectableValueId() -> getInjectableValueId
    473:473:boolean isInjectionOnly() -> isInjectionOnly
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    538:549:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    560:586:java.lang.Object deserializeWith(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWith
    601:619:void _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception,java.lang.Object) -> _throwAsIOE
    626:630:java.io.IOException _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception) -> _throwAsIOE
    635:635:java.io.IOException _throwAsIOE(java.lang.Exception) -> _throwAsIOE
    641:642:void _throwAsIOE(java.lang.Exception,java.lang.Object) -> _throwAsIOE
    644:644:java.lang.String toString() -> toString
    36:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating -> com.fasterxml.jackson.databind.deser.v$a:
# {"fileName":"SettableBeanProperty.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.SettableBeanProperty delegate -> c
    668:670:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    679:682:com.fasterxml.jackson.databind.deser.SettableBeanProperty _with(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _with
    687:687:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    692:692:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    697:697:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    702:703:void assignIndex(int) -> assignIndex
    707:708:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    717:717:java.lang.Class getDeclaringClass() -> getDeclaringClass
    720:720:java.lang.String getManagedReferenceName() -> getManagedReferenceName
    723:723:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    726:726:boolean hasValueDeserializer() -> hasValueDeserializer
    729:729:boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    732:732:com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    735:735:com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    738:738:boolean visibleInView(java.lang.Class) -> visibleInView
    741:741:boolean hasViews() -> hasViews
    744:744:int getPropertyIndex() -> getPropertyIndex
    747:747:int getCreatorIndex() -> getCreatorIndex
    750:750:java.lang.Object getInjectableValueId() -> getInjectableValueId
    753:753:boolean isInjectionOnly() -> isInjectionOnly
    757:757:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    762:762:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    772:772:com.fasterxml.jackson.databind.deser.SettableBeanProperty getDelegate() -> getDelegate
    784:785:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    791:791:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    796:797:void set(java.lang.Object,java.lang.Object) -> set
    801:801:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference -> com.fasterxml.jackson.databind.deser.w:
# {"fileName":"UnresolvedForwardReference.java","id":"sourceFile"}
    long serialVersionUID -> e
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid -> f
    java.util.List _unresolvedIds -> g
    28:30:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId) -> <init>
    36:38:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    47:47:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId getRoid() -> getRoid
    51:51:java.lang.Object getUnresolvedId() -> getUnresolvedId
    55:56:void addUnresolvedId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation) -> addUnresolvedId
    59:59:java.util.List getUnresolvedIds() -> getUnresolvedIds
    65:80:java.lang.String getMessage() -> getMessage
    94:94:com.fasterxml.jackson.databind.deser.UnresolvedForwardReference fillInStackTrace() -> fillInStackTrace
    104:105:com.fasterxml.jackson.databind.deser.UnresolvedForwardReference withStackTrace() -> withStackTrace
    19:19:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.fasterxml.jackson.databind.deser.UnresolvedId -> com.fasterxml.jackson.databind.deser.x:
# {"fileName":"UnresolvedId.java","id":"sourceFile"}
    java.lang.Object _id -> a
    com.fasterxml.jackson.core.JsonLocation _location -> b
    java.lang.Class _type -> c
    16:20:void <init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation) -> <init>
    25:25:java.lang.Object getId() -> getId
    30:30:java.lang.Class getType() -> getType
    31:31:com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    35:36:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.ValueInstantiator -> com.fasterxml.jackson.databind.deser.y:
# {"fileName":"ValueInstantiator.java","id":"sourceFile"}
    35:35:void <init>() -> <init>
    73:73:com.fasterxml.jackson.databind.deser.ValueInstantiator createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> createContextual
    93:93:java.lang.Class getValueClass() -> getValueClass
    101:105:java.lang.String getValueTypeDesc() -> getValueTypeDesc
    114:118:boolean canInstantiate() -> canInstantiate
    128:128:boolean canCreateFromString() -> canCreateFromString
    134:134:boolean canCreateFromInt() -> canCreateFromInt
    140:140:boolean canCreateFromLong() -> canCreateFromLong
    146:146:boolean canCreateFromBigInteger() -> canCreateFromBigInteger
    152:152:boolean canCreateFromDouble() -> canCreateFromDouble
    158:158:boolean canCreateFromBigDecimal() -> canCreateFromBigDecimal
    164:164:boolean canCreateFromBoolean() -> canCreateFromBoolean
    172:172:boolean canCreateUsingDefault() -> canCreateUsingDefault
    179:179:boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    188:188:boolean canCreateUsingArrayDelegate() -> canCreateUsingArrayDelegate
    195:195:boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    208:208:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    218:218:com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    229:229:com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getArrayDelegateType
    248:248:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    262:262:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    275:275:java.lang.Object createUsingDefaultOrWithoutArguments(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefaultOrWithoutArguments
    301:301:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> createFromObjectWith
    309:309:java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    318:318:java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingArrayDelegate
    330:330:java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    337:339:java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    343:345:java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    350:350:java.lang.Object createFromBigInteger(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigInteger) -> createFromBigInteger
    357:359:java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    364:364:java.lang.Object createFromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigDecimal) -> createFromBigDecimal
    371:373:java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    392:392:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    402:402:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    412:412:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> getArrayDelegateCreator
    423:423:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
    441:464:java.lang.Object _createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _createFromStringFallbacks
com.fasterxml.jackson.databind.deser.ValueInstantiator$Base -> com.fasterxml.jackson.databind.deser.y$a:
# {"fileName":"ValueInstantiator.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.lang.Class _valueType -> a
    486:488:void <init>(java.lang.Class) -> <init>
    490:492:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    496:496:java.lang.String getValueTypeDesc() -> getValueTypeDesc
    501:501:java.lang.Class getValueClass() -> getValueClass
com.fasterxml.jackson.databind.deser.ValueInstantiator$Delegating -> com.fasterxml.jackson.databind.deser.y$b:
# {"fileName":"ValueInstantiator.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.deser.ValueInstantiator _delegate -> a
    518:520:void <init>(com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    526:527:com.fasterxml.jackson.databind.deser.ValueInstantiator createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> createContextual
    530:530:com.fasterxml.jackson.databind.deser.ValueInstantiator delegate() -> delegate
    533:533:java.lang.Class getValueClass() -> getValueClass
    536:536:java.lang.String getValueTypeDesc() -> getValueTypeDesc
    539:539:boolean canInstantiate() -> canInstantiate
    542:542:boolean canCreateFromString() -> canCreateFromString
    544:544:boolean canCreateFromInt() -> canCreateFromInt
    546:546:boolean canCreateFromLong() -> canCreateFromLong
    548:548:boolean canCreateFromDouble() -> canCreateFromDouble
    550:550:boolean canCreateFromBoolean() -> canCreateFromBoolean
    552:552:boolean canCreateUsingDefault() -> canCreateUsingDefault
    554:554:boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    556:556:boolean canCreateUsingArrayDelegate() -> canCreateUsingArrayDelegate
    558:558:boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    562:562:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    567:567:com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    572:572:com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getArrayDelegateType
    583:583:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    588:588:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    595:595:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> createFromObjectWith
    600:600:java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    605:605:java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingArrayDelegate
    610:610:java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    615:615:java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    620:620:java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    625:625:java.lang.Object createFromBigInteger(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigInteger) -> createFromBigInteger
    630:630:java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    635:635:java.lang.Object createFromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigDecimal) -> createFromBigDecimal
    640:640:java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    650:650:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    653:653:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    656:656:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> getArrayDelegateCreator
    659:659:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable -> com.fasterxml.jackson.databind.deser.y$c:
# {"fileName":"ValueInstantiator.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
com.fasterxml.jackson.databind.deser.ValueInstantiators -> com.fasterxml.jackson.databind.deser.z:
# {"fileName":"ValueInstantiators.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.ValueInstantiators$Base -> com.fasterxml.jackson.databind.deser.z$a:
# {"fileName":"ValueInstantiators.java","id":"sourceFile"}
    39:39:void <init>() -> <init>
    44:44:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer -> com.fasterxml.jackson.databind.deser.impl.a:
# {"fileName":"BeanAsArrayBuilderDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> D
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> a
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> w
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> x
    com.fasterxml.jackson.databind.JavaType _targetType -> y
    56:61:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    70:70:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    75:75:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    82:82:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    88:88:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    94:94:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    100:100:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    112:112:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    125:127:java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> finishBuild
    136:177:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    185:185:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    192:192:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    211:255:java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeNonVanilla
    271:341:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    354:356:java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromNonArray
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer -> com.fasterxml.jackson.databind.deser.impl.b:
# {"fileName":"BeanAsArrayDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> x
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> a
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> w
    48:51:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> <init>
    60:60:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    65:65:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    72:72:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    78:78:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnoreAllUnknown(boolean) -> withIgnoreAllUnknown
    84:84:com.fasterxml.jackson.databind.deser.BeanDeserializerBase withBeanProperties(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> withBeanProperties
    90:90:com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    104:147:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    155:201:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    209:209:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    225:272:java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeNonVanilla
    287:362:java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    374:377:java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromNonArray
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap -> com.fasterxml.jackson.databind.deser.impl.c:
# {"fileName":"BeanPropertyMap.java","id":"sourceFile"}
    long serialVersionUID -> b
    boolean _caseInsensitive -> a
    int _hashMask -> c
    int _size -> d
    int _spillCount -> e
    java.lang.Object[] _hashArea -> f
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propsInOrder -> g
    java.util.Map _aliasDefs -> h
    java.util.Map _aliasMapping -> i
    java.util.Locale _locale -> j
    98:106:void <init>(boolean,java.util.Collection,java.util.Map,java.util.Locale) -> <init>
    114:115:void <init>(boolean,java.util.Collection,java.util.Map) -> <init>
    123:138:void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int,int) -> <init>
    146:181:void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,int) -> <init>
    187:196:void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean) -> <init>
    206:209:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withCaseInsensitivity(boolean) -> withCaseInsensitivity
    214:255:void init(java.util.Collection) -> init
    259:270:int findSize(int) -> findSize
    280:282:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap construct(com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Collection,java.util.Map,boolean) -> construct
    293:295:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap construct(com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Collection,java.util.Map) -> construct
    304:304:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap construct(java.util.Collection,boolean,java.util.Map) -> construct
    317:328:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withProperty
    334:341:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap assignIndexes() -> assignIndexes
    350:369:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> renameAll
    387:387:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withoutProperties(java.util.Collection) -> withoutProperties
    400:418:com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withoutProperties(java.util.Collection,java.util.Collection) -> withoutProperties
    430:443:void replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> replace
    451:476:void remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> remove
    484:484:int size() -> size
    490:490:boolean isCaseInsensitive() -> isCaseInsensitive
    497:497:boolean hasAliases() -> hasAliases
    505:505:java.util.Iterator iterator() -> iterator
    509:516:java.util.List _properties() -> _properties
    528:528:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getPropertiesInInsertionOrder() -> getPropertiesInInsertionOrder
    534:534:java.lang.String getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> getPropertyName
    550:556:com.fasterxml.jackson.databind.deser.SettableBeanProperty find(int) -> find
    561:578:com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String) -> find
    583:604:com.fasterxml.jackson.databind.deser.SettableBeanProperty _find2(java.lang.String,int,java.lang.Object) -> _find2
    609:623:com.fasterxml.jackson.databind.deser.SettableBeanProperty _findWithAlias(java.lang.String) -> _findWithAlias
    629:644:com.fasterxml.jackson.databind.deser.SettableBeanProperty _find2ViaAlias(java.lang.String,int,java.lang.Object) -> _find2ViaAlias
    665:674:boolean findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> findDeserializeAndSet
    686:707:java.lang.String toString() -> toString
    718:732:com.fasterxml.jackson.databind.deser.SettableBeanProperty _rename(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.NameTransformer) -> _rename
    739:754:void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    793:798:int _findFromOrdered(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findFromOrdered
    812:812:int _hashCode(java.lang.String) -> _hashCode
    819:836:java.util.Map _buildAliasMapping(java.util.Map,boolean,java.util.Locale) -> _buildAliasMapping
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate -> com.fasterxml.jackson.databind.deser.impl.d:
# {"fileName":"CreatorCandidate.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _creator -> b
    int _paramCount -> c
    com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[] _params -> d
    18:23:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[],int) -> <init>
    28:35:com.fasterxml.jackson.databind.deser.impl.CreatorCandidate construct(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition[]) -> construct
    38:38:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams creator() -> creator
    39:39:int paramCount() -> paramCount
    40:40:com.fasterxml.jackson.annotation.JacksonInject$Value injection(int) -> injection
    41:41:com.fasterxml.jackson.databind.introspect.AnnotatedParameter parameter(int) -> parameter
    42:42:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propertyDef(int) -> propertyDef
    45:49:com.fasterxml.jackson.databind.PropertyName paramName(int) -> paramName
    53:59:com.fasterxml.jackson.databind.PropertyName explicitParamName(int) -> explicitParamName
    63:67:com.fasterxml.jackson.databind.PropertyName findImplicitParamName(int) -> findImplicitParamName
    77:86:int findOnlyParamWithoutInjection() -> findOnlyParamWithoutInjection
    91:91:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param -> com.fasterxml.jackson.databind.deser.impl.d$a:
# {"fileName":"CreatorCandidate.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter annotated -> a
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propDef -> b
    com.fasterxml.jackson.annotation.JacksonInject$Value injection -> c
    101:105:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.annotation.JacksonInject$Value) -> <init>
    108:111:com.fasterxml.jackson.databind.PropertyName fullName() -> fullName
    115:119:boolean hasFullName() -> hasFullName
com.fasterxml.jackson.databind.deser.impl.CreatorCollector -> com.fasterxml.jackson.databind.deser.impl.e:
# {"fileName":"CreatorCollector.java","id":"sourceFile"}
    int C_DEFAULT -> a
    int C_STRING -> b
    int C_INT -> c
    int C_LONG -> d
    int C_BIG_INTEGER -> e
    int C_DOUBLE -> f
    int C_BIG_DECIMAL -> g
    int C_BOOLEAN -> h
    int C_DELEGATE -> i
    int C_PROPS -> j
    int C_ARRAY_DELEGATE -> k
    java.lang.String[] TYPE_DESCS -> l
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> m
    boolean _canFixAccess -> n
    boolean _forceAccess -> o
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams[] _creators -> p
    int _explicitCreators -> q
    boolean _hasNonDefaultCreator -> r
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArgs -> s
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArgs -> t
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propertyBasedArgs -> u
    54:85:void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.cfg.MapperConfig) -> <init>
    90:110:com.fasterxml.jackson.databind.deser.ValueInstantiator constructValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext) -> constructValueInstantiator
    130:131:void setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> setDefaultCreator
    134:135:void addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addStringCreator
    138:139:void addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addIntCreator
    142:143:void addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addLongCreator
    146:147:void addBigIntegerCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addBigIntegerCreator
    150:151:void addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addDoubleCreator
    154:155:void addBigDecimalCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addBigDecimalCreator
    158:159:void addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean) -> addBooleanCreator
    165:174:void addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],int) -> addDelegatingCreator
    179:200:void addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,boolean,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> addPropertyCreator
    212:212:boolean hasDefaultCreator() -> hasDefaultCreator
    219:219:boolean hasDelegatingCreator() -> hasDelegatingCreator
    226:226:boolean hasPropertyBasedCreator() -> hasPropertyBasedCreator
    239:273:com.fasterxml.jackson.databind.JavaType _computeDelegateType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> _computeDelegateType
    277:281:com.fasterxml.jackson.databind.introspect.AnnotatedMember _fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _fixAccess
    289:358:boolean verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,int,boolean) -> verifyNonDup
    364:364:void _reportDuplicateCreator(int,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> _reportDuplicateCreator
    378:379:boolean _isEnumValueOf(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> _isEnumValueOf
    32:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer -> com.fasterxml.jackson.databind.deser.impl.f:
# {"fileName":"ErrorThrowingDeserializer.java","id":"sourceFile"}
    java.lang.Error _cause -> a
    21:23:void <init>(java.lang.NoClassDefFoundError) -> <init>
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler -> com.fasterxml.jackson.databind.deser.impl.g:
# {"fileName":"ExternalTypeHandler.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType _beanType -> a
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> b
    java.util.Map _nameToPropertyIndex -> c
    java.lang.String[] _typeIds -> d
    com.fasterxml.jackson.databind.util.TokenBuffer[] _tokens -> e
    40:46:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[],java.util.Map,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[]) -> <init>
    49:56:void <init>(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler) -> <init>
    62:62:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder builder(com.fasterxml.jackson.databind.JavaType) -> builder
    70:70:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler start() -> start
    85:102:boolean handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> handleTypePropertyValue
    109:123:boolean _handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object,java.lang.String,int) -> _handleTypePropertyValue
    138:193:boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> handlePropertyValue
    204:253:java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> complete
    265:337:java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> complete
    344:359:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String) -> _deserialize
    367:375:java.lang.Object _deserializeMissingToken(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String) -> _deserializeMissingToken
    383:406:void _deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String) -> _deserializeAndSet
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder -> com.fasterxml.jackson.databind.deser.impl.g$a:
# {"fileName":"ExternalTypeHandler.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType _beanType -> a
    java.util.List _properties -> b
    java.util.Map _nameToPropertyIndex -> c
    418:423:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    427:431:void addExternal(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> addExternal
    434:447:void _addPropertyIndex(java.lang.String,java.lang.Integer) -> _addPropertyIndex
    458:469:com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler build(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> build
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty -> com.fasterxml.jackson.databind.deser.impl.g$b:
# {"fileName":"ExternalTypeHandler.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> a
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> b
    java.lang.String _typePropertyName -> c
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _typeProperty -> d
    486:490:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    496:497:void linkTypeProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> linkTypeProperty
    500:500:boolean hasTypePropertyName(java.lang.String) -> hasTypePropertyName
    504:504:boolean hasDefaultType() -> hasDefaultType
    513:517:java.lang.String getDefaultTypeId() -> getDefaultTypeId
    520:520:java.lang.String getTypePropertyName() -> getTypePropertyName
    523:523:com.fasterxml.jackson.databind.deser.SettableBeanProperty getProperty() -> getProperty
    530:530:com.fasterxml.jackson.databind.deser.SettableBeanProperty getTypeProperty() -> getTypeProperty
com.fasterxml.jackson.databind.deser.impl.FailingDeserializer -> com.fasterxml.jackson.databind.deser.impl.h:
# {"fileName":"FailingDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.lang.String _message -> a
    22:23:void <init>(java.lang.String) -> <init>
    27:29:void <init>(java.lang.Class,java.lang.String) -> <init>
    33:34:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.impl.FieldProperty -> com.fasterxml.jackson.databind.deser.impl.i:
# {"fileName":"FieldProperty.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedField _annotated -> c
    java.lang.reflect.Field _field -> d
    boolean _skipNulls -> e
    46:50:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedField) -> <init>
    54:58:void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    61:65:void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    72:80:void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty) -> <init>
    84:84:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    89:94:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    99:99:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    104:106:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    116:116:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    119:119:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    132:154:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    161:183:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    190:195:void set(java.lang.Object,java.lang.Object) -> set
    201:206:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    216:216:java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty -> com.fasterxml.jackson.databind.deser.impl.j:
# {"fileName":"InnerClassProperty.java","id":"sourceFile"}
    long serialVersionUID -> f
    java.lang.reflect.Constructor _creator -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _annotated -> e
    39:41:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.reflect.Constructor) -> <init>
    49:55:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor) -> <init>
    59:62:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    75:93:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    99:99:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    114:114:java.lang.Object readResolve() -> readResolve
    119:122:java.lang.Object writeReplace() -> writeReplace
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators -> com.fasterxml.jackson.databind.deser.impl.k:
# {"fileName":"JDKValueInstantiators.java","id":"sourceFile"}
    20:20:void <init>() -> <init>
    25:51:com.fasterxml.jackson.databind.deser.ValueInstantiator findStdValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> findStdValueInstantiator
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ArrayListInstantiator -> com.fasterxml.jackson.databind.deser.impl.k$a:
# {"fileName":"JDKValueInstantiators.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ArrayListInstantiator INSTANCE -> b
    62:63:void <init>() -> <init>
    66:66:boolean canInstantiate() -> canInstantiate
    69:69:boolean canCreateUsingDefault() -> canCreateUsingDefault
    73:73:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    60:60:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ConstantValueInstantiator -> com.fasterxml.jackson.databind.deser.impl.k$b:
# {"fileName":"JDKValueInstantiators.java","id":"sourceFile"}
    long serialVersionUID -> c
    java.lang.Object _value -> b
    134:136:void <init>(java.lang.Object) -> <init>
    139:139:boolean canInstantiate() -> canInstantiate
    142:142:boolean canCreateUsingDefault() -> canCreateUsingDefault
    146:146:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashMapInstantiator -> com.fasterxml.jackson.databind.deser.impl.k$c:
# {"fileName":"JDKValueInstantiators.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashMapInstantiator INSTANCE -> b
    86:87:void <init>() -> <init>
    90:90:boolean canInstantiate() -> canInstantiate
    93:93:boolean canCreateUsingDefault() -> canCreateUsingDefault
    97:97:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    83:83:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedHashMapInstantiator -> com.fasterxml.jackson.databind.deser.impl.k$d:
# {"fileName":"JDKValueInstantiators.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedHashMapInstantiator INSTANCE -> b
    110:111:void <init>() -> <init>
    114:114:boolean canInstantiate() -> canInstantiate
    117:117:boolean canCreateUsingDefault() -> canCreateUsingDefault
    121:121:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    107:107:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers -> com.fasterxml.jackson.databind.deser.impl.l:
# {"fileName":"JavaUtilCollectionsDeserializers.java","id":"sourceFile"}
    int TYPE_SINGLETON_SET -> b
    int TYPE_SINGLETON_LIST -> c
    int TYPE_SINGLETON_MAP -> d
    int TYPE_UNMODIFIABLE_SET -> e
    int TYPE_UNMODIFIABLE_LIST -> f
    int TYPE_UNMODIFIABLE_MAP -> g
    int TYPE_SYNC_SET -> h
    int TYPE_SYNC_COLLECTION -> i
    int TYPE_SYNC_LIST -> j
    int TYPE_SYNC_MAP -> k
    int TYPE_AS_LIST -> a
    java.lang.String PREFIX_JAVA_UTIL_COLLECTIONS -> l
    java.lang.String PREFIX_JAVA_UTIL_ARRAYS -> m
    java.lang.String PREFIX_JAVA_UTIL_IMMUTABLE_COLL -> n
    18:18:void <init>() -> <init>
    45:106:com.fasterxml.jackson.databind.JsonDeserializer findForCollection(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> findForCollection
    113:139:com.fasterxml.jackson.databind.JsonDeserializer findForMap(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> findForMap
    145:145:com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter converter(int,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> converter
    149:152:java.lang.String _findUtilArrayTypeName(java.lang.String) -> _findUtilArrayTypeName
    156:159:java.lang.String _findUtilCollectionsTypeName(java.lang.String) -> _findUtilCollectionsTypeName
    163:166:java.lang.String _findUtilCollectionsImmutableTypeName(java.lang.String) -> _findUtilCollectionsImmutableTypeName
    170:170:java.lang.String _findSingletonTypeName(java.lang.String) -> _findSingletonTypeName
    174:174:java.lang.String _findSyncTypeName(java.lang.String) -> _findSyncTypeName
    178:178:java.lang.String _findUnmodifiableTypeName(java.lang.String) -> _findUnmodifiableTypeName
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter -> com.fasterxml.jackson.databind.deser.impl.l$a:
# {"fileName":"JavaUtilCollectionsDeserializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType _inputType -> a
    int _kind -> b
    192:195:void <init>(int,com.fasterxml.jackson.databind.JavaType) -> <init>
    199:243:java.lang.Object convert(java.lang.Object) -> convert
    249:249:com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getInputType
    255:255:com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getOutputType
    259:263:void _checkSingleton(int) -> _checkSingleton
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty -> com.fasterxml.jackson.databind.deser.impl.m:
# {"fileName":"ManagedReferenceProperty.java","id":"sourceFile"}
    long serialVersionUID -> g
    java.lang.String _referenceName -> d
    boolean _isContainer -> e
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _backProperty -> f
    35:39:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> <init>
    43:43:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    49:51:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    62:63:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    68:68:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    73:74:void set(java.lang.Object,java.lang.Object) -> set
    82:105:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty -> com.fasterxml.jackson.databind.deser.impl.n:
# {"fileName":"MergingSettableBeanProperty.java","id":"sourceFile"}
    long serialVersionUID -> e
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> d
    41:43:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> <init>
    48:50:void <init>(com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    55:55:com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty construct(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> construct
    60:60:com.fasterxml.jackson.databind.deser.SettableBeanProperty withDelegate(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withDelegate
    73:87:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    93:112:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    119:122:void set(java.lang.Object,java.lang.Object) -> set
    128:131:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.MethodProperty -> com.fasterxml.jackson.databind.deser.impl.o:
# {"fileName":"MethodProperty.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> c
    java.lang.reflect.Method _setter -> d
    boolean _skipNulls -> e
    42:46:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    50:54:void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    57:61:void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    67:71:void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,java.lang.reflect.Method) -> <init>
    75:75:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    80:85:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    90:90:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    95:97:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    107:107:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    110:110:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    123:145:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    152:174:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    182:187:void set(java.lang.Object,java.lang.Object) -> set
    193:198:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    209:209:java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider -> com.fasterxml.jackson.databind.deser.impl.p:
# {"fileName":"NullsAsEmptyProvider.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> a
    18:20:void <init>(com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    24:24:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    30:30:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider -> com.fasterxml.jackson.databind.deser.impl.q:
# {"fileName":"NullsConstantProvider.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider SKIPPER -> d
    com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider NULLER -> e
    java.lang.Object _nullValue -> a
    com.fasterxml.jackson.databind.util.AccessPattern _access -> b
    27:31:void <init>(java.lang.Object) -> <init>
    40:40:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider skipper() -> skipper
    44:44:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider nuller() -> nuller
    48:51:com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider forValue(java.lang.Object) -> forValue
    60:60:boolean isSkipper(com.fasterxml.jackson.databind.deser.NullValueProvider) -> isSkipper
    69:69:boolean isNuller(com.fasterxml.jackson.databind.deser.NullValueProvider) -> isNuller
    74:74:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    79:79:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    19:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider -> com.fasterxml.jackson.databind.deser.impl.r:
# {"fileName":"NullsFailProvider.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.PropertyName _name -> a
    com.fasterxml.jackson.databind.JavaType _type -> b
    20:23:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType) -> <init>
    26:26:com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(com.fasterxml.jackson.databind.BeanProperty) -> constructForProperty
    31:31:com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForProperty(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> constructForProperty
    35:35:com.fasterxml.jackson.databind.deser.impl.NullsFailProvider constructForRootValue(com.fasterxml.jackson.databind.JavaType) -> constructForRootValue
    41:41:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    47:47:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader -> com.fasterxml.jackson.databind.deser.impl.s:
# {"fileName":"ObjectIdReader.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.JavaType _idType -> a
    com.fasterxml.jackson.databind.PropertyName propertyName -> b
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> c
    com.fasterxml.jackson.annotation.ObjectIdResolver resolver -> d
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> e
    com.fasterxml.jackson.databind.deser.SettableBeanProperty idProperty -> f
    50:57:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver) -> <init>
    68:68:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver) -> construct
    78:78:com.fasterxml.jackson.databind.JsonDeserializer getDeserializer() -> getDeserializer
    82:82:com.fasterxml.jackson.databind.JavaType getIdType() -> getIdType
    97:97:boolean maySerializeAsObject() -> maySerializeAsObject
    112:112:boolean isValidReferencePropertyName(java.lang.String,com.fasterxml.jackson.core.JsonParser) -> isValidReferencePropertyName
    122:122:java.lang.Object readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> readObjectReference
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty -> com.fasterxml.jackson.databind.deser.impl.t:
# {"fileName":"ObjectIdReferenceProperty.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _forward -> d
    23:26:void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> <init>
    31:34:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    38:41:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    45:45:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    50:55:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    60:60:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    65:68:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    72:72:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    77:77:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    82:82:int getCreatorIndex() -> getCreatorIndex
    87:88:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    94:101:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    107:108:void set(java.lang.Object,java.lang.Object) -> set
    112:112:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring -> com.fasterxml.jackson.databind.deser.impl.t$a:
# {"fileName":"ObjectIdReferenceProperty.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty _parent -> b
    java.lang.Object _pojo -> a
    122:125:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object) -> <init>
    130:135:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty -> com.fasterxml.jackson.databind.deser.impl.u:
# {"fileName":"ObjectIdValueProperty.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> c
    27:30:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    35:37:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    40:42:void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    46:46:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    51:56:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    61:61:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    68:68:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    71:71:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    83:84:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    96:107:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    112:113:void set(java.lang.Object,java.lang.Object) -> set
    118:123:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator -> com.fasterxml.jackson.databind.deser.impl.v:
# {"fileName":"PropertyBasedCreator.java","id":"sourceFile"}
    int _propertyCount -> a
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> b
    java.util.HashMap _propertyLookup -> c
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _allProperties -> d
    58:93:void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean,boolean) -> <init>
    106:120:com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap) -> construct
    139:148:com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],boolean) -> construct
    157:158:com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> construct
    168:168:java.util.Collection properties() -> properties
    172:172:com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> findCreatorProperty
    176:181:com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(int) -> findCreatorProperty
    197:197:com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> startBuilding
    202:214:java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> build
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap -> com.fasterxml.jackson.databind.deser.impl.v$a:
# {"fileName":"PropertyBasedCreator.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.util.Locale _locale -> a
    242:243:void <init>() -> <init>
    246:248:void <init>(java.util.Locale) -> <init>
    252:252:com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap construct(java.util.Locale) -> construct
    257:257:com.fasterxml.jackson.databind.deser.SettableBeanProperty get(java.lang.Object) -> get
    262:263:com.fasterxml.jackson.databind.deser.SettableBeanProperty put(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> put
    229:229:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    229:229:java.lang.Object get(java.lang.Object) -> get
com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator -> com.fasterxml.jackson.databind.deser.impl.w:
# {"fileName":"PropertyBasedObjectIdGenerator.java","id":"sourceFile"}
    long serialVersionUID -> b
    13:14:void <init>(java.lang.Class) -> <init>
    18:18:java.lang.Object generateId(java.lang.Object) -> generateId
    23:23:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    28:28:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    33:37:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
com.fasterxml.jackson.databind.deser.impl.PropertyValue -> com.fasterxml.jackson.databind.deser.impl.x:
# {"fileName":"PropertyValue.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.impl.PropertyValue next -> a
    java.lang.Object value -> b
    22:25:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object) -> <init>
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any -> com.fasterxml.jackson.databind.deser.impl.x$a:
# {"fileName":"PropertyValue.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _property -> c
    java.lang.String _propertyName -> d
    80:83:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String) -> <init>
    89:90:void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map -> com.fasterxml.jackson.databind.deser.impl.x$b:
# {"fileName":"PropertyValue.java","id":"sourceFile"}
    java.lang.Object _key -> c
    104:106:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,java.lang.Object) -> <init>
    113:114:void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular -> com.fasterxml.jackson.databind.deser.impl.x$c:
# {"fileName":"PropertyValue.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> c
    52:54:void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> <init>
    60:61:void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer -> com.fasterxml.jackson.databind.deser.impl.y:
# {"fileName":"PropertyValueBuffer.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonParser _parser -> a
    com.fasterxml.jackson.databind.DeserializationContext _context -> b
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> c
    java.lang.Object[] _creatorParameters -> d
    int _paramsNeeded -> e
    int _paramsSeen -> f
    java.util.BitSet _paramsSeenBig -> g
    com.fasterxml.jackson.databind.deser.impl.PropertyValue _buffered -> h
    java.lang.Object _idValue -> i
    86:97:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> <init>
    107:110:boolean hasParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> hasParameter
    127:137:java.lang.Object getParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> getParameter
    151:179:java.lang.Object[] getParameters(com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> getParameters
    185:217:java.lang.Object _findMissing(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _findMissing
    235:239:boolean readIdProperty(java.lang.String) -> readIdProperty
    247:261:java.lang.Object handleIdValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> handleIdValue
    264:264:com.fasterxml.jackson.databind.deser.impl.PropertyValue buffered() -> buffered
    266:266:boolean isComplete() -> isComplete
    278:298:boolean assignParameter(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> assignParameter
    302:303:void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> bufferProperty
    306:307:void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> bufferAnyProperty
    310:311:void bufferMapProperty(java.lang.Object,java.lang.Object) -> bufferMapProperty
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId -> com.fasterxml.jackson.databind.deser.impl.z:
# {"fileName":"ReadableObjectId.java","id":"sourceFile"}
    java.lang.Object _item -> a
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey _key -> b
    java.util.LinkedList _referringProperties -> c
    com.fasterxml.jackson.annotation.ObjectIdResolver _resolver -> d
    32:34:void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey) -> <init>
    37:38:void setResolver(com.fasterxml.jackson.annotation.ObjectIdResolver) -> setResolver
    41:41:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey getKey() -> getKey
    45:49:void appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring) -> appendReferring
    57:67:void bindItem(java.lang.Object) -> bindItem
    70:70:java.lang.Object resolve() -> resolve
    74:74:boolean hasReferringProperties() -> hasReferringProperties
    78:81:java.util.Iterator referringProperties() -> referringProperties
    101:101:boolean tryToResolveUnresolved(com.fasterxml.jackson.databind.DeserializationContext) -> tryToResolveUnresolved
    114:114:com.fasterxml.jackson.annotation.ObjectIdResolver getResolver() -> getResolver
    119:119:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring -> com.fasterxml.jackson.databind.deser.impl.z$a:
# {"fileName":"ReadableObjectId.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference -> a
    java.lang.Class _beanType -> b
    132:135:void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class) -> <init>
    137:140:void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,com.fasterxml.jackson.databind.JavaType) -> <init>
    142:142:com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    143:143:java.lang.Class getBeanType() -> getBeanType
    void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
    147:147:boolean hasId(java.lang.Object) -> hasId
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty -> com.fasterxml.jackson.databind.deser.impl.aa:
# {"fileName":"SetterlessProperty.java","id":"sourceFile"}
    long serialVersionUID -> e
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> c
    java.lang.reflect.Method _getter -> d
    39:42:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    46:49:void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    52:55:void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.PropertyName) -> <init>
    59:59:com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    64:69:com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    74:74:com.fasterxml.jackson.databind.deser.SettableBeanProperty withNullProvider(com.fasterxml.jackson.databind.deser.NullValueProvider) -> withNullProvider
    79:81:void fixAccess(com.fasterxml.jackson.databind.DeserializationConfig) -> fixAccess
    91:91:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    94:94:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    106:135:void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    141:142:java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    147:147:void set(java.lang.Object,java.lang.Object) -> set
    153:154:java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer -> com.fasterxml.jackson.databind.deser.impl.ab:
# {"fileName":"TypeWrappedDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> a
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> b
    31:34:void <init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    38:38:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    43:43:java.lang.Class handledType() -> handledType
    48:48:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    53:53:com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    58:58:java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    63:63:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    68:68:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    74:74:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    82:82:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    92:92:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
com.fasterxml.jackson.databind.deser.impl.UnsupportedTypeDeserializer -> com.fasterxml.jackson.databind.deser.impl.ac:
# {"fileName":"UnsupportedTypeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.JavaType _type -> a
    java.lang.String _message -> b
    33:36:void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> <init>
    42:49:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler -> com.fasterxml.jackson.databind.deser.impl.ad:
# {"fileName":"UnwrappedPropertyHandler.java","id":"sourceFile"}
    java.util.List _properties -> a
    22:24:void <init>() -> <init>
    25:27:void <init>(java.util.List) -> <init>
    30:31:void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addProperty
    35:50:com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> renameAll
    58:64:java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> processUnwrapped
com.fasterxml.jackson.databind.deser.impl.ValueInjector -> com.fasterxml.jackson.databind.deser.impl.ae:
# {"fileName":"ValueInjector.java","id":"sourceFile"}
    long serialVersionUID -> i
    java.lang.Object _valueId -> h
    27:29:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> <init>
    39:40:void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> <init>
    45:45:java.lang.Object findValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> findValue
    51:52:void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> inject
com.fasterxml.jackson.databind.deser.impl.package-info -> com.fasterxml.jackson.databind.deser.impl.af:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.deser.package-info -> com.fasterxml.jackson.databind.deser.aa:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer -> com.fasterxml.jackson.databind.deser.std.a:
# {"fileName":"ArrayBlockingQueueDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> i
    33:34:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    45:47:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    54:55:void <init>(com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer) -> <init>
    66:66:com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    85:85:java.util.Collection createDefaultInstance(com.fasterxml.jackson.databind.DeserializationContext) -> createDefaultInstance
    94:101:java.util.Collection _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> _deserializeFromArray
    107:107:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    18:18:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer -> com.fasterxml.jackson.databind.deser.std.b:
# {"fileName":"AtomicBooleanDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    16:16:void <init>() -> <init>
    20:30:java.util.concurrent.atomic.AtomicBoolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    34:34:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    38:38:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    12:12:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.c:
# {"fileName":"AtomicIntegerDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    17:17:void <init>() -> <init>
    21:27:java.util.concurrent.atomic.AtomicInteger deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    31:31:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    35:35:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    13:13:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.AtomicLongDeserializer -> com.fasterxml.jackson.databind.deser.std.d:
# {"fileName":"AtomicLongDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    17:17:void <init>() -> <init>
    21:27:java.util.concurrent.atomic.AtomicLong deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    31:31:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    35:35:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    13:13:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer -> com.fasterxml.jackson.databind.deser.std.e:
# {"fileName":"AtomicReferenceDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> e
    26:27:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    37:37:com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    44:44:java.util.concurrent.atomic.AtomicReference getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    52:52:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    60:60:java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    65:65:java.util.concurrent.atomic.AtomicReference referenceValue(java.lang.Object) -> referenceValue
    70:70:java.lang.Object getReferenced(java.util.concurrent.atomic.AtomicReference) -> getReferenced
    75:76:java.util.concurrent.atomic.AtomicReference updateReference(java.util.concurrent.atomic.AtomicReference,java.lang.Object) -> updateReference
    82:82:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    9:9:java.lang.Object getReferenced(java.lang.Object) -> getReferenced
    9:9:java.lang.Object updateReference(java.lang.Object,java.lang.Object) -> updateReference
    9:9:java.lang.Object referenceValue(java.lang.Object) -> referenceValue
    9:9:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    9:9:com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer -> com.fasterxml.jackson.databind.deser.std.f:
# {"fileName":"JsonNodeDeserializer.java","id":"sourceFile"}
    java.lang.Boolean _supportsUpdates -> a
    boolean _mergeArrays -> b
    boolean _mergeObjects -> c
    257:261:void <init>(java.lang.Class,java.lang.Boolean) -> <init>
    266:270:void <init>(com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer,boolean,boolean) -> <init>
    278:278:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    283:283:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    290:290:boolean isCachable() -> isCachable
    294:294:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    304:317:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    321:327:boolean _shouldMerge(java.lang.Boolean,java.lang.Boolean) -> _shouldMerge
    com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean) -> _createWithMerge
    360:382:void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode) -> _handleDuplicateField
    397:423:com.fasterxml.jackson.databind.node.ObjectNode _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack) -> _deserializeObjectAtName
    436:520:com.fasterxml.jackson.databind.JsonNode updateObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack) -> updateObject
    529:655:com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode) -> _deserializeContainerNoRecursion
    662:684:com.fasterxml.jackson.databind.JsonNode _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeAnyScalar
    691:702:com.fasterxml.jackson.databind.JsonNode _deserializeRareScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeRareScalar
    708:721:com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,int,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromInt
    728:746:com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromInt
    753:768:com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> _fromFloat
    779:813:com.fasterxml.jackson.databind.JsonNode _fromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.math.BigDecimal) -> _fromBigDecimal
    819:838:com.fasterxml.jackson.databind.JsonNode _fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _fromEmbedded
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack -> com.fasterxml.jackson.databind.deser.std.f$a:
# {"fileName":"JsonNodeDeserializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.node.ContainerNode[] _stack -> a
    int _top -> b
    int _end -> c
    858:858:void <init>() -> <init>
    861:861:int size() -> size
    865:878:void push(com.fasterxml.jackson.databind.node.ContainerNode) -> push
    881:887:com.fasterxml.jackson.databind.node.ContainerNode popOrNull() -> popOrNull
com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.g:
# {"fileName":"ByteBufferDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    15:15:void <init>() -> <init>
    19:19:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    24:25:java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    31:34:java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.nio.ByteBuffer) -> deserialize
    11:11:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    11:11:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer -> com.fasterxml.jackson.databind.deser.std.h:
# {"fileName":"CollectionDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> i
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> a
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> b
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> c
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> d
    74:75:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    87:92:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    100:105:void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer) -> <init>
    117:117:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    127:127:boolean isCachable() -> isCachable
    135:135:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    154:207:com.fasterxml.jackson.databind.deser.std.CollectionDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    218:218:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    223:223:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    237:252:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    262:262:java.util.Collection createDefaultInstance(com.fasterxml.jackson.databind.DeserializationContext) -> createDefaultInstance
    271:274:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    283:283:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    296:330:java.util.Collection _deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _deserializeFromString
    341:378:java.util.Collection _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> _deserializeFromArray
    392:424:java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> handleNonArray
    432:469:java.util.Collection _deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> _deserializeWithObjectId
    28:28:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    28:28:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    28:28:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring -> com.fasterxml.jackson.databind.deser.std.h$a:
# {"fileName":"CollectionDeserializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator _parent -> b
    java.util.List next -> a
    537:544:void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class) -> <init>
    548:549:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator -> com.fasterxml.jackson.databind.deser.std.h$b:
# {"fileName":"CollectionDeserializer.java","id":"sourceFile"}
    java.lang.Class _elementType -> a
    java.util.Collection _result -> b
    java.util.List _accumulator -> c
    483:488:void <init>(java.lang.Class,java.util.Collection) -> <init>
    492:498:void add(java.lang.Object) -> add
    502:504:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    509:525:void resolveForwardReference(java.lang.Object,java.lang.Object) -> resolveForwardReference
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase -> com.fasterxml.jackson.databind.deser.std.i:
# {"fileName":"ContainerDeserializerBase.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType _containerType -> e
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> f
    boolean _skipNullValues -> g
    java.lang.Boolean _unwrapSingle -> h
    52:57:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    60:61:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    67:68:void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase) -> <init>
    75:80:void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    89:89:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    93:93:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    98:104:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    118:121:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    133:133:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    138:147:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    163:163:java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    176:191:java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
com.fasterxml.jackson.databind.deser.std.DateDeserializers -> com.fasterxml.jackson.databind.deser.std.j:
# {"fileName":"DateDeserializers.java","id":"sourceFile"}
    java.util.HashSet _utilClasses -> a
    25:25:void <init>() -> <init>
    36:48:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    53:53:boolean hasDeserializerFor(java.lang.Class) -> hasDeserializerFor
    27:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$1 -> com.fasterxml.jackson.databind.deser.std.j$1:
# {"fileName":"DateDeserializers.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> a
    182:182:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer -> com.fasterxml.jackson.databind.deser.std.j$a:
# {"fileName":"DateDeserializers.java","id":"sourceFile"}
    java.lang.reflect.Constructor _defaultCtor -> a
    223:225:void <init>() -> <init>
    229:231:void <init>(java.lang.Class) -> <init>
    234:236:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    240:240:com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    245:247:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    253:269:java.util.Calendar deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    211:211:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    211:211:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    211:211:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    211:211:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer -> com.fasterxml.jackson.databind.deser.std.j$b:
# {"fileName":"DateDeserializers.java","id":"sourceFile"}
    java.text.DateFormat _customFormat -> b
    java.lang.String _formatString -> c
    78:81:void <init>(java.lang.Class) -> <init>
    85:88:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    94:94:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    102:170:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    177:201:java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer -> com.fasterxml.jackson.databind.deser.std.j$c:
# {"fileName":"DateDeserializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer instance -> a
    286:286:void <init>() -> <init>
    288:289:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    293:293:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    298:298:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    303:303:java.util.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    281:281:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    281:281:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    281:281:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    281:281:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    284:284:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer -> com.fasterxml.jackson.databind.deser.std.j$d:
# {"fileName":"DateDeserializers.java","id":"sourceFile"}
    314:314:void <init>() -> <init>
    316:317:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    321:321:com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    326:326:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    331:332:java.sql.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    311:311:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    311:311:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    311:311:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    311:311:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer -> com.fasterxml.jackson.databind.deser.std.j$e:
# {"fileName":"DateDeserializers.java","id":"sourceFile"}
    345:345:void <init>() -> <init>
    347:348:void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer,java.text.DateFormat,java.lang.String) -> <init>
    352:352:com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    357:357:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    363:364:java.sql.Timestamp deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    343:343:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    343:343:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    343:343:com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    343:343:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer -> com.fasterxml.jackson.databind.deser.std.k:
# {"fileName":"DelegatingDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.JsonDeserializer _delegatee -> a
    39:41:void <init>(com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    com.fasterxml.jackson.databind.JsonDeserializer newDelegatingInstance(com.fasterxml.jackson.databind.JsonDeserializer) -> newDelegatingInstance
    59:62:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    69:75:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    81:85:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    91:94:com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer) -> replaceDelegatee
    107:107:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    116:116:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    124:124:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    134:134:boolean isCachable() -> isCachable
    138:138:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    143:143:com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    149:149:com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    154:154:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    159:159:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    164:164:java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    169:169:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    174:174:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    179:179:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    183:183:java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    186:186:com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
com.fasterxml.jackson.databind.deser.std.EnumDeserializer -> com.fasterxml.jackson.databind.deser.std.l:
# {"fileName":"EnumDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> g
    java.lang.Object[] _enumsByIndex -> a
    java.lang.Enum _enumDefaultValue -> h
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByName -> b
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByToString -> c
    java.lang.Boolean _caseInsensitive -> d
    java.lang.Boolean _useDefaultValueForUnknownEnum -> i
    java.lang.Boolean _useNullForUnknownEnum -> j
    boolean _isFromIntValue -> e
    com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByEnumNaming -> f
    82:83:void <init>(com.fasterxml.jackson.databind.util.EnumResolver,java.lang.Boolean) -> <init>
    91:98:void <init>(com.fasterxml.jackson.databind.util.EnumResolver,boolean,com.fasterxml.jackson.databind.util.EnumResolver) -> <init>
    106:115:void <init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean) -> <init>
    123:124:void <init>(com.fasterxml.jackson.databind.deser.std.EnumDeserializer,java.lang.Boolean) -> <init>
    131:132:void <init>(com.fasterxml.jackson.databind.util.EnumResolver) -> <init>
    140:140:com.fasterxml.jackson.databind.JsonDeserializer deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> deserializerForCreator
    155:160:com.fasterxml.jackson.databind.JsonDeserializer deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> deserializerForCreator
    175:179:com.fasterxml.jackson.databind.JsonDeserializer deserializerForNoArgsCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> deserializerForNoArgsCreator
    187:192:com.fasterxml.jackson.databind.deser.std.EnumDeserializer withResolved(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean) -> withResolved
    201:201:com.fasterxml.jackson.databind.deser.std.EnumDeserializer withResolved(java.lang.Boolean) -> withResolved
    209:215:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    229:229:boolean isCachable() -> isCachable
    233:233:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    238:238:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    247:267:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    274:282:java.lang.Object _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _fromString
    289:293:com.fasterxml.jackson.databind.util.CompactStringObjectMap _resolveCurrentLookup(com.fasterxml.jackson.databind.DeserializationContext) -> _resolveCurrentLookup
    301:334:java.lang.Object _fromInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int) -> _fromInteger
    350:416:java.lang.Object _deserializeAltString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.CompactStringObjectMap,java.lang.String) -> _deserializeAltString
    422:425:java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeOther
    429:429:java.lang.Class _enumClass() -> _enumClass
    433:444:com.fasterxml.jackson.databind.util.CompactStringObjectMap _getToStringLookup(com.fasterxml.jackson.databind.DeserializationContext) -> _getToStringLookup
    449:450:boolean useNullForUnknownEnum(com.fasterxml.jackson.databind.DeserializationContext) -> useNullForUnknownEnum
    455:457:boolean useDefaultValueForUnknownEnum(com.fasterxml.jackson.databind.DeserializationContext) -> useDefaultValueForUnknownEnum
com.fasterxml.jackson.databind.deser.std.EnumDeserializer$1 -> com.fasterxml.jackson.databind.deser.std.l$1:
# {"fileName":"EnumDeserializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> a
    315:315:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer -> com.fasterxml.jackson.databind.deser.std.m:
# {"fileName":"EnumMapDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> l
    java.lang.Class _enumClass -> a
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> b
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> c
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> d
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> i
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> j
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> k
    78:84:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    93:102:void <init>(com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> <init>
    108:109:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    115:119:com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider) -> withResolved
    133:162:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    174:189:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    199:199:boolean isCachable() -> isCachable
    206:206:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    217:217:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    222:222:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    227:227:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    240:261:java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    270:325:java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumMap) -> deserialize
    334:334:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    338:349:java.util.EnumMap constructMap(com.fasterxml.jackson.databind.DeserializationContext) -> constructMap
    355:426:java.util.EnumMap _deserializeUsingProperties(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingProperties
    25:25:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    25:25:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer -> com.fasterxml.jackson.databind.deser.std.n:
# {"fileName":"EnumSetDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.databind.JavaType _enumType -> a
    com.fasterxml.jackson.databind.JsonDeserializer _enumDeserializer -> b
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> c
    boolean _skipNullValues -> d
    java.lang.Boolean _unwrapSingle -> e
    68:78:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    87:88:void <init>(com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Boolean) -> <init>
    96:102:void <init>(com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    105:108:com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withDeserializer
    113:113:com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Boolean) -> withResolved
    121:124:com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    140:143:boolean isCachable() -> isCachable
    148:148:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    153:153:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    158:158:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    163:163:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    179:187:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    199:204:java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    212:215:java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> deserialize
    225:245:java.util.EnumSet _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> _deserialize
    253:253:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    259:259:java.util.EnumSet constructSet() -> constructSet
    267:286:java.util.EnumSet handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.EnumSet) -> handleNonArray
    24:24:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    24:24:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer -> com.fasterxml.jackson.databind.deser.std.o:
# {"fileName":"FactoryBasedEnumDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.JavaType _inputType -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> b
    com.fasterxml.jackson.databind.JsonDeserializer _deser -> c
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> d
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _creatorProps -> e
    boolean _hasArgs -> f
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propCreator -> h
    51:60:void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> <init>
    67:74:void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    78:86:void <init>(com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    96:100:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    105:105:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    110:110:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    115:115:boolean isCachable() -> isCachable
    118:118:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    127:199:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    208:208:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    215:233:java.lang.Object deserializeEnumUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> deserializeEnumUsingPropertyBased
    242:244:java.lang.Object _deserializeWithErrorWrapping(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _deserializeWithErrorWrapping
    251:251:java.lang.Object wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    256:268:java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> throwOrReturnThrowable
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer -> com.fasterxml.jackson.databind.deser.std.p:
# {"fileName":"FromStringDeserializer.java","id":"sourceFile"}
    61:61:java.lang.Class[] types() -> types
    88:89:void <init>(java.lang.Class) -> <init>
    97:129:com.fasterxml.jackson.databind.deser.std.FromStringDeserializer findDeserializer(java.lang.Class) -> findDeserializer
    134:134:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    148:187:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    198:198:boolean _shouldTrim() -> _shouldTrim
    206:220:java.lang.Object _deserializeFromOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken) -> _deserializeFromOther
    230:233:java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    238:238:java.lang.Object _deserializeFromEmptyString() -> _deserializeFromEmptyString
    245:260:java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmptyString
    268:268:java.lang.Object _deserializeFromEmptyStringDefault(com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmptyStringDefault
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std -> com.fasterxml.jackson.databind.deser.std.p$a:
# {"fileName":"FromStringDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> o
    int STD_FILE -> a
    int STD_URL -> b
    int STD_URI -> c
    int STD_CLASS -> d
    int STD_JAVA_TYPE -> e
    int STD_CURRENCY -> f
    int STD_PATTERN -> g
    int STD_LOCALE -> h
    int STD_CHARSET -> i
    int STD_TIME_ZONE -> j
    int STD_INET_ADDRESS -> k
    int STD_INET_SOCKET_ADDRESS -> l
    java.lang.String LOCALE_EXT_MARKER -> m
    int _kind -> n
    307:309:void <init>(java.lang.Class,int) -> <init>
    314:369:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    376:384:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    392:392:java.lang.Object _deserializeFromEmptyStringDefault(com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmptyStringDefault
    399:399:boolean _shouldTrim() -> _shouldTrim
    404:410:int _firstHyphenOrUnderscore(java.lang.String) -> _firstHyphenOrUnderscore
    416:432:java.util.Locale _deserializeLocale(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeLocale
    438:475:java.util.Locale _deSerializeBCP47Locale(java.lang.String,int,java.lang.String,java.lang.String,int) -> _deSerializeBCP47Locale
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.p$b:
# {"fileName":"FromStringDeserializer.java","id":"sourceFile"}
    520:520:void <init>() -> <init>
    523:523:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    527:527:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    533:537:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    544:544:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$StringBuilderDeserializer -> com.fasterxml.jackson.databind.deser.std.p$c:
# {"fileName":"FromStringDeserializer.java","id":"sourceFile"}
    484:485:void <init>() -> <init>
    489:489:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    496:496:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    502:506:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    513:513:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers -> com.fasterxml.jackson.databind.deser.std.q:
# {"fileName":"JdkDeserializers.java","id":"sourceFile"}
    java.util.HashSet _classNames -> a
    15:15:void <init>() -> <init>
    40:40:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    50:77:com.fasterxml.jackson.databind.JsonDeserializer find(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.String) -> find
    82:82:boolean hasDeserializerFor(java.lang.Class) -> hasDeserializerFor
    17:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator -> com.fasterxml.jackson.databind.deser.std.r:
# {"fileName":"JsonLocationInstantiator.java","id":"sourceFile"}
    long serialVersionUID -> b
    25:26:void <init>() -> <init>
    29:29:boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    33:42:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    47:47:com.fasterxml.jackson.databind.deser.CreatorProperty creatorProp(java.lang.String,com.fasterxml.jackson.databind.JavaType,int) -> creatorProp
    56:58:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    62:62:long _long(java.lang.Object) -> _long
    66:66:int _int(java.lang.Object) -> _int
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer -> com.fasterxml.jackson.databind.deser.std.s:
# {"fileName":"JsonNodeDeserializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance -> d
    39:40:void <init>() -> <init>
    44:45:void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer,boolean,boolean) -> <init>
    50:50:com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean) -> _createWithMerge
    58:65:com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(java.lang.Class) -> getDeserializer
    76:76:com.fasterxml.jackson.databind.JsonNode getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    85:85:java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    96:109:com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    114:114:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    25:25:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    25:25:boolean isCachable() -> isCachable
    25:25:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    25:25:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    25:25:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    25:25:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    33:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.s$a:
# {"fileName":"JsonNodeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> e
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> d
    195:195:void <init>() -> <init>
    197:197:com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> getInstance
    201:202:void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer,boolean,boolean) -> <init>
    207:207:com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean) -> _createWithMerge
    213:220:com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    230:235:com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ArrayNode) -> deserialize
    188:188:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    188:188:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    193:193:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer -> com.fasterxml.jackson.databind.deser.std.s$b:
# {"fileName":"JsonNodeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> e
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> d
    133:133:void <init>() -> <init>
    135:135:com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> getInstance
    139:140:void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer,boolean,boolean) -> <init>
    145:145:com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean,boolean) -> _createWithMerge
    151:165:com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    177:181:com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.ObjectNode) -> deserialize
    126:126:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    126:126:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    131:131:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.MapDeserializer -> com.fasterxml.jackson.databind.deser.std.t:
# {"fileName":"MapDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> q
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> a
    boolean _standardStringKey -> b
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> c
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> d
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> i
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> j
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> k
    boolean _hasDefaultCreator -> l
    java.util.Set _ignorableProperties -> m
    java.util.Set _includableProperties -> n
    com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker -> o
    boolean _checkDupSquash -> p
    123:134:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    142:157:void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer) -> <init>
    165:166:void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set) -> <init>
    178:192:void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set,java.util.Set) -> <init>
    203:203:com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set) -> withResolved
    215:220:com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.util.Set,java.util.Set) -> withResolved
    231:240:boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> _isStdKeyDeser
    248:251:void setIgnorableProperties(java.lang.String[]) -> setIgnorableProperties
    254:257:void setIgnorableProperties(java.util.Set) -> setIgnorableProperties
    260:262:void setIncludableProperties(java.util.Set) -> setIncludableProperties
    274:302:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    312:373:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    384:384:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    389:389:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    415:415:boolean isCachable() -> isCachable
    424:424:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    431:460:java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    470:483:java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> deserialize
    492:492:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    502:502:java.lang.Class getMapClass() -> getMapClass
    504:504:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    515:575:java.util.Map _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndBind
    586:643:java.util.Map _readAndBindStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndBindStringKeyMap
    649:714:java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingCreator
    730:788:void _readAndUpdate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndUpdate
    800:855:void _readAndUpdateStringKeyMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndUpdateStringKeyMap
    865:876:void _squashDups(com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object) -> _squashDups
    889:895:void handleUnresolvedReference(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference) -> handleUnresolvedReference
    32:32:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    32:32:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring -> com.fasterxml.jackson.databind.deser.std.t$a:
# {"fileName":"MapDeserializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator _parent -> c
    java.util.Map next -> a
    java.lang.Object key -> b
    958:967:void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object) -> <init>
    971:972:void handleResolvedForwardReference(java.lang.Object,java.lang.Object) -> handleResolvedForwardReference
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator -> com.fasterxml.jackson.databind.deser.std.t$b:
# {"fileName":"MapDeserializer.java","id":"sourceFile"}
    java.lang.Class _valueType -> a
    java.util.Map _result -> b
    java.util.List _accumulator -> c
    903:908:void <init>(java.lang.Class,java.util.Map) -> <init>
    912:918:void put(java.lang.Object,java.lang.Object) -> put
    922:924:com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Object) -> handleUnresolvedReference
    929:945:void resolveForwardReference(java.lang.Object,java.lang.Object) -> resolveForwardReference
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer -> com.fasterxml.jackson.databind.deser.std.u:
# {"fileName":"MapEntryDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> a
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> b
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> c
    59:66:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    74:78:void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer) -> <init>
    84:88:void <init>(com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    99:103:com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    110:110:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    127:147:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    158:158:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    163:163:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    180:234:java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    241:241:java.util.Map$Entry deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map$Entry) -> deserialize
    250:250:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    22:22:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    22:22:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer -> com.fasterxml.jackson.databind.deser.std.v:
# {"fileName":"NullifyingDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer instance -> a
    22:22:void <init>() -> <init>
    32:32:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    40:51:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    60:66:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    20:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers -> com.fasterxml.jackson.databind.deser.std.w:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    java.util.HashSet _classNames -> a
    26:26:void <init>() -> <init>
    49:118:com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String) -> find
    28:46:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1 -> com.fasterxml.jackson.databind.deser.std.w$1:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> a
    455:455:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer -> com.fasterxml.jackson.databind.deser.std.w$a:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer instance -> a
    985:985:void <init>() -> <init>
    989:989:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    994:994:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    1002:1043:java.math.BigDecimal deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    978:978:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    983:983:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.w$b:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer instance -> a
    911:911:void <init>() -> <init>
    915:915:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    920:920:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    926:973:java.math.BigInteger deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    904:904:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    909:909:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer -> com.fasterxml.jackson.databind.deser.std.w$c:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer wrapperInstance -> b
    211:212:void <init>(java.lang.Class,java.lang.Boolean) -> <init>
    217:227:java.lang.Boolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    237:247:java.lang.Boolean deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    200:200:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    200:200:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    200:200:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    200:200:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    206:207:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer -> com.fasterxml.jackson.databind.deser.std.w$d:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer wrapperInstance -> b
    262:263:void <init>(java.lang.Class,java.lang.Byte) -> <init>
    268:274:java.lang.Byte deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    282:335:java.lang.Byte _parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseByte
    251:251:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    251:251:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    251:251:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    257:258:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer -> com.fasterxml.jackson.databind.deser.std.w$e:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer wrapperInstance -> b
    436:439:void <init>(java.lang.Class,java.lang.Character) -> <init>
    446:501:java.lang.Character deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    425:425:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    425:425:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    425:425:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    431:432:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer -> com.fasterxml.jackson.databind.deser.std.w$f:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer wrapperInstance -> b
    673:674:void <init>(java.lang.Class,java.lang.Double) -> <init>
    678:684:java.lang.Double deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    693:699:java.lang.Double deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    705:758:java.lang.Double _parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDouble
    663:663:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    663:663:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    663:663:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    663:663:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    669:670:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer -> com.fasterxml.jackson.databind.deser.std.w$g:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance -> b
    589:590:void <init>(java.lang.Class,java.lang.Float) -> <init>
    595:601:java.lang.Float deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    608:658:java.lang.Float _parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseFloat
    579:579:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    579:579:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    579:579:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    585:586:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.w$h:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer wrapperInstance -> b
    516:517:void <init>(java.lang.Class,java.lang.Integer) -> <init>
    521:521:boolean isCachable() -> isCachable
    525:531:java.lang.Integer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    540:546:java.lang.Integer deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    506:506:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    506:506:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    506:506:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    506:506:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    512:513:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer -> com.fasterxml.jackson.databind.deser.std.w$i:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer wrapperInstance -> b
    560:561:void <init>(java.lang.Class,java.lang.Long) -> <init>
    565:565:boolean isCachable() -> isCachable
    569:575:java.lang.Long deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    550:550:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    550:550:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    550:550:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    556:557:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer -> com.fasterxml.jackson.databind.deser.std.w$j:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance -> a
    781:782:void <init>() -> <init>
    787:787:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    794:867:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    883:890:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    778:778:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer -> com.fasterxml.jackson.databind.deser.std.w$k:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.type.LogicalType _logicalType -> c
    java.lang.Object _nullValue -> d
    java.lang.Object _emptyValue -> e
    boolean _primitive -> f
    146:151:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Object,java.lang.Object) -> <init>
    155:156:void <init>(java.lang.Class,java.lang.Object,java.lang.Object) -> <init>
    162:168:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    175:180:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    185:185:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    190:190:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer -> com.fasterxml.jackson.databind.deser.std.w$l:
# {"fileName":"NumberDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer primitiveInstance -> a
    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer wrapperInstance -> b
    350:351:void <init>(java.lang.Class,java.lang.Short) -> <init>
    357:363:java.lang.Short deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    370:421:java.lang.Short _parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseShort
    339:339:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    339:339:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    339:339:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    345:346:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.x:
# {"fileName":"ObjectArrayDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> j
    boolean _untyped -> a
    java.lang.Class _elementClass -> b
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> c
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer -> d
    java.lang.Object[] _emptyValue -> i
    72:79:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> <init>
    85:92:void <init>(com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    100:100:com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withDeserializer
    111:116:com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    125:125:boolean isCachable() -> isCachable
    130:130:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    137:156:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    167:167:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    173:173:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    181:181:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    195:238:java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    248:248:java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    255:305:java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> deserialize
    318:324:java.lang.Byte[] deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBase64
    331:392:java.lang.Object[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
    26:26:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    26:26:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    26:26:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers -> com.fasterxml.jackson.databind.deser.std.y:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    java.lang.Boolean _unwrapSingle -> a
    java.lang.Object _emptyValue -> c
    com.fasterxml.jackson.databind.deser.NullValueProvider _nuller -> b
    59:62:void <init>(java.lang.Class) -> <init>
    69:72:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    77:102:com.fasterxml.jackson.databind.JsonDeserializer forType(java.lang.Class) -> forType
    109:128:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    java.lang.Object _constructEmpty() -> _constructEmpty
    162:162:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    167:167:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    173:173:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    178:182:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    191:191:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    197:205:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    218:227:java.lang.Object handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
    232:232:void _failOnNull(com.fasterxml.jackson.databind.DeserializationContext) -> _failOnNull
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> com.fasterxml.jackson.databind.deser.std.y$a:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> c
    356:356:void <init>() -> <init>
    358:359:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    364:364:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    369:369:boolean[] _constructEmpty() -> _constructEmpty
    376:410:boolean[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    416:416:boolean[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    421:425:boolean[] _concat(boolean[],boolean[]) -> _concat
    350:350:java.lang.Object _constructEmpty() -> _constructEmpty
    350:350:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    350:350:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    350:350:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser -> com.fasterxml.jackson.databind.deser.std.y$b:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> c
    439:439:void <init>() -> <init>
    441:442:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    447:447:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    452:452:byte[] _constructEmpty() -> _constructEmpty
    459:459:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    465:526:byte[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    534:550:byte[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    555:559:byte[] _concat(byte[],byte[]) -> _concat
    433:433:java.lang.Object _constructEmpty() -> _constructEmpty
    433:433:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    433:433:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    433:433:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser -> com.fasterxml.jackson.databind.deser.std.y$c:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> c
    247:247:void <init>() -> <init>
    249:250:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    256:256:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    261:261:char[] _constructEmpty() -> _constructEmpty
    271:324:char[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    331:331:char[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    336:340:char[] _concat(char[],char[]) -> _concat
    241:241:java.lang.Object _constructEmpty() -> _constructEmpty
    241:241:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    241:241:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    241:241:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> com.fasterxml.jackson.databind.deser.std.y$d:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> c
    870:870:void <init>() -> <init>
    872:873:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    878:878:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    883:883:double[] _constructEmpty() -> _constructEmpty
    889:915:double[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    921:921:double[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    926:930:double[] _concat(double[],double[]) -> _concat
    864:864:java.lang.Object _constructEmpty() -> _constructEmpty
    864:864:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    864:864:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    864:864:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser -> com.fasterxml.jackson.databind.deser.std.y$e:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> c
    799:799:void <init>() -> <init>
    801:802:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    807:807:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    812:812:float[] _constructEmpty() -> _constructEmpty
    818:845:float[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    851:851:float[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    856:860:float[] _concat(float[],float[]) -> _concat
    793:793:java.lang.Object _constructEmpty() -> _constructEmpty
    793:793:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    793:793:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    793:793:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser -> com.fasterxml.jackson.databind.deser.std.y$f:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser instance -> c
    645:645:void <init>() -> <init>
    647:648:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    653:653:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    658:658:int[] _constructEmpty() -> _constructEmpty
    664:696:int[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    702:702:int[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    707:711:int[] _concat(int[],int[]) -> _concat
    637:637:java.lang.Object _constructEmpty() -> _constructEmpty
    637:637:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    637:637:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    637:637:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    643:643:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser -> com.fasterxml.jackson.databind.deser.std.y$g:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser instance -> c
    723:723:void <init>() -> <init>
    725:726:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    731:731:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    736:736:long[] _constructEmpty() -> _constructEmpty
    742:774:long[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    780:780:long[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    785:789:long[] _concat(long[],long[]) -> _concat
    715:715:java.lang.Object _constructEmpty() -> _constructEmpty
    715:715:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    715:715:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    715:715:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    721:721:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser -> com.fasterxml.jackson.databind.deser.std.y$h:
# {"fileName":"PrimitiveArrayDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> c
    569:569:void <init>() -> <init>
    571:572:void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    577:577:com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    582:582:short[] _constructEmpty() -> _constructEmpty
    588:618:short[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    624:624:short[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    629:633:short[] _concat(short[],short[]) -> _concat
    563:563:java.lang.Object _constructEmpty() -> _constructEmpty
    563:563:java.lang.Object handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleSingleElementUnwrapped
    563:563:java.lang.Object _concat(java.lang.Object,java.lang.Object) -> _concat
    563:563:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer -> com.fasterxml.jackson.databind.deser.std.z:
# {"fileName":"ReferenceTypeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> e
    com.fasterxml.jackson.databind.JavaType _fullType -> a
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> b
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> c
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> d
    50:55:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    61:62:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    68:82:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    97:97:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    102:102:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    126:126:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    java.lang.Object referenceValue(java.lang.Object) -> referenceValue
    java.lang.Object updateReference(java.lang.Object,java.lang.Object) -> updateReference
    java.lang.Object getReferenced(java.lang.Object) -> getReferenced
    164:164:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    167:167:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    171:174:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    184:185:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    198:206:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    214:233:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    240:258:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer -> com.fasterxml.jackson.databind.deser.std.aa:
# {"fileName":"StackTraceElementDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.JsonDeserializer _adapterDeserializer -> a
    22:23:void <init>() -> <init>
    27:29:void <init>(com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    36:40:com.fasterxml.jackson.databind.JsonDeserializer construct(com.fasterxml.jackson.databind.DeserializationContext) -> construct
    46:66:java.lang.StackTraceElement deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    75:75:java.lang.StackTraceElement constructValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter) -> constructValue
    85:85:java.lang.StackTraceElement constructValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> constructValue
    100:100:java.lang.StackTraceElement constructValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> constructValue
    13:13:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter -> com.fasterxml.jackson.databind.deser.std.aa$a:
# {"fileName":"StackTraceElementDeserializer.java","id":"sourceFile"}
    java.lang.String className -> a
    java.lang.String classLoaderName -> b
    java.lang.String declaringClass -> c
    java.lang.String format -> d
    java.lang.String fileName -> e
    java.lang.String methodName -> f
    int lineNumber -> g
    java.lang.String moduleName -> h
    java.lang.String moduleVersion -> i
    boolean nativeMethod -> j
    109:114:void <init>() -> <init>
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer -> com.fasterxml.jackson.databind.deser.std.ab:
# {"fileName":"StdDelegatingDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.databind.util.Converter _converter -> a
    com.fasterxml.jackson.databind.JavaType _delegateType -> b
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> c
    72:76:void <init>(com.fasterxml.jackson.databind.util.Converter) -> <init>
    82:86:void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    93:97:void <init>(com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer) -> <init>
    106:107:com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> withDelegate
    112:113:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    118:122:com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer) -> replaceDelegatee
    137:140:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    147:158:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    170:174:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    192:196:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    204:207:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    220:223:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.lang.Object) -> deserializeWithType
    239:241:java.lang.Object _handleIncompatibleUpdateValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _handleIncompatibleUpdateValue
    252:252:java.lang.Class handledType() -> handledType
    257:257:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    263:263:boolean isCachable() -> isCachable
    268:268:com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    273:273:java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    284:284:java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) -> getNullValue
    289:289:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    294:294:java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) -> getAbsentValue
    299:299:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    304:304:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    315:315:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    337:337:java.lang.Object convertValue(java.lang.Object) -> convertValue
    348:349:java.lang.Object _convertIfNonNull(java.lang.Object) -> _convertIfNonNull
com.fasterxml.jackson.databind.deser.std.StdDeserializer -> com.fasterxml.jackson.databind.deser.std.ac:
# {"fileName":"StdDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    int F_MASK_INT_COERCIONS -> z
    int F_MASK_ACCEPT_ARRAYS -> A
    java.lang.Class _valueClass -> B
    com.fasterxml.jackson.databind.JavaType _valueType -> C
    70:73:void <init>(java.lang.Class) -> <init>
    75:79:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    87:90:void <init>(com.fasterxml.jackson.databind.deser.std.StdDeserializer) -> <init>
    99:99:java.lang.Class handledType() -> handledType
    111:111:java.lang.Class getValueClass() -> getValueClass
    116:116:com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    132:135:com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext) -> getValueType
    142:142:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    151:151:boolean isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> isDefaultDeserializer
    155:155:boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer) -> isDefaultKeyDeserializer
    172:172:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    200:222:java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromArray
    238:247:java.lang.Object _deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromEmpty
    260:311:java.lang.Object _deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromString
    320:331:java.lang.Object _deserializeFromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.String) -> _deserializeFromEmptyString
    359:364:java.lang.Object _deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeWrappedValue
    378:378:boolean _parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> _parseBooleanPrimitive
    389:453:boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBooleanPrimitive
    458:465:boolean _isTrue(java.lang.String) -> _isTrue
    469:476:boolean _isFalse(java.lang.String) -> _isFalse
    502:550:java.lang.Boolean _parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _parseBoolean
    558:623:byte _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBytePrimitive
    630:693:short _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseShortPrimitive
    700:751:int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseIntPrimitive
    760:774:int _parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseIntPrimitive
    786:824:java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _parseInteger
    833:844:java.lang.Integer _parseInteger(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseInteger
    853:904:long _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseLongPrimitive
    913:918:long _parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseLongPrimitive
    930:969:java.lang.Long _parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _parseLong
    978:980:java.lang.Long _parseLong(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseLong
    988:1049:float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseFloatPrimitive
    1059:1063:float _parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseFloatPrimitive
    1073:1077:float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseFloatPrimitive
    1094:1112:java.lang.Float _checkFloatSpecialValue(java.lang.String) -> _checkFloatSpecialValue
    1119:1180:double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDoublePrimitive
    1190:1194:double _parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseDoublePrimitive
    1204:1208:double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _parseDoublePrimitive
    1220:1220:double _parseDouble(java.lang.String) -> _parseDouble
    1231:1231:double _parseDouble(java.lang.String,boolean) -> _parseDouble
    1248:1268:java.lang.Double _checkDoubleSpecialValue(java.lang.String) -> _checkDoubleSpecialValue
    1275:1304:java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
    1311:1334:java.util.Date _parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDateFromArray
    1345:1364:java.util.Date _parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
    1376:1381:java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseString
    1403:1456:java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.NullValueProvider) -> _parseString
    1467:1467:boolean _hasTextualNull(java.lang.String) -> _hasTextualNull
    1471:1471:boolean _isNegInf(java.lang.String) -> _isNegInf
    1475:1475:boolean _isPosInf(java.lang.String) -> _isPosInf
    1478:1478:boolean _isNaN(java.lang.String) -> _isNaN
    1483:1489:boolean _isBlank(java.lang.String) -> _isBlank
    1504:1504:com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _checkFromStringCoercion
    1521:1543:com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Class) -> _checkFromStringCoercion
    1553:1559:com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkFloatToIntCoercion
    1569:1569:com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkIntToStringCoercion
    1579:1579:com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkFloatToStringCoercion
    1589:1589:com.fasterxml.jackson.databind.cfg.CoercionAction _checkBooleanToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkBooleanToStringCoercion
    1599:1605:com.fasterxml.jackson.databind.cfg.CoercionAction _checkToStringCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class,java.lang.Object,com.fasterxml.jackson.databind.cfg.CoercionInputShape) -> _checkToStringCoercion
    1615:1621:com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToFloatCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _checkIntToFloatCoercion
    1631:1650:java.lang.Boolean _coerceBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> _coerceBooleanFromInt
    1661:1666:com.fasterxml.jackson.databind.cfg.CoercionAction _checkCoercionFail(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.cfg.CoercionAction,java.lang.Class,java.lang.Object,java.lang.String) -> _checkCoercionFail
    1679:1685:boolean _checkTextualNull(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _checkTextualNull
    1707:1713:java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _coerceIntegral
    1726:1731:void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext) -> _verifyNullForPrimitive
    1746:1757:void _verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyNullForPrimitiveCoercion
    1762:1765:void _reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum,java.lang.String) -> _reportFailedNullCoerce
    1780:1792:java.lang.String _coercedTypeDesc() -> _coercedTypeDesc
    1805:1809:java.lang.String _coercedTypeDesc(java.lang.Class) -> _coercedTypeDesc
    1826:1829:boolean _parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBooleanFromInt
    1838:1843:void _verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyStringForScalarCoercion
    1856:1866:java.lang.Object _coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceEmptyString
    1873:1876:void _failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _failDoubleToIntCoercion
    1881:1885:void _verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _verifyNullForScalarCoercion
    1890:1898:void _verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser) -> _verifyNumberForScalarCoercion
    1903:1906:java.lang.Object _coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceNullToken
    1911:1914:java.lang.Object _coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> _coerceTextualNull
    1919:1919:boolean _isEmptyOrTextualNull(java.lang.String) -> _isEmptyOrTextualNull
    1941:1941:com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findDeserializer
    1953:1976:boolean _isIntNumber(java.lang.String) -> _isIntNumber
    1999:2014:com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> findConvertingContentDeserializer
    2035:2039:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> findFormatOverrides
    2055:2059:java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Feature) -> findFormatFeature
    2073:2077:com.fasterxml.jackson.databind.deser.NullValueProvider findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata) -> findValueNullProvider
    2092:2114:com.fasterxml.jackson.databind.deser.NullValueProvider findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> findContentNullProvider
    2120:2126:com.fasterxml.jackson.annotation.Nulls findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> findContentNullStyle
    2134:2175:com.fasterxml.jackson.databind.deser.NullValueProvider _findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer) -> _findNullProvider
    2180:2180:com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyString(com.fasterxml.jackson.databind.DeserializationContext) -> _findCoercionFromEmptyString
    2186:2186:com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromEmptyArray(com.fasterxml.jackson.databind.DeserializationContext) -> _findCoercionFromEmptyArray
    2192:2192:com.fasterxml.jackson.databind.cfg.CoercionAction _findCoercionFromBlankString(com.fasterxml.jackson.databind.DeserializationContext) -> _findCoercionFromBlankString
    2220:2231:void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    2236:2241:void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleMissingEndArrayForSingle
    2251:2255:java.lang.Object handleNestedArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNestedArrayForSingle
    2260:2264:void _verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _verifyEndArrayForSingle
    2276:2276:boolean _neitherNull(java.lang.Object,java.lang.Object) -> _neitherNull
    2285:2285:boolean _byteOverflow(int) -> _byteOverflow
    2292:2292:boolean _shortOverflow(int) -> _shortOverflow
    2299:2299:boolean _intOverflow(long) -> _intOverflow
    2306:2309:java.lang.Number _nonNullNumber(java.lang.Number) -> _nonNullNumber
    51:58:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdDeserializer$1 -> com.fasterxml.jackson.databind.deser.std.ac$1:
# {"fileName":"StdDeserializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$cfg$CoercionAction -> a
    206:206:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.ad:
# {"fileName":"StdKeyDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> u
    int TYPE_BOOLEAN -> a
    int TYPE_BYTE -> b
    int TYPE_SHORT -> c
    int TYPE_CHAR -> d
    int TYPE_INT -> e
    int TYPE_LONG -> f
    int TYPE_FLOAT -> g
    int TYPE_DOUBLE -> h
    int TYPE_LOCALE -> i
    int TYPE_DATE -> j
    int TYPE_CALENDAR -> k
    int TYPE_UUID -> l
    int TYPE_URI -> m
    int TYPE_URL -> n
    int TYPE_CLASS -> o
    int TYPE_CURRENCY -> p
    int TYPE_BYTE_ARRAY -> q
    int _kind -> r
    java.lang.Class _keyClass -> s
    com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser -> t
    63:64:void <init>(int,java.lang.Class) -> <init>
    66:70:void <init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer) -> <init>
    77:123:com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer forType(java.lang.Class) -> forType
    130:147:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    150:150:java.lang.Class getKeyClass() -> getKeyClass
    154:244:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
    255:255:int _parseInt(java.lang.String) -> _parseInt
    259:259:long _parseLong(java.lang.String) -> _parseLong
    263:263:double _parseDouble(java.lang.String) -> _parseDouble
    268:269:java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception) -> _weirdKey
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD -> com.fasterxml.jackson.databind.deser.std.ad$a:
# {"fileName":"StdKeyDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> c
    java.lang.Class _keyClass -> a
    com.fasterxml.jackson.databind.JsonDeserializer _delegate -> b
    325:328:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    335:350:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    354:354:java.lang.Class getKeyClass() -> getKeyClass
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD -> com.fasterxml.jackson.databind.deser.std.ad$b:
# {"fileName":"StdKeyDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> A
    com.fasterxml.jackson.databind.util.EnumResolver _byNameResolver -> u
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> v
    com.fasterxml.jackson.databind.util.EnumResolver _byToStringResolver -> w
    com.fasterxml.jackson.databind.util.EnumResolver _byIndexResolver -> x
    com.fasterxml.jackson.databind.util.EnumResolver _byEnumNamingResolver -> y
    java.lang.Enum _enumDefaultValue -> z
    394:399:void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> <init>
    405:410:void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.util.EnumResolver) -> <init>
    415:440:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
    447:451:com.fasterxml.jackson.databind.util.EnumResolver _resolveCurrentResolver(com.fasterxml.jackson.databind.DeserializationContext) -> _resolveCurrentResolver
    457:468:com.fasterxml.jackson.databind.util.EnumResolver _getToStringResolver(com.fasterxml.jackson.databind.DeserializationContext) -> _getToStringResolver
    472:483:com.fasterxml.jackson.databind.util.EnumResolver _getIndexResolver(com.fasterxml.jackson.databind.DeserializationContext) -> _getIndexResolver
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.ad$c:
# {"fileName":"StdKeyDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> v
    java.lang.reflect.Constructor _ctor -> u
    498:500:void <init>(java.lang.reflect.Constructor) -> <init>
    505:505:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.ad$d:
# {"fileName":"StdKeyDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> v
    java.lang.reflect.Method _factoryMethod -> u
    520:522:void <init>(java.lang.reflect.Method) -> <init>
    527:527:java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD -> com.fasterxml.jackson.databind.deser.std.ad$e:
# {"fileName":"StdKeyDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> u
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sString -> v
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sObject -> w
    285:285:void <init>(java.lang.Class) -> <init>
    289:295:com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class) -> forType
    300:300:java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    282:283:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers -> com.fasterxml.jackson.databind.deser.std.ae:
# {"fileName":"StdKeyDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> a
    33:33:void <init>() -> <init>
    39:39:com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver) -> constructEnumKeyDeserializer
    44:44:com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> constructEnumKeyDeserializer
    52:52:com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.util.EnumResolver) -> constructEnumKeyDeserializer
    60:60:com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.util.EnumResolver) -> constructEnumKeyDeserializer
    66:66:com.fasterxml.jackson.databind.KeyDeserializer constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> constructDelegatingKeyDeserializer
    84:121:com.fasterxml.jackson.databind.KeyDeserializer findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findStringBasedKeyDeserializer
    127:138:com.fasterxml.jackson.databind.KeyDeserializer _constructCreatorKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _constructCreatorKeyDeserializer
    146:156:com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata _findStringConstructor(com.fasterxml.jackson.databind.BeanDescription) -> _findStringConstructor
    163:179:com.fasterxml.jackson.databind.introspect.AnnotatedMethod _findExplicitStringFactoryMethod(java.util.List) -> _findExplicitStringFactoryMethod
    192:197:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
    100:101:boolean lambda$findStringBasedKeyDeserializer$0(com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata) -> lambda$findStringBasedKeyDeserializer$0
com.fasterxml.jackson.databind.deser.std.StdNodeBasedDeserializer -> com.fasterxml.jackson.databind.deser.std.af:
# {"fileName":"StdNodeBasedDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.JsonDeserializer _treeDeserializer -> a
    35:36:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    39:40:void <init>(java.lang.Class) -> <init>
    47:49:void <init>(com.fasterxml.jackson.databind.deser.std.StdNodeBasedDeserializer) -> <init>
    53:54:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    java.lang.Object convert(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.DeserializationContext) -> convert
    73:74:java.lang.Object convert(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> convert
    85:86:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    97:98:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    108:109:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer -> com.fasterxml.jackson.databind.deser.std.ag:
# {"fileName":"StdScalarDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    19:19:void <init>(java.lang.Class) -> <init>
    20:20:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    23:23:void <init>(com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer) -> <init>
    33:33:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    42:42:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    48:48:com.fasterxml.jackson.databind.util.AccessPattern getNullAccessPattern() -> getNullAccessPattern
    55:55:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    66:66:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    76:78:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator -> com.fasterxml.jackson.databind.deser.std.ah:
# {"fileName":"StdValueInstantiator.java","id":"sourceFile"}
    long serialVersionUID -> s
    java.lang.String _valueTypeDesc -> a
    java.lang.Class _valueClass -> b
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _defaultCreator -> c
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _withArgsCreator -> d
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _constructorArguments -> e
    com.fasterxml.jackson.databind.JavaType _delegateType -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _delegateCreator -> g
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArguments -> h
    com.fasterxml.jackson.databind.JavaType _arrayDelegateType -> i
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _arrayDelegateCreator -> j
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArguments -> k
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromStringCreator -> l
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromIntCreator -> m
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromLongCreator -> n
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBigIntegerCreator -> o
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromDoubleCreator -> p
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBigDecimalCreator -> q
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBooleanCreator -> r
    82:85:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> <init>
    87:90:void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> <init>
    97:121:void <init>(com.fasterxml.jackson.databind.deser.std.StdValueInstantiator) -> <init>
    132:138:void configureFromObjectSettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> configureFromObjectSettings
    145:148:void configureFromArraySettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> configureFromArraySettings
    151:152:void configureFromStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromStringCreator
    155:156:void configureFromIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromIntCreator
    159:160:void configureFromLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromLongCreator
    162:162:void configureFromBigIntegerCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromBigIntegerCreator
    165:166:void configureFromDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromDoubleCreator
    168:168:void configureFromBigDecimalCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromBigDecimalCreator
    171:172:void configureFromBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromBooleanCreator
    182:182:java.lang.String getValueTypeDesc() -> getValueTypeDesc
    187:187:java.lang.Class getValueClass() -> getValueClass
    192:192:boolean canCreateFromString() -> canCreateFromString
    197:197:boolean canCreateFromInt() -> canCreateFromInt
    202:202:boolean canCreateFromLong() -> canCreateFromLong
    206:206:boolean canCreateFromBigInteger() -> canCreateFromBigInteger
    210:210:boolean canCreateFromDouble() -> canCreateFromDouble
    214:214:boolean canCreateFromBigDecimal() -> canCreateFromBigDecimal
    218:218:boolean canCreateFromBoolean() -> canCreateFromBoolean
    223:223:boolean canCreateUsingDefault() -> canCreateUsingDefault
    228:228:boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    233:233:boolean canCreateUsingArrayDelegate() -> canCreateUsingArrayDelegate
    238:238:boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    243:247:boolean canInstantiate() -> canInstantiate
    252:252:com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    257:257:com.fasterxml.jackson.databind.JavaType getArrayDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getArrayDelegateType
    262:262:com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    274:280:java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    287:293:java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    299:305:java.lang.Object createUsingDefaultOrWithoutArguments(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefaultOrWithoutArguments
    312:317:java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    323:329:java.lang.Object createUsingArrayDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingArrayDelegate
    341:349:java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    356:387:java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    393:415:java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    421:431:java.lang.Object createFromBigInteger(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigInteger) -> createFromBigInteger
    437:457:java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    463:489:java.lang.Object createFromBigDecimal(com.fasterxml.jackson.databind.DeserializationContext,java.math.BigDecimal) -> createFromBigDecimal
    497:498:java.lang.Double tryConvertToDouble(java.math.BigDecimal) -> tryConvertToDouble
    504:512:java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    524:524:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    529:529:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getArrayDelegateCreator() -> getArrayDelegateCreator
    534:534:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    539:539:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
    557:563:com.fasterxml.jackson.databind.JsonMappingException wrapException(java.lang.Throwable) -> wrapException
    575:580:com.fasterxml.jackson.databind.JsonMappingException unwrapAndWrapException(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> unwrapAndWrapException
    595:598:com.fasterxml.jackson.databind.JsonMappingException wrapAsJsonMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> wrapAsJsonMappingException
    613:621:com.fasterxml.jackson.databind.JsonMappingException rewrapCtorProblem(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable) -> rewrapCtorProblem
    636:658:java.lang.Object _createUsingDelegate(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _createUsingDelegate
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.ai:
# {"fileName":"StringArrayDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> f
    java.lang.String[] NO_STRINGS -> g
    com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer instance -> a
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> b
    com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider -> c
    java.lang.Boolean _unwrapSingle -> d
    boolean _skipNullValues -> e
    71:72:void <init>() -> <init>
    77:82:void <init>(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    86:86:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    91:91:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    97:97:com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern() -> getEmptyAccessPattern
    102:102:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    113:135:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    142:182:java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    191:242:java.lang.String[] _deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String[]) -> _deserializeCustom
    247:247:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    255:303:java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String[]) -> deserialize
    309:345:java.lang.String[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> handleNonArray
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    37:39:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer -> com.fasterxml.jackson.databind.deser.std.aj:
# {"fileName":"StringCollectionDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> a
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> b
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> c
    66:67:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> <init>
    75:79:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> <init>
    85:89:com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean) -> withResolved
    97:97:boolean isCachable() -> isCachable
    102:102:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    115:147:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    159:160:com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    165:165:com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    179:184:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    193:225:java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    239:261:java.util.Collection deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer) -> deserializeUsingCustom
    268:268:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    281:331:java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> handleNonArray
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    27:27:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.StringDeserializer -> com.fasterxml.jackson.databind.deser.std.ak:
# {"fileName":"StringDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.deser.std.StringDeserializer instance -> a
    21:21:void <init>() -> <init>
    25:25:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    30:30:boolean isCachable() -> isCachable
    34:34:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    41:48:java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    56:56:java.lang.String deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    11:11:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    11:11:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    19:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer -> com.fasterxml.jackson.databind.deser.std.al:
# {"fileName":"ThrowableDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> D
    java.lang.String PROP_NAME_MESSAGE -> w
    java.lang.String PROP_NAME_SUPPRESSED -> x
    java.lang.String PROP_NAME_LOCALIZED_MESSAGE -> y
    34:37:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer) -> <init>
    50:50:com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.BeanDeserializer) -> construct
    58:59:void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    63:69:com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    82:193:java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.am:
# {"fileName":"TokenBufferDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    28:28:void <init>() -> <init>
    32:32:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    38:38:com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    24:24:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer -> com.fasterxml.jackson.databind.deser.std.an:
# {"fileName":"UUIDDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    int[] HEX_DIGITS -> a
    27:27:void <init>() -> <init>
    31:31:java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) -> getEmptyValue
    39:68:java.util.UUID _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    74:77:java.util.UUID _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    83:83:java.util.UUID _badFormat(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _badFormat
    88:91:int intFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> intFromChars
    95:95:int shortFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> shortFromChars
    100:112:int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext) -> byteFromChars
    118:121:int _badChar(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext,char) -> _badChar
    125:130:java.util.UUID _fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext) -> _fromBytes
    134:138:long _long(byte[],int) -> _long
    142:142:int _int(byte[],int) -> _int
    13:13:java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    13:13:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    17:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer -> com.fasterxml.jackson.databind.deser.std.ao:
# {"fileName":"UntypedObjectDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> i
    java.lang.Object[] NO_OBJECTS -> a
    com.fasterxml.jackson.databind.JsonDeserializer _mapDeserializer -> b
    com.fasterxml.jackson.databind.JsonDeserializer _listDeserializer -> c
    com.fasterxml.jackson.databind.JsonDeserializer _stringDeserializer -> d
    com.fasterxml.jackson.databind.JsonDeserializer _numberDeserializer -> e
    com.fasterxml.jackson.databind.JavaType _listType -> f
    com.fasterxml.jackson.databind.JavaType _mapType -> g
    boolean _nonMerging -> h
    77:78:void <init>() -> <init>
    81:85:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> <init>
    92:100:void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> <init>
    108:116:void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,boolean) -> <init>
    133:169:void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    176:176:com.fasterxml.jackson.databind.JsonDeserializer _findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _findCustomDeser
    180:180:com.fasterxml.jackson.databind.JsonDeserializer _clearIfStdImpl(com.fasterxml.jackson.databind.JsonDeserializer) -> _clearIfStdImpl
    192:206:com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    224:224:boolean isCachable() -> isCachable
    229:229:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    235:235:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    241:300:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    307:354:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    362:426:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    441:476:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArray
    484:487:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> mapArray
    496:554:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapObject
    562:578:java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String) -> _mapObjectWithDups
    585:594:void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object) -> _squashDups
    602:618:java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArrayToArray
    624:648:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> mapObject
    35:35:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla -> com.fasterxml.jackson.databind.deser.std.ao$a:
# {"fileName":"UntypedObjectDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std -> a
    boolean _nonMerging -> b
    673:673:void <init>() -> <init>
    676:678:void <init>(boolean) -> <init>
    681:684:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla instance(boolean) -> instance
    689:689:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    696:696:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    702:759:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    765:797:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    805:862:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    867:891:java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArray
    895:908:java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArrayToArray
    915:937:java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapObject
    946:962:java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String) -> _mapObjectWithDups
    970:979:void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object) -> _squashDups
    668:668:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR -> com.fasterxml.jackson.databind.deser.std.ap:
# {"fileName":"UntypedObjectDeserializerNR.java","id":"sourceFile"}
    long serialVersionUID -> d
    java.lang.Object[] NO_OBJECTS -> a
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR std -> b
    boolean _nonMerging -> c
    39:39:void <init>() -> <init>
    42:44:void <init>(boolean) -> <init>
    47:50:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR instance(boolean) -> instance
    55:55:com.fasterxml.jackson.databind.type.LogicalType logicalType() -> logicalType
    62:62:java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig) -> supportsUpdate
    68:103:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    111:117:java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    126:184:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    190:212:java.lang.Object _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeObjectAtName
    219:325:java.lang.Object _deserializeNR(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope) -> _deserializeNR
    334:360:java.lang.Object _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int) -> _deserializeAnyScalar
    369:385:java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String) -> _mapObjectWithDups
    393:402:void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object) -> _squashDups
    32:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope -> com.fasterxml.jackson.databind.deser.std.ap$a:
# {"fileName":"UntypedObjectDeserializerNR.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope _parent -> a
    com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope _child -> b
    boolean _isObject -> c
    boolean _squashDups -> d
    java.lang.String _deferredKey -> e
    java.util.Map _map -> f
    java.util.List _list -> g
    431:435:void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope) -> <init>
    438:442:void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope,boolean,boolean) -> <init>
    445:445:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope rootObjectScope(boolean) -> rootObjectScope
    449:449:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope rootArrayScope() -> rootArrayScope
    453:454:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope resetAsArray() -> resetAsArray
    458:460:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope resetAsObject(boolean) -> resetAsObject
    464:467:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childObject() -> childObject
    471:475:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childObject(java.lang.String) -> childObject
    479:482:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childArray() -> childArray
    486:490:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope childArray(java.lang.String) -> childArray
    500:500:boolean isObject() -> isObject
    510:518:void putValue(java.lang.String,java.lang.Object) -> putValue
    521:531:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope putDeferredValue(java.lang.Object) -> putDeferredValue
    535:539:void addValue(java.lang.Object) -> addValue
    542:545:java.lang.Object finishRootObject() -> finishRootObject
    550:560:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope finishBranchObject() -> finishBranchObject
    564:573:java.lang.Object finishRootArray(boolean) -> finishRootArray
    578:596:com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope finishBranchArray(boolean) -> finishBranchArray
    605:624:void _putValueHandleDups(java.lang.String,java.lang.Object) -> _putValueHandleDups
    633:633:java.util.Map emptyMap() -> emptyMap
    637:637:java.util.List emptyList() -> emptyList
com.fasterxml.jackson.databind.deser.std.package-info -> com.fasterxml.jackson.databind.deser.std.aq:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.exc.IgnoredPropertyException -> com.fasterxml.jackson.databind.exc.a:
# {"fileName":"IgnoredPropertyException.java","id":"sourceFile"}
    long serialVersionUID -> j
    28:29:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    39:40:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    57:68:com.fasterxml.jackson.databind.exc.IgnoredPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> from
com.fasterxml.jackson.databind.exc.InvalidDefinitionException -> com.fasterxml.jackson.databind.exc.b:
# {"fileName":"InvalidDefinitionException.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType _type -> e
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> f
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition _property -> g
    30:34:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    38:42:void <init>(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    46:50:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    54:58:void <init>(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    62:62:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> from
    67:67:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> from
    72:72:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> from
    77:77:com.fasterxml.jackson.databind.exc.InvalidDefinitionException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> from
    85:85:com.fasterxml.jackson.databind.JavaType getType() -> getType
    93:93:com.fasterxml.jackson.databind.BeanDescription getBeanDescription() -> getBeanDescription
    102:102:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition getProperty() -> getProperty
com.fasterxml.jackson.databind.exc.InvalidFormatException -> com.fasterxml.jackson.databind.exc.c:
# {"fileName":"InvalidFormatException.java","id":"sourceFile"}
    long serialVersionUID -> f
    java.lang.Object _value -> e
    37:40:void <init>(java.lang.String,java.lang.Object,java.lang.Class) -> <init>
    49:52:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Object,java.lang.Class) -> <init>
    60:62:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> <init>
    67:67:com.fasterxml.jackson.databind.exc.InvalidFormatException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> from
    83:83:java.lang.Object getValue() -> getValue
com.fasterxml.jackson.databind.exc.InvalidNullException -> com.fasterxml.jackson.databind.exc.d:
# {"fileName":"InvalidNullException.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.databind.PropertyName _propertyName -> e
    33:35:void <init>(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,com.fasterxml.jackson.databind.PropertyName) -> <init>
    40:46:com.fasterxml.jackson.databind.exc.InvalidNullException from(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType) -> from
    50:50:com.fasterxml.jackson.databind.PropertyName getPropertyName() -> getPropertyName
com.fasterxml.jackson.databind.exc.InvalidTypeIdException -> com.fasterxml.jackson.databind.exc.e:
# {"fileName":"InvalidTypeIdException.java","id":"sourceFile"}
    long serialVersionUID -> h
    com.fasterxml.jackson.databind.JavaType _baseType -> e
    java.lang.String _typeId -> f
    36:39:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> <init>
    43:43:com.fasterxml.jackson.databind.exc.InvalidTypeIdException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> from
    52:52:com.fasterxml.jackson.databind.JavaType getBaseType() -> getBaseType
    53:53:java.lang.String getTypeId() -> getTypeId
com.fasterxml.jackson.databind.exc.MismatchedInputException -> com.fasterxml.jackson.databind.exc.f:
# {"fileName":"MismatchedInputException.java","id":"sourceFile"}
    java.lang.Class _targetType -> g
    35:36:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> <init>
    39:40:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation) -> <init>
    43:45:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Class) -> <init>
    48:50:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    55:55:com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> from
    59:59:com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> from
    63:63:com.fasterxml.jackson.databind.exc.MismatchedInputException from(com.fasterxml.jackson.core.JsonParser,java.lang.Class,java.lang.String) -> from
    67:68:com.fasterxml.jackson.databind.exc.MismatchedInputException setTargetType(com.fasterxml.jackson.databind.JavaType) -> setTargetType
    76:76:java.lang.Class getTargetType() -> getTargetType
com.fasterxml.jackson.databind.exc.PropertyBindingException -> com.fasterxml.jackson.databind.exc.g:
# {"fileName":"PropertyBindingException.java","id":"sourceFile"}
    java.lang.Class _referringClass -> e
    java.lang.String _propertyName -> f
    java.util.Collection _propertyIds -> h
    java.lang.String _propertiesAsString -> i
    int MAX_DESC_LENGTH -> j
    52:56:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    66:67:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    84:112:java.lang.String getMessageSuffix() -> getMessageSuffix
    126:126:java.lang.Class getReferringClass() -> getReferringClass
    135:135:java.lang.String getPropertyName() -> getPropertyName
    140:143:java.util.Collection getKnownPropertyIds() -> getKnownPropertyIds
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException -> com.fasterxml.jackson.databind.exc.h:
# {"fileName":"UnrecognizedPropertyException.java","id":"sourceFile"}
    long serialVersionUID -> j
    24:25:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    35:36:void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection) -> <init>
    53:64:com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> from
com.fasterxml.jackson.databind.exc.ValueInstantiationException -> com.fasterxml.jackson.databind.exc.i:
# {"fileName":"ValueInstantiationException.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType _type -> e
    30:32:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.Throwable) -> <init>
    36:38:void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    42:42:com.fasterxml.jackson.databind.exc.ValueInstantiationException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> from
    47:47:com.fasterxml.jackson.databind.exc.ValueInstantiationException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.databind.JavaType,java.lang.Throwable) -> from
    55:55:com.fasterxml.jackson.databind.JavaType getType() -> getType
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers -> com.fasterxml.jackson.databind.ext.a:
# {"fileName":"CoreXMLDeserializers.java","id":"sourceFile"}
    javax.xml.datatype.DatatypeFactory _dataTypeFactory -> a
    int TYPE_DURATION -> b
    int TYPE_G_CALENDAR -> c
    int TYPE_QNAME -> d
    20:20:void <init>() -> <init>
    40:50:com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    55:55:boolean hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasDeserializerFor
    30:34:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std -> com.fasterxml.jackson.databind.ext.a$a:
# {"fileName":"CoreXMLDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> b
    int _kind -> a
    86:88:void <init>(java.lang.Class,int) -> <init>
    96:101:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    108:125:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    131:140:javax.xml.datatype.XMLGregorianCalendar _gregorianFromDate(com.fasterxml.jackson.databind.DeserializationContext,java.util.Date) -> _gregorianFromDate
com.fasterxml.jackson.databind.ext.CoreXMLSerializers -> com.fasterxml.jackson.databind.ext.b:
# {"fileName":"CoreXMLSerializers.java","id":"sourceFile"}
    30:30:void <init>() -> <init>
    36:43:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer -> com.fasterxml.jackson.databind.ext.b$a:
# {"fileName":"CoreXMLSerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer instance -> a
    com.fasterxml.jackson.databind.JsonSerializer _delegate -> b
    56:57:void <init>() -> <init>
    61:63:void <init>(com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    67:67:com.fasterxml.jackson.databind.JsonSerializer getDelegatee() -> getDelegatee
    72:72:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,javax.xml.datatype.XMLGregorianCalendar) -> isEmpty
    78:79:void serialize(javax.xml.datatype.XMLGregorianCalendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    92:98:void serializeWithType(javax.xml.datatype.XMLGregorianCalendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    102:103:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    108:112:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    116:116:java.util.Calendar _convert(javax.xml.datatype.XMLGregorianCalendar) -> _convert
    46:46:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    46:46:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    46:46:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    51:51:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.DOMDeserializer -> com.fasterxml.jackson.databind.ext.c:
# {"fileName":"DOMDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    javax.xml.parsers.DocumentBuilderFactory DEFAULT_PARSER_FACTORY -> b
    50:50:void <init>(java.lang.Class) -> <init>
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    57:59:org.w3c.dom.Document parse(java.lang.String) -> parse
    70:70:javax.xml.parsers.DocumentBuilder documentBuilder() -> documentBuilder
    28:48:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer -> com.fasterxml.jackson.databind.ext.c$a:
# {"fileName":"DOMDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    90:90:void <init>() -> <init>
    93:93:org.w3c.dom.Document _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    88:88:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer -> com.fasterxml.jackson.databind.ext.c$b:
# {"fileName":"DOMDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    81:81:void <init>() -> <init>
    84:84:org.w3c.dom.Node _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    79:79:java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.ext.DOMSerializer -> com.fasterxml.jackson.databind.ext.d:
# {"fileName":"DOMSerializer.java","id":"sourceFile"}
    javax.xml.transform.TransformerFactory transformerFactory -> a
    27:37:void <init>() -> <init>
    44:55:void serialize(org.w3c.dom.Node,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    64:64:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    69:70:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    75:79:void setTransformerFactoryAttribute(javax.xml.transform.TransformerFactory,java.lang.String,java.lang.Object) -> setTransformerFactoryAttribute
    21:21:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ext.Java7Handlers -> com.fasterxml.jackson.databind.ext.e:
# {"fileName":"Java7Handlers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ext.Java7Handlers IMPL -> a
    15:15:void <init>() -> <init>
    20:20:com.fasterxml.jackson.databind.ext.Java7Handlers instance() -> instance
    java.lang.Class getClassJavaNioFilePath() -> getClassJavaNioFilePath
    com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class) -> getDeserializerForJavaNioFilePath
    com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class) -> getSerializerForJavaNioFilePath
    17:17:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.Java7HandlersImpl -> com.fasterxml.jackson.databind.ext.f:
# {"fileName":"Java7HandlersImpl.java","id":"sourceFile"}
    java.lang.Class _pathClass -> a
    17:21:void <init>() -> <init>
    25:25:java.lang.Class getClassJavaNioFilePath() -> getClassJavaNioFilePath
    30:33:com.fasterxml.jackson.databind.JsonDeserializer getDeserializerForJavaNioFilePath(java.lang.Class) -> getDeserializerForJavaNioFilePath
    38:41:com.fasterxml.jackson.databind.JsonSerializer getSerializerForJavaNioFilePath(java.lang.Class) -> getSerializerForJavaNioFilePath
com.fasterxml.jackson.databind.ext.Java7Support -> com.fasterxml.jackson.databind.ext.g:
# {"fileName":"Java7Support.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ext.Java7Support IMPL -> a
    16:16:void <init>() -> <init>
    35:35:com.fasterxml.jackson.databind.ext.Java7Support instance() -> instance
    java.lang.Boolean findTransient(com.fasterxml.jackson.databind.introspect.Annotated) -> findTransient
    java.lang.Boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    com.fasterxml.jackson.databind.PropertyName findConstructorName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findConstructorName
    21:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.Java7SupportImpl -> com.fasterxml.jackson.databind.ext.h:
# {"fileName":"Java7SupportImpl.java","id":"sourceFile"}
    java.lang.Class _bogus -> a
    19:25:void <init>() -> <init>
    29:33:java.lang.Boolean findTransient(com.fasterxml.jackson.databind.introspect.Annotated) -> findTransient
    38:44:java.lang.Boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    50:61:com.fasterxml.jackson.databind.PropertyName findConstructorName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findConstructorName
com.fasterxml.jackson.databind.ext.NioPathDeserializer -> com.fasterxml.jackson.databind.ext.i:
# {"fileName":"NioPathDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    boolean areWindowsFilePathsSupported -> b
    41:41:void <init>() -> <init>
    45:86:java.nio.file.Path deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    24:24:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    30:39:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.NioPathSerializer -> com.fasterxml.jackson.databind.ext.j:
# {"fileName":"NioPathSerializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    22:22:void <init>() -> <init>
    27:28:void serialize(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    37:41:void serializeWithType(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    18:18:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory -> com.fasterxml.jackson.databind.ext.k:
# {"fileName":"OptionalHandlerFactory.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.lang.String PACKAGE_PREFIX_JAVAX_XML -> c
    java.lang.String SERIALIZERS_FOR_JAVAX_XML -> d
    java.lang.String DESERIALIZERS_FOR_JAVAX_XML -> e
    java.lang.String SERIALIZER_FOR_DOM_NODE -> f
    java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT -> g
    java.lang.String DESERIALIZER_FOR_DOM_NODE -> h
    java.lang.Class CLASS_DOM_NODE -> i
    java.lang.Class CLASS_DOM_DOCUMENT -> j
    com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper -> k
    com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance -> a
    java.util.Map _sqlDeserializers -> l
    java.util.Map _sqlSerializers -> m
    java.lang.String CLS_NAME_JAVA_SQL_TIMESTAMP -> n
    java.lang.String CLS_NAME_JAVA_SQL_DATE -> o
    java.lang.String CLS_NAME_JAVA_SQL_TIME -> p
    java.lang.String CLS_NAME_JAVA_SQL_BLOB -> q
    java.lang.String CLS_NAME_JAVA_SQL_SERIALBLOB -> r
    97:121:void <init>() -> <init>
    132:167:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    174:204:com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findDeserializer
    208:220:boolean hasDeserializerFor(java.lang.Class) -> hasDeserializerFor
    225:225:boolean _IsXOfY(java.lang.Class,java.lang.Class) -> _IsXOfY
    237:242:java.lang.Object instantiate(java.lang.String,com.fasterxml.jackson.databind.JavaType) -> instantiate
    249:254:java.lang.Object instantiate(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> instantiate
    268:276:boolean hasSuperClassStartingWith(java.lang.Class,java.lang.String) -> hasSuperClassStartingWith
    54:84:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ext.SqlBlobSerializer -> com.fasterxml.jackson.databind.ext.l:
# {"fileName":"SqlBlobSerializer.java","id":"sourceFile"}
    35:36:void <init>() -> <init>
    41:41:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.sql.Blob) -> isEmpty
    47:48:void serialize(java.sql.Blob,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    57:61:void serializeWithType(java.sql.Blob,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    66:74:void _writeValue(java.sql.Blob,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _writeValue
    84:88:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    29:29:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    29:29:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    29:29:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ext.package-info -> com.fasterxml.jackson.databind.ext.m:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy -> com.fasterxml.jackson.databind.introspect.a:
# {"fileName":"AccessorNamingStrategy.java","id":"sourceFile"}
    12:12:void <init>() -> <init>
    java.lang.String findNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForIsGetter
    java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForRegularGetter
    java.lang.String findNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForMutator
    java.lang.String modifyFieldName(com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> modifyFieldName
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Base -> com.fasterxml.jackson.databind.introspect.a$a:
# {"fileName":"AccessorNamingStrategy.java","id":"sourceFile"}
    long serialVersionUID -> a
    109:109:void <init>() -> <init>
    117:117:java.lang.String findNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForIsGetter
    122:122:java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForRegularGetter
    127:127:java.lang.String findNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForMutator
    132:132:java.lang.String modifyFieldName(com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> modifyFieldName
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider -> com.fasterxml.jackson.databind.introspect.a$b:
# {"fileName":"AccessorNamingStrategy.java","id":"sourceFile"}
    long serialVersionUID -> a
    140:140:void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forPOJO(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forPOJO
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.BeanDescription) -> forBuilder
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forRecord(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forRecord
com.fasterxml.jackson.databind.introspect.Annotated -> com.fasterxml.jackson.databind.introspect.b:
# {"fileName":"Annotated.java","id":"sourceFile"}
    15:15:void <init>() -> <init>
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    36:36:boolean isPublic() -> isPublic
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getRawType() -> getRawType
    java.lang.Iterable annotations() -> annotations
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata -> com.fasterxml.jackson.databind.introspect.c:
# {"fileName":"AnnotatedAndMetadata.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.Annotated annotated -> a
    java.lang.Object metadata -> b
    14:17:void <init>(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> <init>
    20:20:com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata of(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> of
com.fasterxml.jackson.databind.introspect.AnnotatedClass -> com.fasterxml.jackson.databind.introspect.d:
# {"fileName":"AnnotatedClass.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators NO_CREATORS -> o
    com.fasterxml.jackson.databind.JavaType _type -> a
    java.lang.Class _class -> b
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> c
    java.util.List _superTypes -> d
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> e
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> f
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> g
    java.lang.Class _primaryMixIn -> h
    boolean _collectAnnotations -> i
    com.fasterxml.jackson.databind.util.Annotations _classAnnotations -> j
    com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators -> k
    com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods -> l
    java.util.List _fields -> m
    java.lang.Boolean _nonStaticInnerClass -> n
    142:153:void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.List,java.lang.Class,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,boolean) -> <init>
    160:162:void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.List,java.lang.Class,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    170:181:void <init>(java.lang.Class) -> <init>
    188:188:com.fasterxml.jackson.databind.introspect.AnnotatedClass construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig) -> construct
    198:198:com.fasterxml.jackson.databind.introspect.AnnotatedClass construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> construct
    210:210:com.fasterxml.jackson.databind.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig) -> constructWithoutSuperTypes
    220:220:com.fasterxml.jackson.databind.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> constructWithoutSuperTypes
    233:233:com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    243:243:java.lang.Class getAnnotated() -> getAnnotated
    246:246:int getModifiers() -> getModifiers
    249:249:java.lang.String getName() -> getName
    253:253:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    258:258:boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    263:263:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    268:268:java.lang.Class getRawType() -> getRawType
    274:280:java.lang.Iterable annotations() -> annotations
    285:285:com.fasterxml.jackson.databind.JavaType getType() -> getType
    295:295:com.fasterxml.jackson.databind.util.Annotations getAnnotations() -> getAnnotations
    299:299:boolean hasAnnotations() -> hasAnnotations
    303:303:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor getDefaultConstructor() -> getDefaultConstructor
    307:307:java.util.List getConstructors() -> getConstructors
    314:314:java.util.List getFactoryMethods() -> getFactoryMethods
    322:322:java.util.List getStaticMethods() -> getStaticMethods
    326:326:java.lang.Iterable memberMethods() -> memberMethods
    330:330:int getMemberMethodCount() -> getMemberMethodCount
    334:334:com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    338:338:int getFieldCount() -> getFieldCount
    342:342:java.lang.Iterable fields() -> fields
    350:354:boolean isNonStaticInnerClass() -> isNonStaticInnerClass
    364:375:java.util.List _fields() -> _fields
    379:393:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _methods() -> _methods
    397:408:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators() -> _creators
    419:419:java.lang.String toString() -> toString
    424:424:int hashCode() -> hashCode
    429:433:boolean equals(java.lang.Object) -> equals
    16:16:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    20:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators -> com.fasterxml.jackson.databind.introspect.d$a:
# {"fileName":"AnnotatedClass.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor defaultConstructor -> a
    java.util.List constructors -> b
    java.util.List creatorMethods -> c
    463:467:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,java.util.List,java.util.List) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver -> com.fasterxml.jackson.databind.introspect.e:
# {"fileName":"AnnotatedClassResolver.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS -> a
    java.lang.Class CLS_OBJECT -> b
    java.lang.Class CLS_ENUM -> c
    java.lang.Class CLS_LIST -> d
    java.lang.Class CLS_MAP -> e
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> f
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> g
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> h
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> i
    com.fasterxml.jackson.databind.JavaType _type -> j
    java.lang.Class _class -> k
    java.lang.Class _primaryMixin -> l
    boolean _collectAnnotations -> m
    49:63:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    65:81:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    86:89:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolve(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> resolve
    93:93:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> resolveWithoutSuperTypes
    99:102:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> resolveWithoutSuperTypes
    108:111:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> resolveWithoutSuperTypes
    115:115:boolean skippableArray(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> skippableArray
    123:123:com.fasterxml.jackson.databind.introspect.AnnotatedClass createPrimordial(java.lang.Class) -> createPrimordial
    131:131:com.fasterxml.jackson.databind.introspect.AnnotatedClass createArrayType(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> createArrayType
    135:146:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveFully() -> resolveFully
    152:155:com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes() -> resolveWithoutSuperTypes
    162:181:void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean) -> _addSuperTypes
    186:200:void _addSuperInterfaces(com.fasterxml.jackson.databind.JavaType,java.util.List,boolean) -> _addSuperInterfaces
    203:208:boolean _contains(java.util.List,java.lang.Class) -> _contains
    225:273:com.fasterxml.jackson.databind.util.Annotations resolveClassAnnotations(java.util.List) -> resolveClassAnnotations
    279:292:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.Class,java.lang.Class) -> _addClassMixIns
    298:309:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> _addAnnotationsIfNotPresent
    315:327:com.fasterxml.jackson.databind.introspect.AnnotationCollector _addFromBundleIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> _addFromBundleIfNotPresent
    27:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor -> com.fasterxml.jackson.databind.introspect.f:
# {"fileName":"AnnotatedConstructor.java","id":"sourceFile"}
    long serialVersionUID -> e
    java.lang.reflect.Constructor _constructor -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization _serialization -> b
    34:39:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    47:50:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization) -> <init>
    54:54:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    64:64:java.lang.reflect.Constructor getAnnotated() -> getAnnotated
    67:67:int getModifiers() -> getModifiers
    70:70:java.lang.String getName() -> getName
    74:74:com.fasterxml.jackson.databind.JavaType getType() -> getType
    79:79:java.lang.Class getRawType() -> getRawType
    90:90:int getParameterCount() -> getParameterCount
    96:97:java.lang.Class getRawParameterType(int) -> getRawParameterType
    102:106:com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    112:116:java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    123:123:java.lang.Object call() -> call
    128:128:java.lang.Object call(java.lang.Object[]) -> call
    133:133:java.lang.Object call1(java.lang.Object) -> call1
    143:143:java.lang.Class getDeclaringClass() -> getDeclaringClass
    146:146:java.lang.reflect.Member getMember() -> getMember
    152:153:void setValue(java.lang.Object,java.lang.Object) -> setValue
    160:161:java.lang.Object getValue(java.lang.Object) -> getValue
    172:174:java.lang.String toString() -> toString
    180:180:int hashCode() -> hashCode
    185:194:boolean equals(java.lang.Object) -> equals
    205:205:java.lang.Object writeReplace() -> writeReplace
    209:219:java.lang.Object readResolve() -> readResolve
    10:10:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    10:10:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization -> com.fasterxml.jackson.databind.introspect.f$a:
# {"fileName":"AnnotatedConstructor.java","id":"sourceFile"}
    long serialVersionUID -> c
    java.lang.Class clazz -> a
    java.lang.Class[] args -> b
    235:238:void <init>(java.lang.reflect.Constructor) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector -> com.fasterxml.jackson.databind.introspect.g:
# {"fileName":"AnnotatedCreatorCollector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext -> d
    boolean _collectAnnotations -> e
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor -> f
    43:46:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,boolean) -> <init>
    57:61:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators collectCreators(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean) -> collectCreators
    70:95:com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators collect(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> collect
    106:188:java.util.List _findPotentialConstructors(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findPotentialConstructors
    194:275:java.util.List _findPotentialFactories(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findPotentialFactories
    280:283:boolean _isIncludableFactoryMethod(java.lang.reflect.Method) -> _isIncludableFactoryMethod
    289:290:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor constructDefaultConstructor(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> constructDefaultConstructor
    298:349:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor constructNonDefaultConstructor(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> constructNonDefaultConstructor
    355:366:com.fasterxml.jackson.databind.introspect.AnnotatedMethod constructFactoryCreator(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method) -> constructFactoryCreator
    370:383:com.fasterxml.jackson.databind.introspect.AnnotationMap[] collectAnnotations(java.lang.annotation.Annotation[][],java.lang.annotation.Annotation[][]) -> collectAnnotations
    389:396:com.fasterxml.jackson.databind.introspect.AnnotationMap collectAnnotations(com.fasterxml.jackson.databind.util.ClassUtil$Ctor,com.fasterxml.jackson.databind.util.ClassUtil$Ctor) -> collectAnnotations
    400:404:com.fasterxml.jackson.databind.introspect.AnnotationMap collectAnnotations(java.lang.reflect.AnnotatedElement,java.lang.reflect.AnnotatedElement) -> collectAnnotations
    409:409:boolean isIncludableConstructor(java.lang.reflect.Constructor) -> isIncludableConstructor
com.fasterxml.jackson.databind.introspect.AnnotatedField -> com.fasterxml.jackson.databind.introspect.h:
# {"fileName":"AnnotatedField.java","id":"sourceFile"}
    long serialVersionUID -> e
    java.lang.reflect.Field _field -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization -> b
    39:41:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> <init>
    45:45:com.fasterxml.jackson.databind.introspect.AnnotatedField withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    53:56:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization) -> <init>
    65:65:java.lang.reflect.Field getAnnotated() -> getAnnotated
    68:68:int getModifiers() -> getModifiers
    71:71:java.lang.String getName() -> getName
    75:75:java.lang.Class getRawType() -> getRawType
    80:80:com.fasterxml.jackson.databind.JavaType getType() -> getType
    90:90:java.lang.Class getDeclaringClass() -> getDeclaringClass
    93:93:java.lang.reflect.Member getMember() -> getMember
    99:104:void setValue(java.lang.Object,java.lang.Object) -> setValue
    110:113:java.lang.Object getValue(java.lang.Object) -> getValue
    123:123:int getAnnotationCount() -> getAnnotationCount
    128:128:boolean isTransient() -> isTransient
    132:132:int hashCode() -> hashCode
    137:146:boolean equals(java.lang.Object) -> equals
    152:152:java.lang.String toString() -> toString
    162:162:java.lang.Object writeReplace() -> writeReplace
    166:176:java.lang.Object readResolve() -> readResolve
    12:12:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    12:12:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization -> com.fasterxml.jackson.databind.introspect.h$a:
# {"fileName":"AnnotatedField.java","id":"sourceFile"}
    long serialVersionUID -> c
    java.lang.Class clazz -> a
    java.lang.String name -> b
    192:196:void <init>(java.lang.reflect.Field) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector -> com.fasterxml.jackson.databind.introspect.i:
# {"fileName":"AnnotatedFieldCollector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> d
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> e
    boolean _collectAnnotations -> f
    31:35:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> <init>
    42:43:java.util.List collectFields(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,boolean) -> collectFields
    48:56:java.util.List collect(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType) -> collect
    65:97:java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.Map) -> _findFields
    108:123:void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map) -> _addFieldMixIns
    128:137:boolean _isIncludableField(java.lang.reflect.Field) -> _isIncludableField
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder -> com.fasterxml.jackson.databind.introspect.i$a:
# {"fileName":"AnnotatedFieldCollector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext -> a
    java.lang.reflect.Field field -> b
    com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations -> c
    146:150:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field) -> <init>
    153:153:com.fasterxml.jackson.databind.introspect.AnnotatedField build() -> build
com.fasterxml.jackson.databind.introspect.AnnotatedMember -> com.fasterxml.jackson.databind.introspect.j:
# {"fileName":"AnnotatedMember.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext -> c
    com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations -> d
    36:39:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> <init>
    46:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> <init>
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    67:67:java.lang.String getFullName() -> getFullName
    80:80:com.fasterxml.jackson.databind.introspect.TypeResolutionContext getTypeContext() -> getTypeContext
    85:88:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    93:96:boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    101:104:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    110:113:java.lang.Iterable annotations() -> annotations
    121:121:com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    137:141:void fixAccess(boolean) -> fixAccess
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
com.fasterxml.jackson.databind.introspect.AnnotatedMethod -> com.fasterxml.jackson.databind.introspect.k:
# {"fileName":"AnnotatedMethod.java","id":"sourceFile"}
    long serialVersionUID -> g
    java.lang.reflect.Method _method -> a
    java.lang.Class[] _paramClasses -> b
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization -> e
    37:42:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    50:53:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization) -> <init>
    57:57:com.fasterxml.jackson.databind.introspect.AnnotatedMethod withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    61:61:java.lang.reflect.Method getAnnotated() -> getAnnotated
    64:64:int getModifiers() -> getModifiers
    67:67:java.lang.String getName() -> getName
    76:76:com.fasterxml.jackson.databind.JavaType getType() -> getType
    86:86:java.lang.Class getRawType() -> getRawType
    99:99:java.lang.Object call() -> call
    104:104:java.lang.Object call(java.lang.Object[]) -> call
    109:109:java.lang.Object call1(java.lang.Object) -> call1
    113:113:java.lang.Object callOn(java.lang.Object) -> callOn
    117:117:java.lang.Object callOnWith(java.lang.Object,java.lang.Object[]) -> callOnWith
    128:128:int getParameterCount() -> getParameterCount
    134:135:java.lang.Class getRawParameterType(int) -> getRawParameterType
    140:144:com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    150:154:java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    158:158:java.lang.Class getDeclaringClass() -> getDeclaringClass
    161:161:java.lang.reflect.Method getMember() -> getMember
    167:172:void setValue(java.lang.Object,java.lang.Object) -> setValue
    178:181:java.lang.Object getValue(java.lang.Object) -> getValue
    193:201:java.lang.String getFullName() -> getFullName
    206:209:java.lang.Class[] getRawParameterTypes() -> getRawParameterTypes
    214:214:java.lang.reflect.Type[] getGenericParameterTypes() -> getGenericParameterTypes
    218:218:java.lang.Class getRawReturnType() -> getRawReturnType
    232:234:boolean hasReturnType() -> hasReturnType
    245:245:java.lang.String toString() -> toString
    250:250:int hashCode() -> hashCode
    255:264:boolean equals(java.lang.Object) -> equals
    275:275:java.lang.Object writeReplace() -> writeReplace
    279:290:java.lang.Object readResolve() -> readResolve
    8:8:java.lang.reflect.Member getMember() -> getMember
    8:8:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    8:8:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization -> com.fasterxml.jackson.databind.introspect.k$a:
# {"fileName":"AnnotatedMethod.java","id":"sourceFile"}
    long serialVersionUID -> d
    java.lang.Class clazz -> a
    java.lang.String name -> b
    java.lang.Class[] args -> c
    307:311:void <init>(java.lang.reflect.Method) -> <init>
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector -> com.fasterxml.jackson.databind.introspect.l:
# {"fileName":"AnnotatedMethodCollector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> d
    boolean _collectAnnotations -> e
    27:30:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> <init>
    39:40:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collectMethods(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class,boolean) -> collectMethods
    46:103:com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collect(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class) -> collect
    110:150:void _addMemberMethods(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class) -> _addMemberMethods
    155:175:void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class) -> _addMethodMixIns
    179:187:boolean _isIncludableMemberMethod(java.lang.reflect.Method) -> _isIncludableMemberMethod
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder -> com.fasterxml.jackson.databind.introspect.l$a:
# {"fileName":"AnnotatedMethodCollector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext -> a
    java.lang.reflect.Method method -> b
    com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations -> c
    198:202:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationCollector) -> <init>
    205:210:com.fasterxml.jackson.databind.introspect.AnnotatedMethod build() -> build
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap -> com.fasterxml.jackson.databind.introspect.m:
# {"fileName":"AnnotatedMethodMap.java","id":"sourceFile"}
    java.util.Map _methods -> a
    16:16:void <init>() -> <init>
    21:23:void <init>(java.util.Map) -> <init>
    26:26:int size() -> size
    31:34:com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> find
    39:42:com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.reflect.Method) -> find
    54:57:java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.introspect.AnnotatedParameter -> com.fasterxml.jackson.databind.introspect.n:
# {"fileName":"AnnotatedParameter.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _owner -> a
    com.fasterxml.jackson.databind.JavaType _type -> b
    int _index -> e
    45:49:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,int) -> <init>
    53:56:com.fasterxml.jackson.databind.introspect.AnnotatedParameter withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    70:70:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    77:77:int getModifiers() -> getModifiers
    84:84:java.lang.String getName() -> getName
    88:88:java.lang.Class getRawType() -> getRawType
    93:93:com.fasterxml.jackson.databind.JavaType getType() -> getType
    104:104:java.lang.Class getDeclaringClass() -> getDeclaringClass
    111:111:java.lang.reflect.Member getMember() -> getMember
    117:118:void setValue(java.lang.Object,java.lang.Object) -> setValue
    124:125:java.lang.Object getValue(java.lang.Object) -> getValue
    134:134:java.lang.reflect.Type getParameterType() -> getParameterType
    142:142:com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getOwner() -> getOwner
    149:149:int getIndex() -> getIndex
    159:159:int hashCode() -> hashCode
    164:169:boolean equals(java.lang.Object) -> equals
    174:174:java.lang.String toString() -> toString
    15:15:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedWithParams -> com.fasterxml.jackson.databind.introspect.o:
# {"fileName":"AnnotatedWithParams.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations -> f
    31:33:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    39:41:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotationMap[]) -> <init>
    51:57:void addOrOverrideParam(int,java.lang.annotation.Annotation) -> addOrOverrideParam
    65:66:com.fasterxml.jackson.databind.introspect.AnnotatedParameter replaceParameterAnnotations(int,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> replaceParameterAnnotations
    77:82:com.fasterxml.jackson.databind.introspect.AnnotationMap getParameterAnnotations(int) -> getParameterAnnotations
    86:87:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getParameter(int) -> getParameter
    int getParameterCount() -> getParameterCount
    java.lang.Class getRawParameterType(int) -> getRawParameterType
    com.fasterxml.jackson.databind.JavaType getParameterType(int) -> getParameterType
    java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    105:105:int getAnnotationCount() -> getAnnotationCount
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
com.fasterxml.jackson.databind.introspect.AnnotationCollector -> com.fasterxml.jackson.databind.introspect.p:
# {"fileName":"AnnotationCollector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS -> a
    java.lang.Object _data -> b
    25:27:void <init>(java.lang.Object) -> <init>
    29:29:com.fasterxml.jackson.databind.util.Annotations emptyAnnotations() -> emptyAnnotations
    32:32:com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector() -> emptyCollector
    36:36:com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector(java.lang.Object) -> emptyCollector
    com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    43:43:java.lang.Object getData() -> getData
    boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector -> com.fasterxml.jackson.databind.introspect.p$a:
# {"fileName":"AnnotationCollector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector instance -> c
    66:66:void <init>(java.lang.Object) -> <init>
    70:70:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    75:75:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    79:79:boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    83:83:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    64:64:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector -> com.fasterxml.jackson.databind.introspect.p$b:
# {"fileName":"AnnotationCollector.java","id":"sourceFile"}
    java.util.HashMap _annotations -> c
    133:137:void <init>(java.lang.Object,java.lang.Class,java.lang.annotation.Annotation,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    141:147:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    152:156:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    161:161:boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    166:167:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations -> com.fasterxml.jackson.databind.introspect.p$c:
# {"fileName":"AnnotationCollector.java","id":"sourceFile"}
    long serialVersionUID -> a
    188:188:void <init>() -> <init>
    192:192:java.lang.annotation.Annotation get(java.lang.Class) -> get
    197:197:boolean has(java.lang.Class) -> has
    202:202:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    207:207:int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation -> com.fasterxml.jackson.databind.introspect.p$d:
# {"fileName":"AnnotationCollector.java","id":"sourceFile"}
    long serialVersionUID -> a
    java.lang.Class _type -> b
    java.lang.annotation.Annotation _value -> c
    219:222:void <init>(java.lang.Class,java.lang.annotation.Annotation) -> <init>
    227:230:java.lang.annotation.Annotation get(java.lang.Class) -> get
    235:235:boolean has(java.lang.Class) -> has
    240:245:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    250:250:int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector -> com.fasterxml.jackson.databind.introspect.p$e:
# {"fileName":"AnnotationCollector.java","id":"sourceFile"}
    java.lang.Class _type -> c
    java.lang.annotation.Annotation _value -> d
    94:97:void <init>(java.lang.Object,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    101:101:com.fasterxml.jackson.databind.util.Annotations asAnnotations() -> asAnnotations
    106:106:com.fasterxml.jackson.databind.introspect.AnnotationMap asAnnotationMap() -> asAnnotationMap
    111:111:boolean isPresent(java.lang.annotation.Annotation) -> isPresent
    116:122:com.fasterxml.jackson.databind.introspect.AnnotationCollector addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations -> com.fasterxml.jackson.databind.introspect.p$f:
# {"fileName":"AnnotationCollector.java","id":"sourceFile"}
    long serialVersionUID -> a
    java.lang.Class _type1 -> b
    java.lang.Class _type2 -> c
    java.lang.annotation.Annotation _value1 -> d
    java.lang.annotation.Annotation _value2 -> e
    263:268:void <init>(java.lang.Class,java.lang.annotation.Annotation,java.lang.Class,java.lang.annotation.Annotation) -> <init>
    273:279:java.lang.annotation.Annotation get(java.lang.Class) -> get
    284:284:boolean has(java.lang.Class) -> has
    289:294:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    299:299:int size() -> size
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair -> com.fasterxml.jackson.databind.introspect.q:
# {"fileName":"AnnotationIntrospectorPair.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.AnnotationIntrospector _primary -> a
    com.fasterxml.jackson.databind.AnnotationIntrospector _secondary -> b
    44:47:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> <init>
    51:51:com.fasterxml.jackson.core.Version version() -> version
    62:68:com.fasterxml.jackson.databind.AnnotationIntrospector create(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> create
    73:73:java.util.Collection allIntrospectors() -> allIntrospectors
    79:81:java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    88:88:boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    100:109:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    116:119:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnoralByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnoralByName
    125:128:com.fasterxml.jackson.annotation.JsonIncludeProperties$Value findPropertyInclusionByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusionByName
    134:138:java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    144:148:java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> findFilterId
    154:158:java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    164:168:java.lang.Object findEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findEnumNamingStrategy
    173:177:java.lang.String findClassDescription(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findClassDescription
    183:187:java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated,boolean) -> findPropertiesToIgnore
    194:198:java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    205:208:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnorals
    224:225:com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    238:242:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    249:253:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    260:264:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    270:277:java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    283:287:java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    297:298:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    303:304:com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    309:316:com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValue
    321:321:boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    326:327:java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    333:334:java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    341:345:java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    351:355:java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    361:365:java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    371:375:java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findNullSerializer
    382:388:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusion
    393:394:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    399:400:java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationConverter
    405:406:java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findSerializationContentConverter
    415:419:java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    424:425:java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    430:431:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    437:439:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    444:449:com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    454:464:com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated) -> findWrapperName
    469:470:java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDefaultValue
    475:476:java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDescription
    481:482:java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIndex
    487:488:java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findImplicitPropertyName
    493:494:java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAliases
    499:507:com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAccess
    514:518:com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> resolveSetterConflict
    524:528:com.fasterxml.jackson.databind.PropertyName findRenameByField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName) -> findRenameByField
    537:538:com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineSerializationType
    545:546:java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    551:552:java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationSortAlphabetically
    559:561:void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> findAndAddVirtualProperties
    567:577:com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    582:586:java.lang.Boolean hasAsKey(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsKey
    591:595:java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsValue
    600:604:java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnyGetter
    610:612:java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> findEnumValues
    618:620:void findEnumAliases(java.lang.Class,java.lang.Enum[],java.lang.String[][]) -> findEnumAliases
    624:625:java.lang.Enum findDefaultEnumValue(java.lang.Class) -> findDefaultEnumValue
    631:632:java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    638:638:boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    644:644:boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    651:655:java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    661:665:java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    671:675:java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    682:683:java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializationConverter
    688:689:java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findDeserializationContentConverter
    699:700:com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineDeserializationType
    707:708:java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    713:714:java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    719:720:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    729:738:com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    743:747:java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnySetter
    752:755:com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findSetterInfo
    760:764:java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findMergeInfo
    770:770:boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    776:780:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorBinding
    785:786:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorAnnotation
    792:792:boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    796:802:boolean _isExplicitClassOrOb(java.lang.Object,java.lang.Class) -> _isExplicitClassOrOb
    807:813:java.lang.Object _explicitClassOrOb(java.lang.Object,java.lang.Class) -> _explicitClassOrOb
com.fasterxml.jackson.databind.introspect.AnnotationMap -> com.fasterxml.jackson.databind.introspect.r:
# {"fileName":"AnnotationMap.java","id":"sourceFile"}
    java.util.HashMap _annotations -> a
    18:18:void <init>() -> <init>
    21:23:com.fasterxml.jackson.databind.introspect.AnnotationMap of(java.lang.Class,java.lang.annotation.Annotation) -> of
    26:28:void <init>(java.util.HashMap) -> <init>
    40:43:java.lang.annotation.Annotation get(java.lang.Class) -> get
    49:52:boolean has(java.lang.Class) -> has
    63:70:boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    83:86:java.lang.Iterable annotations() -> annotations
    91:106:com.fasterxml.jackson.databind.introspect.AnnotationMap merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> merge
    111:111:int size() -> size
    120:124:boolean addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    134:134:boolean add(java.lang.annotation.Annotation) -> add
    139:142:java.lang.String toString() -> toString
    152:156:boolean _add(java.lang.annotation.Annotation) -> _add
com.fasterxml.jackson.databind.introspect.BasicBeanDescription -> com.fasterxml.jackson.databind.introspect.s:
# {"fileName":"BasicBeanDescription.java","id":"sourceFile"}
    java.lang.Class[] NO_VIEWS -> j
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector _propCollector -> b
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> c
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classInfo -> e
    java.lang.Class[] _defaultViews -> f
    boolean _defaultViewsResolved -> g
    java.util.List _properties -> h
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> i
    96:106:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> <init>
    115:126:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> <init>
    130:132:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> <init>
    139:139:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> forDeserialization
    147:147:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> forSerialization
    158:159:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forOtherUse
    163:166:java.util.List _properties() -> _properties
    184:192:boolean removeProperty(java.lang.String) -> removeProperty
    198:202:boolean addProperty(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> addProperty
    209:209:boolean hasProperty(com.fasterxml.jackson.databind.PropertyName) -> hasProperty
    217:222:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition findProperty(com.fasterxml.jackson.databind.PropertyName) -> findProperty
    232:232:com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    235:235:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    239:239:java.util.List findProperties() -> findProperties
    244:245:com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonKeyAccessor() -> findJsonKeyAccessor
    251:252:com.fasterxml.jackson.databind.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    257:258:com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor() -> findJsonValueAccessor
    263:268:java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    273:273:boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    278:278:com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    284:284:com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    292:292:com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    297:297:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    303:334:com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor() -> findAnySetterAccessor
    339:342:java.util.Map findInjectables() -> findInjectables
    347:347:java.util.List getConstructors() -> getConstructors
    352:364:java.util.List getConstructorsWithMode() -> getConstructorsWithMode
    369:387:java.lang.Object instantiateBean(boolean) -> instantiateBean
    399:399:com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    413:431:com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> findExpectedFormat
    437:449:java.lang.Class[] findDefaultViews() -> findDefaultViews
    461:464:com.fasterxml.jackson.databind.util.Converter findSerializationConverter() -> findSerializationConverter
    475:481:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> findPropertyInclusion
    493:520:com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> findAnyGetter
    526:545:java.util.List findBackReferences() -> findBackReferences
    552:560:java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    573:589:java.util.List getFactoryMethods() -> getFactoryMethods
    595:613:java.util.List getFactoryMethodsWithMode() -> getFactoryMethodsWithMode
    620:631:java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    639:652:java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    659:688:boolean isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isFactoryMethod
    696:727:com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata findFactoryMethodMetadata(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> findFactoryMethodMetadata
    736:743:com.fasterxml.jackson.databind.PropertyName _findCreatorPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> _findCreatorPropertyName
    754:755:java.lang.Class findPOJOBuilder() -> findPOJOBuilder
    761:762:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> findPOJOBuilderConfig
    768:771:com.fasterxml.jackson.databind.util.Converter findDeserializationConverter() -> findDeserializationConverter
    776:777:java.lang.String findClassDescription() -> findClassDescription
    802:815:java.util.LinkedHashMap _findPropertyFields(java.util.Collection,boolean) -> _findPropertyFields
    827:852:com.fasterxml.jackson.databind.util.Converter _createConverter(java.lang.Object) -> _createConverter
    31:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector -> com.fasterxml.jackson.databind.introspect.t:
# {"fileName":"BasicClassIntrospector.java","id":"sourceFile"}
    long serialVersionUID -> f
    java.lang.Class CLS_OBJECT -> g
    java.lang.Class CLS_STRING -> h
    java.lang.Class CLS_JSON_NODE -> i
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription STRING_DESC -> a
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription BOOLEAN_DESC -> b
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription INT_DESC -> c
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription LONG_DESC -> d
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription OBJECT_DESC -> e
    61:62:void <init>() -> <init>
    66:66:com.fasterxml.jackson.databind.introspect.ClassIntrospector copy() -> copy
    80:90:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    98:108:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    116:116:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.BeanDescription) -> forDeserializationWithBuilder
    126:126:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    134:144:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    151:156:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    163:168:com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    183:187:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> collectProperties
    195:197:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean,java.lang.String) -> collectProperties
    207:210:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.BeanDescription,boolean) -> collectPropertiesWithBuilder
    217:217:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> collectPropertiesWithBuilder
    230:230:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy) -> constructPropertyCollector
    238:238:com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String) -> constructPropertyCollector
    247:278:com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdTypeDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> _findStdTypeDesc
    288:300:boolean _isStdJDKCollection(com.fasterxml.jackson.databind.JavaType) -> _isStdJDKCollection
    305:309:com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findStdJdkCollectionDesc(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> _findStdJdkCollectionDesc
    317:317:com.fasterxml.jackson.databind.introspect.AnnotatedClass _resolveAnnotatedClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> _resolveAnnotatedClass
    325:325:com.fasterxml.jackson.databind.introspect.AnnotatedClass _resolveAnnotatedWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> _resolveAnnotatedWithoutSuperTypes
    11:11:com.fasterxml.jackson.databind.BeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    11:11:com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    11:11:com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    11:11:com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    11:11:com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.BeanDescription) -> forDeserializationWithBuilder
    11:11:com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    11:11:com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    17:53:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition -> com.fasterxml.jackson.databind.introspect.u:
# {"fileName":"BeanPropertyDefinition.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE -> a
    20:20:void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withSimpleName(java.lang.String) -> withSimpleName
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    67:67:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    java.lang.String getInternalName() -> getInternalName
    com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    108:108:boolean isExplicitlyNamed() -> isExplicitlyNamed
    com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    143:143:boolean isRequired() -> isRequired
    152:152:boolean couldDeserialize() -> couldDeserialize
    153:153:boolean couldSerialize() -> couldSerialize
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    178:178:java.util.Iterator getConstructorParameters() -> getConstructorParameters
    188:192:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor() -> getAccessor
    201:208:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMutator() -> getMutator
    215:219:com.fasterxml.jackson.databind.introspect.AnnotatedMember getNonConstructorMutator() -> getNonConstructorMutator
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    248:248:java.lang.Class[] findViews() -> findViews
    254:254:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> findReferenceType
    260:261:java.lang.String findReferenceName() -> findReferenceName
    269:269:boolean isTypeId() -> isTypeId
    276:276:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> findObjectIdInfo
    com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    23:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.ClassIntrospector -> com.fasterxml.jackson.databind.introspect.v:
# {"fileName":"ClassIntrospector.java","id":"sourceFile"}
    48:48:void <init>() -> <init>
    com.fasterxml.jackson.databind.introspect.ClassIntrospector copy() -> copy
    com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.BeanDescription) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver -> com.fasterxml.jackson.databind.introspect.v$a:
# {"fileName":"ClassIntrospector.java","id":"sourceFile"}
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver copy() -> copy
com.fasterxml.jackson.databind.introspect.CollectorBase -> com.fasterxml.jackson.databind.introspect.w:
# {"fileName":"CollectorBase.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> a
    java.lang.annotation.Annotation[] NO_ANNOTATIONS -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> c
    18:20:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector) -> <init>
    25:33:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(java.lang.annotation.Annotation[]) -> collectAnnotations
    37:44:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> collectAnnotations
    48:65:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> collectFromBundle
    73:82:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation[]) -> collectDefaultAnnotations
    87:102:com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultFromBundle(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.annotation.Annotation) -> collectDefaultFromBundle
    106:106:boolean _ignorableAnnotation(java.lang.annotation.Annotation) -> _ignorableAnnotation
    110:110:com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap() -> _emptyAnnotationMap
    114:121:com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> _emptyAnnotationMaps
    13:14:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase -> com.fasterxml.jackson.databind.introspect.x:
# {"fileName":"ConcreteBeanPropertyBase.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> t
    java.util.List _aliases -> u
    37:39:void <init>(com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    41:43:void <init>(com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase) -> <init>
    46:46:boolean isRequired() -> isRequired
    49:49:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    52:52:boolean isVirtual() -> isVirtual
    57:67:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector) -> findFormatOverrides
    73:85:com.fasterxml.jackson.annotation.JsonFormat$Value findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyFormat
    91:105:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> findPropertyInclusion
    111:125:java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig) -> findAliases
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy -> com.fasterxml.jackson.databind.introspect.y:
# {"fileName":"DefaultAccessorNamingStrategy.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _forClass -> b
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator -> c
    boolean _stdBeanNaming -> d
    boolean _isGettersNonBoolean -> e
    java.lang.String _getterPrefix -> f
    java.lang.String _isGetterPrefix -> g
    java.lang.String _mutatorPrefix -> h
    64:74:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String,java.lang.String,java.lang.String,com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator) -> <init>
    79:88:java.lang.String findNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForIsGetter
    94:103:boolean _booleanType(com.fasterxml.jackson.databind.JavaType) -> _booleanType
    109:128:java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForRegularGetter
    134:139:java.lang.String findNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForMutator
    145:145:java.lang.String modifyFieldName(com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> modifyFieldName
    163:195:java.lang.String legacyManglePropertyName(java.lang.String,int) -> legacyManglePropertyName
    200:229:java.lang.String stdManglePropertyName(java.lang.String,int) -> stdManglePropertyName
    245:263:boolean _isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _isCglibGetCallbacks
    268:268:boolean _isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _isGroovyMetaClassGetter
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator -> com.fasterxml.jackson.databind.introspect.y$a:
# {"fileName":"DefaultAccessorNamingStrategy.java","id":"sourceFile"}
    boolean accept(char,java.lang.String,int) -> accept
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator -> com.fasterxml.jackson.databind.introspect.y$b:
# {"fileName":"DefaultAccessorNamingStrategy.java","id":"sourceFile"}
    boolean _allowLowerCaseFirstChar -> a
    boolean _allowNonLetterFirstChar -> b
    490:493:void <init>(boolean,boolean) -> <init>
    511:514:com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator forFirstNameRule(boolean,boolean) -> forFirstNameRule
    522:526:boolean accept(char,java.lang.String,int) -> accept
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider -> com.fasterxml.jackson.databind.introspect.y$c:
# {"fileName":"DefaultAccessorNamingStrategy.java","id":"sourceFile"}
    long serialVersionUID -> f
    java.lang.String _setterPrefix -> a
    java.lang.String _withPrefix -> b
    java.lang.String _getterPrefix -> c
    java.lang.String _isGetterPrefix -> d
    com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator -> e
    310:312:void <init>() -> <init>
    318:320:void <init>(com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    324:326:void <init>(com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider,com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator) -> <init>
    331:337:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator) -> <init>
    351:351:com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withSetterPrefix(java.lang.String) -> withSetterPrefix
    367:367:com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withBuilderPrefix(java.lang.String) -> withBuilderPrefix
    383:383:com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withGetterPrefix(java.lang.String) -> withGetterPrefix
    399:399:com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withIsGetterPrefix(java.lang.String) -> withIsGetterPrefix
    431:432:com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withFirstCharAcceptance(boolean,boolean) -> withFirstCharAcceptance
    446:446:com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider withBaseNameValidator(com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator) -> withBaseNameValidator
    452:452:com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forPOJO(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forPOJO
    461:464:com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.BeanDescription) -> forBuilder
    472:472:com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy forRecord(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forRecord
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$RecordNaming -> com.fasterxml.jackson.databind.introspect.y$d:
# {"fileName":"DefaultAccessorNamingStrategy.java","id":"sourceFile"}
    java.util.Set _fieldNames -> i
    548:559:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> <init>
    567:571:java.lang.String findNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> findNameForRegularGetter
com.fasterxml.jackson.databind.introspect.EnumNamingStrategyFactory -> com.fasterxml.jackson.databind.introspect.z:
# {"fileName":"EnumNamingStrategyFactory.java","id":"sourceFile"}
    14:14:void <init>() -> <init>
    38:60:com.fasterxml.jackson.databind.EnumNamingStrategy createEnumNamingStrategyInstance(java.lang.Object,boolean) -> createEnumNamingStrategyInstance
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector -> com.fasterxml.jackson.databind.introspect.aa:
# {"fileName":"JacksonAnnotationIntrospector.java","id":"sourceFile"}
    long serialVersionUID -> c
    java.lang.Class[] ANNOTATIONS_TO_INFER_SER -> d
    java.lang.Class[] ANNOTATIONS_TO_INFER_DESER -> e
    com.fasterxml.jackson.databind.ext.Java7Support _java7Helper -> f
    com.fasterxml.jackson.databind.util.LRUMap _annotationsInside -> a
    boolean _cfgConstructorPropertiesImpliesCreator -> b
    87:111:void <init>() -> <init>
    115:115:com.fasterxml.jackson.core.Version version() -> version
    119:122:java.lang.Object readResolve() -> readResolve
    143:144:com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector setConstructorPropertiesImpliesCreator(boolean) -> setConstructorPropertiesImpliesCreator
    163:170:boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    192:207:java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    212:240:java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[]) -> findEnumValues
    248:265:void findEnumAliases(java.lang.Class,java.lang.Enum[],java.lang.String[][]) -> findEnumAliases
    278:278:java.lang.Enum findDefaultEnumValue(java.lang.Class) -> findDefaultEnumValue
    290:298:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    303:304:java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    310:314:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnoralByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnoralByName
    321:321:com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value findPropertyIgnorals(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIgnorals
    327:331:com.fasterxml.jackson.annotation.JsonIncludeProperties$Value findPropertyInclusionByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusionByName
    336:344:java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated) -> findFilterId
    350:351:java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    356:357:java.lang.Object findEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findEnumNamingStrategy
    362:363:java.lang.String findClassDescription(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findClassDescription
    376:377:com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    388:389:java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findImplicitPropertyName
    394:407:java.util.List findPropertyAliases(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAliases
    412:412:boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    418:422:java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    427:431:com.fasterxml.jackson.annotation.JsonProperty$Access findPropertyAccess(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyAccess
    436:437:java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDescription
    442:449:java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyIndex
    454:460:java.lang.String findPropertyDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyDefaultValue
    465:468:com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    474:482:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    488:496:com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    501:522:com.fasterxml.jackson.annotation.JacksonInject$Value findInjectableValue(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValue
    528:529:java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    535:536:java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    557:580:com.fasterxml.jackson.databind.introspect.AnnotatedMethod resolveSetterConflict(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> resolveSetterConflict
    587:587:com.fasterxml.jackson.databind.PropertyName findRenameByField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName) -> findRenameByField
    600:600:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    611:615:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    624:627:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    633:650:java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    657:679:java.util.List findSubtypesCheckRepeatedNames(java.lang.String,com.fasterxml.jackson.annotation.JsonSubTypes$Type[]) -> findSubtypesCheckRepeatedNames
    685:686:java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    691:691:java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    702:708:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    713:720:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    732:751:java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    757:765:java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    771:779:java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    785:793:java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findNullSerializer
    799:806:com.fasterxml.jackson.annotation.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertyInclusion
    811:826:com.fasterxml.jackson.annotation.JsonInclude$Value _refinePropertyInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Value) -> _refinePropertyInclusion
    832:833:com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    838:839:java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationConverter
    844:845:java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findSerializationContentConverter
    859:967:com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineSerializationType
    978:979:java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    984:984:java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationSortAlphabetically
    988:994:java.lang.Boolean _findSortAlpha(com.fasterxml.jackson.databind.introspect.Annotated) -> _findSortAlpha
    1000:1033:void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List) -> findAndAddVirtualProperties
    1038:1056:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend$Attr,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> _constructVirtualProperty
    1062:1084:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructVirtualProperty(com.fasterxml.jackson.databind.annotation.JsonAppend$Prop,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> _constructVirtualProperty
    1096:1118:com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    1123:1127:java.lang.Boolean hasAsKey(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsKey
    1132:1136:java.lang.Boolean hasAsValue(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAsValue
    1141:1145:java.lang.Boolean hasAnyGetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnyGetter
    1152:1152:boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    1158:1160:boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    1172:1180:java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    1186:1193:java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    1199:1207:java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    1213:1214:java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializationConverter
    1220:1221:java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findDeserializationContentConverter
    1234:1285:com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> refineDeserializationType
    1297:1299:java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    1305:1306:java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    1312:1313:com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    1327:1350:com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    1355:1356:java.lang.Boolean hasAnySetter(com.fasterxml.jackson.databind.introspect.Annotated) -> hasAnySetter
    1361:1361:com.fasterxml.jackson.annotation.JsonSetter$Value findSetterInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findSetterInfo
    1366:1367:java.lang.Boolean findMergeInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findMergeInfo
    1373:1373:boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    1383:1399:boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    1405:1406:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorBinding(com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorBinding
    1411:1429:com.fasterxml.jackson.annotation.JsonCreator$Mode findCreatorAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated) -> findCreatorAnnotation
    1440:1450:boolean _isIgnorable(com.fasterxml.jackson.databind.introspect.Annotated) -> _isIgnorable
    1454:1457:java.lang.Class _classIfExplicit(java.lang.Class) -> _classIfExplicit
    1461:1462:java.lang.Class _classIfExplicit(java.lang.Class,java.lang.Class) -> _classIfExplicit
    1466:1472:com.fasterxml.jackson.databind.PropertyName _propertyName(java.lang.String,java.lang.String) -> _propertyName
    1477:1490:com.fasterxml.jackson.databind.PropertyName _findConstructorName(com.fasterxml.jackson.databind.introspect.Annotated) -> _findConstructorName
    1503:1550:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> _findTypeResolver
    1558:1558:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> _constructStdTypeResolverBuilder
    1566:1566:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructNoTypeResolverBuilder() -> _constructNoTypeResolverBuilder
    1571:1577:boolean _primitiveAndWrapper(java.lang.Class,java.lang.Class) -> _primitiveAndWrapper
    1582:1588:boolean _primitiveAndWrapper(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _primitiveAndWrapper
    1593:1593:com.fasterxml.jackson.databind.JsonMappingException _databindException(java.lang.String) -> _databindException
    1598:1598:com.fasterxml.jackson.databind.JsonMappingException _databindException(java.lang.Throwable,java.lang.String) -> _databindException
    37:73:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1 -> com.fasterxml.jackson.databind.introspect.aa$1:
# {"fileName":"JacksonAnnotationIntrospector.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$annotation$JsonSerialize$Inclusion -> a
    813:813:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.MemberKey -> com.fasterxml.jackson.databind.introspect.ab:
# {"fileName":"MemberKey.java","id":"sourceFile"}
    java.lang.Class[] NO_CLASSES -> a
    java.lang.String _name -> b
    java.lang.Class[] _argTypes -> c
    20:21:void <init>(java.lang.reflect.Method) -> <init>
    25:26:void <init>(java.lang.reflect.Constructor) -> <init>
    29:32:void <init>(java.lang.String,java.lang.Class[]) -> <init>
    35:35:java.lang.String getName() -> getName
    39:39:int argCount() -> argCount
    44:44:java.lang.String toString() -> toString
    49:49:int hashCode() -> hashCode
    55:94:boolean equals(java.lang.Object) -> equals
    13:13:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver -> com.fasterxml.jackson.databind.introspect.ac:
# {"fileName":"MethodGenericTypeResolver.java","id":"sourceFile"}
    23:23:void <init>() -> <init>
    42:43:com.fasterxml.jackson.databind.introspect.TypeResolutionContext narrowMethodTypeParameters(java.lang.reflect.Method,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext) -> narrowMethodTypeParameters
    56:134:com.fasterxml.jackson.databind.type.TypeBindings bindMethodTypeParameters(java.lang.reflect.Method,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.TypeResolutionContext) -> bindMethodTypeParameters
    139:154:java.lang.reflect.TypeVariable maybeGetTypeVariable(java.lang.reflect.Type) -> maybeGetTypeVariable
    159:174:java.lang.reflect.ParameterizedType maybeGetParameterizedType(java.lang.reflect.Type) -> maybeGetParameterizedType
    179:184:boolean pessimisticallyValidateBounds(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type[]) -> pessimisticallyValidateBounds
    189:210:boolean pessimisticallyValidateBound(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type) -> pessimisticallyValidateBound
    214:222:java.lang.reflect.TypeVariable findByName(java.lang.reflect.TypeVariable[],java.lang.String) -> findByName
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector -> com.fasterxml.jackson.databind.introspect.ad:
# {"fileName":"NopAnnotationIntrospector.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector instance -> a
    12:12:void <init>() -> <init>
    34:34:com.fasterxml.jackson.core.Version version() -> version
    23:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1 -> com.fasterxml.jackson.databind.introspect.ad$1:
# {"fileName":"NopAnnotationIntrospector.java","id":"sourceFile"}
    long serialVersionUID -> b
    23:23:void <init>() -> <init>
    28:28:com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.databind.introspect.ObjectIdInfo -> com.fasterxml.jackson.databind.introspect.ae:
# {"fileName":"ObjectIdInfo.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.PropertyName _propertyName -> a
    java.lang.Class _generator -> b
    java.lang.Class _resolver -> c
    java.lang.Class _scope -> d
    boolean _alwaysAsId -> e
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo EMPTY -> f
    31:32:void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    37:39:void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean) -> <init>
    43:52:void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class) -> <init>
    55:55:com.fasterxml.jackson.databind.introspect.ObjectIdInfo empty() -> empty
    59:62:com.fasterxml.jackson.databind.introspect.ObjectIdInfo withAlwaysAsId(boolean) -> withAlwaysAsId
    65:65:com.fasterxml.jackson.databind.PropertyName getPropertyName() -> getPropertyName
    66:66:java.lang.Class getScope() -> getScope
    67:67:java.lang.Class getGeneratorType() -> getGeneratorType
    68:68:java.lang.Class getResolverType() -> getResolverType
    69:69:boolean getAlwaysAsId() -> getAlwaysAsId
    73:75:java.lang.String toString() -> toString
    26:26:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector -> com.fasterxml.jackson.databind.introspect.af:
# {"fileName":"POJOPropertiesCollector.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> a
    com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy _accessorNaming -> b
    boolean _forSerialization -> c
    com.fasterxml.jackson.databind.JavaType _type -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classDef -> e
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> f
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> g
    boolean _useAnnotations -> h
    boolean _isRecordType -> i
    boolean _collected -> j
    java.util.LinkedHashMap _properties -> k
    java.util.LinkedList _creatorProperties -> l
    java.util.Map _fieldRenameMappings -> m
    java.util.LinkedList _anyGetters -> n
    java.util.LinkedList _anyGetterField -> o
    java.util.LinkedList _anySetters -> p
    java.util.LinkedList _anySetterField -> q
    java.util.LinkedList _jsonKeyAccessors -> r
    java.util.LinkedList _jsonValueAccessors -> s
    java.util.HashSet _ignoredPropertyNames -> t
    java.util.LinkedHashMap _injectables -> u
    boolean _stdBeanNaming -> v
    java.lang.String _mutatorPrefix -> w
    158:192:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy) -> <init>
    202:205:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String) -> <init>
    209:213:com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy _accessorNaming(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String) -> _accessorNaming
    223:223:com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    227:227:com.fasterxml.jackson.databind.JavaType getType() -> getType
    234:234:boolean isRecordType() -> isRecordType
    238:238:com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassDef() -> getClassDef
    242:242:com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    247:248:java.util.List getProperties() -> getProperties
    252:255:java.util.Map getInjectables() -> getInjectables
    262:277:com.fasterxml.jackson.databind.introspect.AnnotatedMember getJsonKeyAccessor() -> getJsonKeyAccessor
    285:301:com.fasterxml.jackson.databind.introspect.AnnotatedMember getJsonValueAccessor() -> getJsonValueAccessor
    312:312:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetter() -> getAnyGetter
    320:330:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetterField() -> getAnyGetterField
    338:348:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetterMethod() -> getAnyGetterMethod
    353:363:com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnySetterField() -> getAnySetterField
    368:378:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getAnySetterMethod() -> getAnySetterMethod
    386:386:java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    395:399:com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    404:407:java.util.Map getPropertyMap() -> getPropertyMap
    412:416:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getJsonValueMethod() -> getJsonValueMethod
    421:421:java.lang.Class findPOJOBuilderClass() -> findPOJOBuilderClass
    437:498:void collectAll() -> collectAll
    511:630:void _addFields(java.util.Map) -> _addFields
    638:687:void _addCreators(java.util.Map) -> _addCreators
    695:696:void _addCreatorParam(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> _addCreatorParam
    702:746:void _addCreatorParam(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> _addCreatorParam
    753:773:void _addMethods(java.util.Map) -> _addMethods
    781:857:void _addGetterMethod(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _addGetterMethod
    864:897:void _addSetterMethod(java.util.Map,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _addSetterMethod
    902:913:void _addInjectables(java.util.Map) -> _addInjectables
    917:932:void _doAddInjectable(com.fasterxml.jackson.annotation.JacksonInject$Value,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _doAddInjectable
    935:935:com.fasterxml.jackson.databind.PropertyName _propNameFromSimple(java.lang.String) -> _propNameFromSimple
    940:948:java.lang.String _checkRenameByField(java.lang.String) -> _checkRenameByField
    963:1000:void _removeUnwantedProperties(java.util.Map) -> _removeUnwantedProperties
    1011:1022:void _removeUnwantedAccessor(java.util.Map) -> _removeUnwantedAccessor
    1031:1037:void _collectIgnorals(java.lang.String) -> _collectIgnorals
    1048:1114:void _renameProperties(java.util.Map) -> _renameProperties
    1119:1165:void _renameUsing(java.util.Map,com.fasterxml.jackson.databind.PropertyNamingStrategy) -> _renameUsing
    1171:1208:void _renameWithWrappers(java.util.Map) -> _renameWithWrappers
    1223:1322:void _sortProperties(java.util.Map) -> _sortProperties
    1325:1330:boolean _anyIndexed(java.util.Collection) -> _anyIndexed
    1353:1372:boolean _resolveFieldVsGetter(java.util.List) -> _resolveFieldVsGetter
    1382:1385:void reportProblem(java.lang.String,java.lang.Object[]) -> reportProblem
    1390:1397:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.util.Map,com.fasterxml.jackson.databind.PropertyName) -> _property
    1404:1410:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.util.Map,java.lang.String) -> _property
    1415:1447:com.fasterxml.jackson.databind.PropertyNamingStrategy _findNamingStrategy() -> _findNamingStrategy
    1452:1453:void _updateCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List) -> _updateCreatorProperty
    1456:1465:boolean _replaceCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List) -> _replaceCreatorProperty
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder -> com.fasterxml.jackson.databind.introspect.ag:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty NOT_REFEFERENCE_PROP -> m
    boolean _forSerialization -> b
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> c
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> d
    com.fasterxml.jackson.databind.PropertyName _name -> e
    com.fasterxml.jackson.databind.PropertyName _internalName -> f
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _fields -> g
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _ctorParameters -> h
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _getters -> i
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _setters -> j
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> k
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty _referenceInfo -> l
    77:78:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean,com.fasterxml.jackson.databind.PropertyName) -> <init>
    82:88:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName) -> <init>
    92:102:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,com.fasterxml.jackson.databind.PropertyName) -> <init>
    112:112:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    118:119:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withSimpleName(java.lang.String) -> withSimpleName
    134:144:int compareTo(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> compareTo
    155:155:java.lang.String getName() -> getName
    160:160:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    165:165:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    169:169:java.lang.String getInternalName() -> getInternalName
    178:180:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    193:200:boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    206:209:boolean isExplicitlyNamed() -> isExplicitlyNamed
    222:246:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    258:331:com.fasterxml.jackson.databind.PropertyMetadata _getSetterInfo(com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _getSetterInfo
    341:369:com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    374:374:java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    384:384:boolean hasGetter() -> hasGetter
    387:387:boolean hasSetter() -> hasSetter
    390:390:boolean hasField() -> hasField
    393:393:boolean hasConstructorParameter() -> hasConstructorParameter
    397:397:boolean couldDeserialize() -> couldDeserialize
    402:402:boolean couldSerialize() -> couldSerialize
    409:453:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    462:466:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetterUnchecked() -> getGetterUnchecked
    473:497:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    506:510:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetterUnchecked() -> getSetterUnchecked
    532:563:com.fasterxml.jackson.databind.introspect.AnnotatedMethod _selectSetterFromMultiple(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _selectSetterFromMultiple
    570:601:com.fasterxml.jackson.databind.introspect.AnnotatedMethod _selectSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _selectSetter
    607:629:com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    638:642:com.fasterxml.jackson.databind.introspect.AnnotatedField getFieldUnchecked() -> getFieldUnchecked
    648:666:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    671:674:java.util.Iterator getConstructorParameters() -> getConstructorParameters
    679:687:com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    695:726:com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMemberUnchecked() -> getPrimaryMemberUnchecked
    731:740:int _getterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _getterPriority
    745:750:int _setterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _setterPriority
    761:761:java.lang.Class[] findViews() -> findViews
    773:787:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> findReferenceType
    792:798:boolean isTypeId() -> isTypeId
    803:803:com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> findObjectIdInfo
    817:824:com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    828:828:com.fasterxml.jackson.annotation.JsonProperty$Access findAccess() -> findAccess
    843:844:void addField(com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addField
    847:848:void addCtor(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addCtor
    851:852:void addGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addGetter
    855:856:void addSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> addSetter
    864:868:void addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> addAll
    872:878:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked merge(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> merge
    893:897:void removeIgnored() -> removeIgnored
    901:901:com.fasterxml.jackson.annotation.JsonProperty$Access removeNonVisible(boolean) -> removeNonVisible
    917:959:com.fasterxml.jackson.annotation.JsonProperty$Access removeNonVisible(boolean,com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> removeNonVisible
    968:969:void removeConstructors() -> removeConstructors
    978:982:void trimByVisibility() -> trimByVisibility
    987:1007:void mergeAnnotations(boolean) -> mergeAnnotations
    1012:1018:com.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[]) -> _mergeAnnotations
    1031:1035:com.fasterxml.jackson.databind.introspect.AnnotationMap _getAllAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _getAllAnnotations
    1049:1053:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _applyAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> _applyAnnotations
    1058:1061:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeIgnored(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _removeIgnored
    1066:1069:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeNonVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _removeNonVisible
    1074:1077:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _trimByVisibility(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _trimByVisibility
    1088:1093:boolean _anyExplicits(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicits
    1098:1103:boolean _anyExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicitNames
    1107:1110:boolean anyVisible() -> anyVisible
    1116:1121:boolean _anyVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyVisible
    1125:1128:boolean anyIgnorals() -> anyIgnorals
    1134:1139:boolean _anyIgnorals(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyIgnorals
    1144:1148:boolean anyExplicitsWithoutIgnoral() -> anyExplicitsWithoutIgnoral
    1153:1159:boolean _anyExplicitsWithoutIgnoral(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicitsWithoutIgnoral
    1164:1170:boolean _anyExplicitNamesWithoutIgnoral(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _anyExplicitNamesWithoutIgnoral
    1181:1189:java.util.Set findExplicitNames() -> findExplicitNames
    1202:1207:java.util.Collection explode(java.util.Collection) -> explode
    1215:1251:void _explode(java.util.Collection,java.util.Map,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> _explode
    1256:1271:java.util.Set _findExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,java.util.Set) -> _findExplicitNames
    1278:1286:java.lang.String toString() -> toString
    1301:1319:java.lang.Object fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember) -> fromMemberAnnotations
    1324:1381:java.lang.Object fromMemberAnnotationsExcept(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember,java.lang.Object) -> fromMemberAnnotationsExcept
    1391:1401:java.lang.Class _rawTypeOf(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _rawTypeOf
    21:21:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withSimpleName(java.lang.String) -> withSimpleName
    21:21:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    21:21:int compareTo(java.lang.Object) -> compareTo
    31:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1 -> com.fasterxml.jackson.databind.introspect.ag$1:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    761:761:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    764:764:java.lang.Class[] withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    761:761:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2 -> com.fasterxml.jackson.databind.introspect.ag$2:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    780:780:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    783:783:com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    780:780:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3 -> com.fasterxml.jackson.databind.introspect.ag$3:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    792:792:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    795:795:java.lang.Boolean withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    792:792:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4 -> com.fasterxml.jackson.databind.introspect.ag$4:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    803:803:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    806:810:com.fasterxml.jackson.databind.introspect.ObjectIdInfo withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    803:803:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5 -> com.fasterxml.jackson.databind.introspect.ag$5:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    828:828:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> <init>
    831:831:com.fasterxml.jackson.annotation.JsonProperty$Access withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
    828:828:java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6 -> com.fasterxml.jackson.databind.introspect.ag$6:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonProperty$Access -> a
    921:921:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked -> com.fasterxml.jackson.databind.introspect.ag$a:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    java.lang.Object value -> a
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> b
    com.fasterxml.jackson.databind.PropertyName name -> c
    boolean isNameExplicit -> d
    boolean isVisible -> e
    boolean isMarkedIgnored -> f
    1462:1482:void <init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean) -> <init>
    1485:1488:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNext() -> withoutNext
    1492:1495:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withValue(java.lang.Object) -> withValue
    1499:1502:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> withNext
    1506:1515:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored() -> withoutIgnored
    1519:1520:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible() -> withoutNonVisible
    1528:1531:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> append
    1535:1553:com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility() -> trimByVisibility
    1558:1563:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator -> com.fasterxml.jackson.databind.introspect.ag$b:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> a
    1422:1424:void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> <init>
    1428:1428:boolean hasNext() -> hasNext
    1433:1436:com.fasterxml.jackson.databind.introspect.AnnotatedMember next() -> next
    1441:1441:void remove() -> remove
    1417:1417:java.lang.Object next() -> next
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember -> com.fasterxml.jackson.databind.introspect.ag$c:
# {"fileName":"POJOPropertyBuilder.java","id":"sourceFile"}
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver -> com.fasterxml.jackson.databind.introspect.ah:
# {"fileName":"SimpleMixInResolver.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _overrides -> a
    java.util.Map _localMixIns -> b
    35:37:void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> <init>
    40:43:void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,java.util.Map) -> <init>
    50:50:com.fasterxml.jackson.databind.introspect.SimpleMixInResolver withOverrides(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> withOverrides
    58:58:com.fasterxml.jackson.databind.introspect.SimpleMixInResolver withoutLocalDefinitions() -> withoutLocalDefinitions
    62:71:void setLocalDefinitions(java.util.Map) -> setLocalDefinitions
    74:78:void addLocalDefinition(java.lang.Class,java.lang.Class) -> addLocalDefinition
    82:86:com.fasterxml.jackson.databind.introspect.SimpleMixInResolver copy() -> copy
    92:96:java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    100:100:int localSize() -> localSize
    118:129:boolean hasMixIns() -> hasMixIns
    18:18:com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver copy() -> copy
com.fasterxml.jackson.databind.introspect.TypeResolutionContext -> com.fasterxml.jackson.databind.introspect.ai:
# {"fileName":"TypeResolutionContext.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic -> com.fasterxml.jackson.databind.introspect.ai$a:
# {"fileName":"TypeResolutionContext.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> a
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> b
    24:27:void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings) -> <init>
    33:33:com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty -> com.fasterxml.jackson.databind.introspect.ai$b:
# {"fileName":"TypeResolutionContext.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> a
    55:57:void <init>(com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    61:61:com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember -> com.fasterxml.jackson.databind.introspect.aj:
# {"fileName":"VirtualAnnotatedMember.java","id":"sourceFile"}
    long serialVersionUID -> f
    java.lang.Class _declaringClass -> a
    com.fasterxml.jackson.databind.JavaType _type -> b
    java.lang.String _name -> e
    37:41:void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.lang.String,com.fasterxml.jackson.databind.JavaType) -> <init>
    45:45:com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    55:55:java.lang.reflect.Field getAnnotated() -> getAnnotated
    58:58:int getModifiers() -> getModifiers
    61:61:java.lang.String getName() -> getName
    65:65:java.lang.Class getRawType() -> getRawType
    70:70:com.fasterxml.jackson.databind.JavaType getType() -> getType
    80:80:java.lang.Class getDeclaringClass() -> getDeclaringClass
    83:83:java.lang.reflect.Member getMember() -> getMember
    87:87:void setValue(java.lang.Object,java.lang.Object) -> setValue
    92:92:java.lang.Object getValue(java.lang.Object) -> getValue
    101:101:int getAnnotationCount() -> getAnnotationCount
    105:105:int hashCode() -> hashCode
    110:116:boolean equals(java.lang.Object) -> equals
    121:121:java.lang.String toString() -> toString
    14:14:java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
com.fasterxml.jackson.databind.introspect.VisibilityChecker -> com.fasterxml.jackson.databind.introspect.ak:
# {"fileName":"VisibilityChecker.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isSetterVisible
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> isFieldVisible
com.fasterxml.jackson.databind.introspect.VisibilityChecker$1 -> com.fasterxml.jackson.databind.introspect.ak$1:
# {"fileName":"VisibilityChecker.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor -> a
    336:336:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std -> com.fasterxml.jackson.databind.introspect.ak$a:
# {"fileName":"VisibilityChecker.java","id":"sourceFile"}
    long serialVersionUID -> h
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std DEFAULT -> a
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std ALL_PUBLIC -> b
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterMinLevel -> c
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterMinLevel -> d
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterMinLevel -> e
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorMinLevel -> f
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldMinLevel -> g
    196:196:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std defaultInstance() -> defaultInstance
    203:203:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std allPublicInstance() -> allPublicInstance
    212:219:void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect) -> <init>
    226:232:void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    241:256:void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> <init>
    262:262:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std construct(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> construct
    274:282:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std _with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> _with
    288:298:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    304:314:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    318:321:com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _defaultOrOverride(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> _defaultOrOverride
    327:330:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    336:352:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    358:360:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    365:367:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    372:374:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    379:381:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    386:388:com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    399:399:boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    404:404:boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isCreatorVisible
    409:409:boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    414:414:boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> isFieldVisible
    419:419:boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    424:424:boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGetterVisible
    429:429:boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    434:434:boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isIsGetterVisible
    439:439:boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    444:444:boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isSetterVisible
    455:455:java.lang.String toString() -> toString
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker withOverrides(com.fasterxml.jackson.annotation.JsonAutoDetect$Value) -> withOverrides
    154:154:com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    164:178:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.introspect.WithMember -> com.fasterxml.jackson.databind.introspect.al:
# {"fileName":"WithMember.java","id":"sourceFile"}
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.introspect.package-info -> com.fasterxml.jackson.databind.introspect.am:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.jdk14.JDK14Util -> com.fasterxml.jackson.databind.jdk14.a:
# {"fileName":"JDK14Util.java","id":"sourceFile"}
    26:26:void <init>() -> <init>
    29:29:java.lang.String[] getRecordFieldNames(java.lang.Class) -> getRecordFieldNames
    34:34:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findRecordConstructor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> findRecordConstructor
    39:40:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findRecordConstructor(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.List) -> findRecordConstructor
com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator -> com.fasterxml.jackson.databind.jdk14.a$a:
# {"fileName":"JDK14Util.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _recordClass -> a
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector _intr -> c
    java.util.List _constructors -> d
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _primaryConstructor -> e
    com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName[] _recordFields -> f
    168:212:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.cfg.MapperConfig) -> <init>
    219:243:com.fasterxml.jackson.databind.introspect.AnnotatedConstructor locate(java.util.List) -> locate
com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName -> com.fasterxml.jackson.databind.jdk14.a$b:
# {"fileName":"JDK14Util.java","id":"sourceFile"}
    java.lang.Class rawType -> a
    java.lang.String name -> b
    152:155:void <init>(java.lang.Class,java.lang.String) -> <init>
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor -> com.fasterxml.jackson.databind.jdk14.a$c:
# {"fileName":"JDK14Util.java","id":"sourceFile"}
    java.lang.reflect.Method RECORD_GET_RECORD_COMPONENTS -> a
    java.lang.reflect.Method RECORD_COMPONENT_GET_NAME -> b
    java.lang.reflect.Method RECORD_COMPONENT_GET_TYPE -> c
    com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor INSTANCE -> d
    java.lang.RuntimeException PROBLEM -> e
    63:74:void <init>() -> <init>
    77:80:com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor instance() -> instance
    85:100:java.lang.String[] getRecordFieldNames(java.lang.Class) -> getRecordFieldNames
    105:130:com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName[] getRecordFields(java.lang.Class) -> getRecordFields
    136:142:java.lang.Object[] recordComponents(java.lang.Class) -> recordComponents
    52:61:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jdk14.package-info -> com.fasterxml.jackson.databind.jdk14.b:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.json.JsonMapper -> com.fasterxml.jackson.databind.json.a:
# {"fileName":"JsonMapper.java","id":"sourceFile"}
    long serialVersionUID -> q
    89:90:void <init>() -> <init>
    93:94:void <init>(com.fasterxml.jackson.core.JsonFactory) -> <init>
    97:98:void <init>(com.fasterxml.jackson.databind.json.JsonMapper) -> <init>
    103:104:com.fasterxml.jackson.databind.json.JsonMapper copy() -> copy
    114:114:com.fasterxml.jackson.databind.json.JsonMapper$Builder builder() -> builder
    118:118:com.fasterxml.jackson.databind.json.JsonMapper$Builder builder(com.fasterxml.jackson.core.JsonFactory) -> builder
    124:124:com.fasterxml.jackson.databind.json.JsonMapper$Builder rebuild() -> rebuild
    135:135:com.fasterxml.jackson.core.Version version() -> version
    140:140:com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    153:153:boolean isEnabled(com.fasterxml.jackson.core.json.JsonReadFeature) -> isEnabled
    157:157:boolean isEnabled(com.fasterxml.jackson.core.json.JsonWriteFeature) -> isEnabled
    17:17:com.fasterxml.jackson.databind.ObjectMapper copy() -> copy
com.fasterxml.jackson.databind.json.JsonMapper$Builder -> com.fasterxml.jackson.databind.json.a$a:
# {"fileName":"JsonMapper.java","id":"sourceFile"}
    30:31:void <init>(com.fasterxml.jackson.databind.json.JsonMapper) -> <init>
    34:37:com.fasterxml.jackson.databind.json.JsonMapper$Builder enable(com.fasterxml.jackson.core.json.JsonReadFeature[]) -> enable
    41:44:com.fasterxml.jackson.databind.json.JsonMapper$Builder disable(com.fasterxml.jackson.core.json.JsonReadFeature[]) -> disable
    49:54:com.fasterxml.jackson.databind.json.JsonMapper$Builder configure(com.fasterxml.jackson.core.json.JsonReadFeature,boolean) -> configure
    58:61:com.fasterxml.jackson.databind.json.JsonMapper$Builder enable(com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> enable
    65:68:com.fasterxml.jackson.databind.json.JsonMapper$Builder disable(com.fasterxml.jackson.core.json.JsonWriteFeature[]) -> disable
    73:78:com.fasterxml.jackson.databind.json.JsonMapper$Builder configure(com.fasterxml.jackson.core.json.JsonWriteFeature,boolean) -> configure
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.a:
# {"fileName":"JsonAnyFormatVisitor.java","id":"sourceFile"}
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.a$a:
# {"fileName":"JsonAnyFormatVisitor.java","id":"sourceFile"}
    10:10:void <init>() -> <init>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.b:
# {"fileName":"JsonArrayFormatVisitor.java","id":"sourceFile"}
    void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> itemsFormat
    void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes) -> itemsFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.b$a:
# {"fileName":"JsonArrayFormatVisitor.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.SerializerProvider _provider -> a
    36:36:void <init>() -> <init>
    37:37:void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    40:40:com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    43:43:void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
    47:47:void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> itemsFormat
    51:51:void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes) -> itemsFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.c:
# {"fileName":"JsonBooleanFormatVisitor.java","id":"sourceFile"}
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.c$a:
# {"fileName":"JsonBooleanFormatVisitor.java","id":"sourceFile"}
    10:10:void <init>() -> <init>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes -> com.fasterxml.jackson.databind.jsonFormatVisitors.d:
# {"fileName":"JsonFormatTypes.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes STRING -> a
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes NUMBER -> b
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes INTEGER -> c
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes BOOLEAN -> d
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes OBJECT -> e
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes ARRAY -> f
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes NULL -> g
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes ANY -> h
    java.util.Map _byLCName -> i
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes[] $VALUES -> j
    8:8:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes[] values() -> values
    8:8:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    28:28:java.lang.String value() -> value
    33:33:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes forValue(java.lang.String) -> forValue
    8:24:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable -> com.fasterxml.jackson.databind.jsonFormatVisitors.e:
# {"fileName":"JsonFormatVisitable.java","id":"sourceFile"}
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider -> com.fasterxml.jackson.databind.jsonFormatVisitors.f:
# {"fileName":"JsonFormatVisitorWithSerializerProvider.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper -> com.fasterxml.jackson.databind.jsonFormatVisitors.g:
# {"fileName":"JsonFormatVisitorWrapper.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor expectObjectFormat(com.fasterxml.jackson.databind.JavaType) -> expectObjectFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor expectArrayFormat(com.fasterxml.jackson.databind.JavaType) -> expectArrayFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor expectStringFormat(com.fasterxml.jackson.databind.JavaType) -> expectStringFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor expectNumberFormat(com.fasterxml.jackson.databind.JavaType) -> expectNumberFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor expectIntegerFormat(com.fasterxml.jackson.databind.JavaType) -> expectIntegerFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor expectBooleanFormat(com.fasterxml.jackson.databind.JavaType) -> expectBooleanFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor expectNullFormat(com.fasterxml.jackson.databind.JavaType) -> expectNullFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor expectAnyFormat(com.fasterxml.jackson.databind.JavaType) -> expectAnyFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor expectMapFormat(com.fasterxml.jackson.databind.JavaType) -> expectMapFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.g$a:
# {"fileName":"JsonFormatVisitorWrapper.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.SerializerProvider _provider -> a
    75:75:void <init>() -> <init>
    77:79:void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    83:83:com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    88:89:void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
    94:94:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor expectObjectFormat(com.fasterxml.jackson.databind.JavaType) -> expectObjectFormat
    100:100:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor expectArrayFormat(com.fasterxml.jackson.databind.JavaType) -> expectArrayFormat
    106:106:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor expectStringFormat(com.fasterxml.jackson.databind.JavaType) -> expectStringFormat
    112:112:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor expectNumberFormat(com.fasterxml.jackson.databind.JavaType) -> expectNumberFormat
    118:118:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor expectIntegerFormat(com.fasterxml.jackson.databind.JavaType) -> expectIntegerFormat
    124:124:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor expectBooleanFormat(com.fasterxml.jackson.databind.JavaType) -> expectBooleanFormat
    130:130:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor expectNullFormat(com.fasterxml.jackson.databind.JavaType) -> expectNullFormat
    136:136:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor expectAnyFormat(com.fasterxml.jackson.databind.JavaType) -> expectAnyFormat
    142:142:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor expectMapFormat(com.fasterxml.jackson.databind.JavaType) -> expectMapFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.h:
# {"fileName":"JsonIntegerFormatVisitor.java","id":"sourceFile"}
    void numberType(com.fasterxml.jackson.core.JsonParser$NumberType) -> numberType
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.h$a:
# {"fileName":"JsonIntegerFormatVisitor.java","id":"sourceFile"}
    20:20:void <init>() -> <init>
    23:23:void numberType(com.fasterxml.jackson.core.JsonParser$NumberType) -> numberType
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.i:
# {"fileName":"JsonMapFormatVisitor.java","id":"sourceFile"}
    void keyFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> keyFormat
    void valueFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> valueFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.i$a:
# {"fileName":"JsonMapFormatVisitor.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.SerializerProvider _provider -> a
    31:31:void <init>() -> <init>
    32:32:void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    35:35:com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    38:38:void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
    41:41:void keyFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> keyFormat
    43:43:void valueFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> valueFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.j:
# {"fileName":"JsonNullFormatVisitor.java","id":"sourceFile"}
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.j$a:
# {"fileName":"JsonNullFormatVisitor.java","id":"sourceFile"}
    9:9:void <init>() -> <init>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.k:
# {"fileName":"JsonNumberFormatVisitor.java","id":"sourceFile"}
    void numberType(com.fasterxml.jackson.core.JsonParser$NumberType) -> numberType
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.k$a:
# {"fileName":"JsonNumberFormatVisitor.java","id":"sourceFile"}
    20:20:void <init>() -> <init>
    23:23:void numberType(com.fasterxml.jackson.core.JsonParser$NumberType) -> numberType
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.l:
# {"fileName":"JsonObjectFormatVisitor.java","id":"sourceFile"}
    void property(com.fasterxml.jackson.databind.BeanProperty) -> property
    void property(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> property
    void optionalProperty(com.fasterxml.jackson.databind.BeanProperty) -> optionalProperty
    void optionalProperty(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> optionalProperty
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.l$a:
# {"fileName":"JsonObjectFormatVisitor.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.SerializerProvider _provider -> a
    42:42:void <init>() -> <init>
    43:43:void <init>(com.fasterxml.jackson.databind.SerializerProvider) -> <init>
    46:46:com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    49:49:void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
    52:52:void property(com.fasterxml.jackson.databind.BeanProperty) -> property
    56:56:void property(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> property
    59:59:void optionalProperty(com.fasterxml.jackson.databind.BeanProperty) -> optionalProperty
    63:63:void optionalProperty(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> optionalProperty
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.m:
# {"fileName":"JsonStringFormatVisitor.java","id":"sourceFile"}
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.m$a:
# {"fileName":"JsonStringFormatVisitor.java","id":"sourceFile"}
    10:10:void <init>() -> <init>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat -> com.fasterxml.jackson.databind.jsonFormatVisitors.n:
# {"fileName":"JsonValueFormat.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat COLOR -> a
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat DATE -> b
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat DATE_TIME -> c
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat EMAIL -> d
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat HOST_NAME -> e
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat IP_ADDRESS -> f
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat IPV6 -> g
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat PHONE -> h
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat REGEX -> i
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat STYLE -> j
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat TIME -> k
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat URI -> l
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat UTC_MILLISEC -> m
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat UUID -> n
    java.lang.String _desc -> o
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat[] $VALUES -> p
    10:10:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat[] values() -> values
    10:10:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat valueOf(java.lang.String) -> valueOf
    99:101:void <init>(java.lang.String,int,java.lang.String) -> <init>
    105:105:java.lang.String toString() -> toString
    10:94:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.o:
# {"fileName":"JsonValueFormatVisitor.java","id":"sourceFile"}
    void format(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> format
    void enumTypes(java.util.Set) -> enumTypes
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor$Base -> com.fasterxml.jackson.databind.jsonFormatVisitors.o$a:
# {"fileName":"JsonValueFormatVisitor.java","id":"sourceFile"}
    22:22:void <init>() -> <init>
    24:24:void format(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> format
    26:26:void enumTypes(java.util.Set) -> enumTypes
com.fasterxml.jackson.databind.jsonFormatVisitors.package-info -> com.fasterxml.jackson.databind.jsonFormatVisitors.p:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.jsonschema.JsonSchema -> com.fasterxml.jackson.databind.jsonschema.a:
# {"fileName":"JsonSchema.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.node.ObjectNode schema -> a
    37:39:void <init>(com.fasterxml.jackson.databind.node.ObjectNode) -> <init>
    53:53:com.fasterxml.jackson.databind.node.ObjectNode getSchemaNode() -> getSchemaNode
    59:59:java.lang.String toString() -> toString
    65:65:int hashCode() -> hashCode
    71:79:boolean equals(java.lang.Object) -> equals
    89:93:com.fasterxml.jackson.databind.JsonNode getDefaultSchemaNode() -> getDefaultSchemaNode
com.fasterxml.jackson.databind.jsonschema.JsonSerializableSchema -> com.fasterxml.jackson.databind.jsonschema.b:
# {"fileName":"JsonSerializableSchema.java","id":"sourceFile"}
    java.lang.String NO_VALUE -> a
    java.lang.String id() -> id
    java.lang.String schemaType() -> schemaType
    java.lang.String schemaObjectPropertiesDefinition() -> schemaObjectPropertiesDefinition
    java.lang.String schemaItemDefinition() -> schemaItemDefinition
com.fasterxml.jackson.databind.jsonschema.SchemaAware -> com.fasterxml.jackson.databind.jsonschema.c:
# {"fileName":"SchemaAware.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
com.fasterxml.jackson.databind.jsonschema.package-info -> com.fasterxml.jackson.databind.jsonschema.d:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator -> com.fasterxml.jackson.databind.jsontype.a:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    long serialVersionUID -> e
    java.util.Set _invalidBaseTypes -> a
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _baseTypeMatchers -> b
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] _subTypeNameMatchers -> c
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _subClassMatchers -> d
    384:389:void <init>(java.util.Set,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[],com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[]) -> <init>
    392:392:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder builder() -> builder
    398:411:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    420:428:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    436:445:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder -> com.fasterxml.jackson.databind.jsontype.a$a:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    java.util.Set _invalidBaseTypes -> a
    java.util.List _baseTypeMatchers -> b
    java.util.List _subTypeNameMatchers -> c
    java.util.List _subTypeClassMatchers -> d
    89:89:void <init>() -> <init>
    105:105:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.lang.Class) -> allowIfBaseType
    131:131:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.util.regex.Pattern) -> allowIfBaseType
    151:151:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(java.lang.String) -> allowIfBaseType
    171:171:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfBaseType(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher) -> allowIfBaseType
    187:191:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder denyForExactBaseType(java.lang.Class) -> denyForExactBaseType
    208:208:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.lang.Class) -> allowIfSubType
    233:233:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.util.regex.Pattern) -> allowIfSubType
    253:253:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(java.lang.String) -> allowIfSubType
    273:273:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubType(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher) -> allowIfSubType
    291:291:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder allowIfSubTypeIsArray() -> allowIfSubTypeIsArray
    319:322:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator build() -> build
    327:331:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendBaseMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher) -> _appendBaseMatcher
    335:339:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubNameMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher) -> _appendSubNameMatcher
    343:347:com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder _appendSubClassMatcher(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher) -> _appendSubClassMatcher
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$1 -> com.fasterxml.jackson.databind.jsontype.a$a$1:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    java.lang.Class val$baseOfBase -> a
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> b
    105:105:void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.Class) -> <init>
    108:108:boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$2 -> com.fasterxml.jackson.databind.jsontype.a$a$2:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    java.util.regex.Pattern val$patternForBase -> a
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> b
    131:131:void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.util.regex.Pattern) -> <init>
    134:134:boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$3 -> com.fasterxml.jackson.databind.jsontype.a$a$3:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    java.lang.String val$prefixForBase -> a
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> b
    151:151:void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.String) -> <init>
    154:154:boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$4 -> com.fasterxml.jackson.databind.jsontype.a$a$4:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    java.lang.Class val$subTypeBase -> a
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> b
    208:208:void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.Class) -> <init>
    211:211:boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$5 -> com.fasterxml.jackson.databind.jsontype.a$a$5:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    java.util.regex.Pattern val$patternForSubType -> a
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> b
    233:233:void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.util.regex.Pattern) -> <init>
    236:236:boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.String) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$6 -> com.fasterxml.jackson.databind.jsontype.a$a$6:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    java.lang.String val$prefixForSubType -> a
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> b
    253:253:void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder,java.lang.String) -> <init>
    256:256:boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.String) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder$7 -> com.fasterxml.jackson.databind.jsontype.a$a$7:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder this$0 -> a
    291:291:void <init>(com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder) -> <init>
    294:294:boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher -> com.fasterxml.jackson.databind.jsontype.a$b:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    48:48:void <init>() -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.String) -> match
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher -> com.fasterxml.jackson.databind.jsontype.a$c:
# {"fileName":"BasicPolymorphicTypeValidator.java","id":"sourceFile"}
    40:40:void <init>() -> <init>
    boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> match
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator -> com.fasterxml.jackson.databind.jsontype.b:
# {"fileName":"DefaultBaseTypeLimitingValidator.java","id":"sourceFile"}
    long serialVersionUID -> a
    21:21:void <init>() -> <init>
    31:36:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    43:43:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    50:50:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
    77:77:boolean isUnsafeBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> isUnsafeBaseType
    92:92:boolean isSafeSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> isSafeSubType
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes -> com.fasterxml.jackson.databind.jsontype.b$a:
# {"fileName":"DefaultBaseTypeLimitingValidator.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes instance -> a
    java.util.Set UNSAFE -> b
    95:112:void <init>() -> <init>
    116:116:boolean isUnsafeBaseType(java.lang.Class) -> isUnsafeBaseType
    96:96:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.NamedType -> com.fasterxml.jackson.databind.jsontype.c:
# {"fileName":"NamedType.java","id":"sourceFile"}
    long serialVersionUID -> d
    java.lang.Class _class -> a
    int _hashCode -> b
    java.lang.String _name -> c
    18:18:void <init>(java.lang.Class) -> <init>
    20:24:void <init>(java.lang.Class,java.lang.String) -> <init>
    26:26:java.lang.Class getType() -> getType
    27:27:java.lang.String getName() -> getName
    28:28:void setName(java.lang.String) -> setName
    30:30:boolean hasName() -> hasName
    37:42:boolean equals(java.lang.Object) -> equals
    46:46:int hashCode() -> hashCode
    50:50:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator -> com.fasterxml.jackson.databind.jsontype.d:
# {"fileName":"PolymorphicTypeValidator.java","id":"sourceFile"}
    long serialVersionUID -> a
    50:50:void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Base -> com.fasterxml.jackson.databind.jsontype.d$a:
# {"fileName":"PolymorphicTypeValidator.java","id":"sourceFile"}
    long serialVersionUID -> a
    149:149:void <init>() -> <init>
    157:157:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    163:163:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    169:169:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity -> com.fasterxml.jackson.databind.jsontype.d$b:
# {"fileName":"PolymorphicTypeValidator.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED -> a
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity DENIED -> b
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity INDETERMINATE -> c
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity[] $VALUES -> d
    58:58:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity[] values() -> values
    58:58:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity valueOf(java.lang.String) -> valueOf
    58:58:void <init>(java.lang.String,int) -> <init>
    58:76:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.SubtypeResolver -> com.fasterxml.jackson.databind.jsontype.e:
# {"fileName":"SubtypeResolver.java","id":"sourceFile"}
    15:15:void <init>() -> <init>
    30:30:com.fasterxml.jackson.databind.jsontype.SubtypeResolver copy() -> copy
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(java.util.Collection) -> registerSubtypes
    74:75:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByClass
    92:92:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByClass
    110:111:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByTypeId
    128:128:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByTypeId
    146:146:java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypes
    158:158:java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector) -> collectAndResolveSubtypes
com.fasterxml.jackson.databind.jsontype.TypeDeserializer -> com.fasterxml.jackson.databind.jsontype.f:
# {"fileName":"TypeDeserializer.java","id":"sourceFile"}
    24:24:void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    77:77:boolean hasDefaultImpl() -> hasDefaultImpl
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    142:142:java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> deserializeIfNatural
    149:181:java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class) -> deserializeIfNatural
com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1 -> com.fasterxml.jackson.databind.jsontype.f$1:
# {"fileName":"TypeDeserializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    153:153:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.TypeIdResolver -> com.fasterxml.jackson.databind.jsontype.g:
# {"fileName":"TypeIdResolver.java","id":"sourceFile"}
    void init(com.fasterxml.jackson.databind.JavaType) -> init
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    java.lang.String idFromBaseType() -> idFromBaseType
    com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder -> com.fasterxml.jackson.databind.jsontype.h:
# {"fileName":"TypeResolverBuilder.java","id":"sourceFile"}
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    174:174:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
com.fasterxml.jackson.databind.jsontype.TypeSerializer -> com.fasterxml.jackson.databind.jsontype.i:
# {"fileName":"TypeSerializer.java","id":"sourceFile"}
    25:25:void <init>() -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    80:103:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> typeId
    108:110:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> typeId
    115:117:com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> typeId
    com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    179:180:void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    191:192:void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    203:204:void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    215:216:void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    227:228:void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    239:240:void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    251:252:void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    263:264:void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    275:276:void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    293:294:void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    305:306:void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    317:318:void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    325:326:void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    333:334:void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    341:342:void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
    355:357:void _writeLegacySuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> _writeLegacySuffix
com.fasterxml.jackson.databind.jsontype.TypeSerializer$1 -> com.fasterxml.jackson.databind.jsontype.i$1:
# {"fileName":"TypeSerializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> a
    81:81:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.a:
# {"fileName":"AsArrayTypeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    36:37:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    42:42:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    46:46:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    53:53:java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    61:61:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    66:66:java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    71:71:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    89:130:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    135:169:java.lang.String _locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _locateTypeId
    176:176:boolean _usesExternalId() -> _usesExternalId
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.b:
# {"fileName":"AsArrayTypeSerializer.java","id":"sourceFile"}
    15:16:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    20:20:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    24:24:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    12:12:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.c:
# {"fileName":"AsDeductionTypeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> l
    java.util.BitSet EMPTY_CLASS_FINGERPRINT -> m
    java.util.Map fieldBitIndex -> n
    java.util.Map subtypeFingerprints -> o
    47:50:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,java.util.Collection) -> <init>
    53:56:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    60:60:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    64:94:java.util.Map buildFingerprints(com.fasterxml.jackson.databind.DeserializationConfig,java.util.Collection) -> buildFingerprints
    100:148:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    153:158:void prune(java.util.List,int) -> prune
    36:36:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.d:
# {"fileName":"AsDeductionTypeSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer INSTANCE -> a
    19:20:void <init>() -> <init>
    23:23:com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer instance() -> instance
    28:28:com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    33:33:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    43:58:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    65:66:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    14:14:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    16:16:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.e:
# {"fileName":"AsExistingPropertyTypeSerializer.java","id":"sourceFile"}
    18:19:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    23:23:com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    28:28:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    12:12:com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    12:12:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    12:12:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.f:
# {"fileName":"AsExternalTypeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    28:29:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    33:34:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    38:41:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    45:45:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    50:50:boolean _usesExternalId() -> _usesExternalId
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.g:
# {"fileName":"AsExternalTypeSerializer.java","id":"sourceFile"}
    java.lang.String _typePropertyName -> a
    29:31:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    35:35:com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    39:39:java.lang.String getPropertyName() -> getPropertyName
    42:42:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    51:51:void _writeScalarPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeScalarPrefix
    54:55:void _writeObjectPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeObjectPrefix
    58:59:void _writeArrayPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeArrayPrefix
    62:65:void _writeScalarSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeScalarSuffix
    68:72:void _writeObjectSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeObjectSuffix
    75:79:void _writeArraySuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeArraySuffix
    24:24:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.h:
# {"fileName":"AsPropertyTypeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> l
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _inclusion -> a
    boolean _strictTypeIdHandling -> b
    java.lang.String _msgForMissingId -> c
    52:53:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    65:67:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> <init>
    39:73:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    39:85:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonTypeInfo$As,boolean) -> <init>
    89:89:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    93:93:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    103:145:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    151:170:java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String) -> _deserializeTypedForId
    176:176:java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer) -> _deserializeTypedUsingDefaultImpl
    188:226:java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String) -> _deserializeTypedUsingDefaultImpl
    237:240:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.i:
# {"fileName":"AsPropertyTypeSerializer.java","id":"sourceFile"}
    java.lang.String _typePropertyName -> a
    22:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String) -> <init>
    28:28:com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    33:33:java.lang.String getPropertyName() -> getPropertyName
    36:36:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    15:15:com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    15:15:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.j:
# {"fileName":"AsWrapperTypeDeserializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    36:37:void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    41:41:com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    45:45:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    52:52:java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    57:57:java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    62:62:java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    67:67:java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    85:127:java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.k:
# {"fileName":"AsWrapperTypeSerializer.java","id":"sourceFile"}
    23:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    28:28:com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    32:32:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    47:47:java.lang.String _validTypeId(java.lang.String) -> _validTypeId
    53:56:void _writeTypeId(com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeTypeId
    20:20:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.l:
# {"fileName":"ClassNameIdResolver.java","id":"sourceFile"}
    java.lang.String JAVA_UTIL_PKG -> b
    com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator -> a
    30:31:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    38:40:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> <init>
    44:44:com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> construct
    48:48:com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    52:52:void registerSubtype(java.lang.Class,java.lang.String) -> registerSubtype
    56:56:java.lang.String idFromValue(java.lang.Object) -> idFromValue
    61:61:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    66:66:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    72:80:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext) -> _typeFromId
    92:142:java.lang.String _idFrom(java.lang.Object,java.lang.Class,com.fasterxml.jackson.databind.type.TypeFactory) -> _idFrom
    147:147:java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator -> com.fasterxml.jackson.databind.jsontype.impl.m:
# {"fileName":"LaissezFaireSubTypeValidator.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance -> a
    17:17:void <init>() -> <init>
    26:26:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> validateBaseType
    32:32:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.lang.String) -> validateSubClassName
    38:38:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> validateSubType
    22:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.n:
# {"fileName":"MinimalClassNameIdResolver.java","id":"sourceFile"}
    java.lang.String _basePackageName -> b
    java.lang.String _basePackagePrefix -> c
    30:40:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> <init>
    44:44:com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> construct
    48:48:com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    53:58:java.lang.String idFromValue(java.lang.Object) -> idFromValue
    64:75:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext) -> _typeFromId
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver -> com.fasterxml.jackson.databind.jsontype.impl.o:
# {"fileName":"StdSubtypeResolver.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.util.LinkedHashSet _registeredSubtypes -> a
    24:24:void <init>() -> <init>
    27:31:void <init>(com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver) -> <init>
    36:36:com.fasterxml.jackson.databind.jsontype.SubtypeResolver copy() -> copy
    47:53:void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    57:62:void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    66:73:void registerSubtypes(java.util.Collection) -> registerSubtypes
    85:128:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByClass
    135:153:java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByClass
    166:200:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypesByTypeId
    207:224:java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> collectAndResolveSubtypesByTypeId
    241:273:void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap) -> _collectAndResolve
    283:305:void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map) -> _collectAndResolveByTypeId
    314:330:java.util.Collection _combineNamedAndUnnamed(java.lang.Class,java.util.Set,java.util.Map) -> _combineNamedAndUnnamed
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder -> com.fasterxml.jackson.databind.jsontype.impl.p:
# {"fileName":"StdTypeResolverBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType -> c
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _includeAs -> d
    java.lang.String _typeProperty -> e
    boolean _typeIdVisible -> f
    java.lang.Class _defaultImpl -> g
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver -> h
    36:54:void <init>() -> <init>
    36:64:void <init>(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.annotation.JsonTypeInfo$As,java.lang.String) -> <init>
    36:81:void <init>(com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder,java.lang.Class) -> <init>
    84:84:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder() -> noTypeInfoBuilder
    91:98:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
    105:135:com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    148:188:com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    193:223:com.fasterxml.jackson.databind.JavaType defineDefaultImpl(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> defineDefaultImpl
    234:238:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    248:252:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    257:258:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    263:264:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    269:275:com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
    284:284:java.lang.Class getDefaultImpl() -> getDefaultImpl
    286:286:java.lang.String getTypeProperty() -> getTypeProperty
    287:287:boolean isTypeIdVisible() -> isTypeIdVisible
    305:319:com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection,boolean,boolean) -> idResolver
    338:338:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig) -> subTypeValidator
    351:364:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator verifyBaseTypeValidity(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> verifyBaseTypeValidity
    373:375:com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator reportInvalidBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) -> reportInvalidBaseType
    403:403:boolean allowPrimitiveTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType) -> allowPrimitiveTypes
    421:426:boolean _strictTypeIdHandling(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _strictTypeIdHandling
    442:444:boolean _hasTypeResolver(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _hasTypeResolver
    22:22:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder withDefaultImpl(java.lang.Class) -> withDefaultImpl
    22:22:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    22:22:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    22:22:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    22:22:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    22:22:com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1 -> com.fasterxml.jackson.databind.jsontype.impl.p$1:
# {"fileName":"StdTypeResolverBuilder.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> a
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id -> b
    122:307:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator -> com.fasterxml.jackson.databind.jsontype.impl.q:
# {"fileName":"SubTypeValidator.java","id":"sourceFile"}
    java.lang.String PREFIX_SPRING -> a
    java.lang.String PREFIX_C3P0 -> b
    java.util.Set DEFAULT_NO_DESER_CLASS_NAMES -> c
    java.util.Set _cfgIllegalClassNames -> d
    com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance -> e
    251:255:void <init>() -> <init>
    257:257:com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance() -> instance
    264:304:void validateSubType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> validateSubType
    32:253:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase -> com.fasterxml.jackson.databind.jsontype.impl.r:
# {"fileName":"TypeDeserializerBase.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> d
    com.fasterxml.jackson.databind.JavaType _baseType -> e
    com.fasterxml.jackson.databind.BeanProperty _property -> f
    com.fasterxml.jackson.databind.JavaType _defaultImpl -> g
    java.lang.String _typePropertyName -> h
    boolean _typeIdVisible -> i
    java.util.Map _deserializers -> j
    com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer -> k
    72:81:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType) -> <init>
    84:93:void <init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    107:107:java.lang.String baseTypeName() -> baseTypeName
    110:110:java.lang.String getPropertyName() -> getPropertyName
    113:113:com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    117:117:java.lang.Class getDefaultImpl() -> getDefaultImpl
    122:122:boolean hasDefaultImpl() -> hasDefaultImpl
    129:129:com.fasterxml.jackson.databind.JavaType baseType() -> baseType
    135:140:java.lang.String toString() -> toString
    152:207:com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _findDeserializer
    215:232:com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findDefaultImplDeserializer
    244:244:java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeWithNativeTypeId
    257:269:java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _deserializeWithNativeTypeId
    288:298:com.fasterxml.jackson.databind.JavaType _handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _handleUnknownTypeId
    307:307:com.fasterxml.jackson.databind.JavaType _handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _handleMissingTypeId
com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase -> com.fasterxml.jackson.databind.jsontype.impl.s:
# {"fileName":"TypeIdResolverBase.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> d
    com.fasterxml.jackson.databind.JavaType _baseType -> e
    34:35:void <init>() -> <init>
    37:40:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    44:44:void init(com.fasterxml.jackson.databind.JavaType) -> init
    53:53:java.lang.String idFromBaseType() -> idFromBaseType
    60:60:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    70:70:java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.t:
# {"fileName":"TypeNameIdResolver.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> a
    java.util.concurrent.ConcurrentHashMap _typeToId -> b
    java.util.Map _idToType -> c
    boolean _caseInsensitive -> f
    42:47:void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.concurrent.ConcurrentHashMap,java.util.HashMap) -> <init>
    53:98:com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean) -> construct
    102:102:com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    106:106:java.lang.String idFromValue(java.lang.Object) -> idFromValue
    111:135:java.lang.String idFromClass(java.lang.Class) -> idFromClass
    142:145:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    150:150:com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String) -> typeFromId
    155:162:com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String) -> _typeFromId
    169:175:java.lang.String getDescForKnownTypeIds() -> getDescForKnownTypeIds
    180:180:java.lang.String toString() -> toString
    195:197:java.lang.String _defaultTypeId(java.lang.Class) -> _defaultTypeId
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase -> com.fasterxml.jackson.databind.jsontype.impl.u:
# {"fileName":"TypeSerializerBase.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> b
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    21:24:void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    36:36:java.lang.String getPropertyName() -> getPropertyName
    39:39:com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    45:52:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    60:63:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    72:83:void _generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId) -> _generateTypeId
    92:96:java.lang.String idFromValue(java.lang.Object) -> idFromValue
    100:104:java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    114:114:void handleMissingId(java.lang.Object) -> handleMissingId
com.fasterxml.jackson.databind.jsontype.impl.package-info -> com.fasterxml.jackson.databind.jsontype.impl.v:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.jsontype.package-info -> com.fasterxml.jackson.databind.jsontype.j:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver -> com.fasterxml.jackson.databind.module.a:
# {"fileName":"SimpleAbstractTypeResolver.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.util.HashMap _mappings -> a
    29:38:void <init>() -> <init>
    55:67:com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver addMapping(java.lang.Class,java.lang.Class) -> addMapping
    74:80:com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeMapping
    87:87:com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> resolveAbstractType
    94:94:com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> resolveAbstractType
com.fasterxml.jackson.databind.module.SimpleDeserializers -> com.fasterxml.jackson.databind.module.b:
# {"fileName":"SimpleDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> c
    java.util.HashMap _classMappings -> a
    boolean _hasEnumDeserializer -> b
    26:41:void <init>() -> <init>
    26:48:void <init>(java.util.Map) -> <init>
    52:61:void addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> addDeserializer
    69:75:void addDeserializers(java.util.Map) -> addDeserializers
    89:89:com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    97:97:com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    107:107:com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    117:117:com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    125:138:com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    146:149:com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    159:159:com.fasterxml.jackson.databind.JsonDeserializer findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findReferenceDeserializer
    170:170:com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    181:181:com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
    187:188:boolean hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> hasDeserializerFor
    192:195:com.fasterxml.jackson.databind.JsonDeserializer _find(com.fasterxml.jackson.databind.JavaType) -> _find
com.fasterxml.jackson.databind.module.SimpleKeyDeserializers -> com.fasterxml.jackson.databind.module.c:
# {"fileName":"SimpleKeyDeserializers.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.util.HashMap _classMappings -> a
    27:35:void <init>() -> <init>
    39:43:com.fasterxml.jackson.databind.module.SimpleKeyDeserializers addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.KeyDeserializer) -> addDeserializer
    56:59:com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.module.SimpleModule -> com.fasterxml.jackson.databind.module.d:
# {"fileName":"SimpleModule.java","id":"sourceFile"}
    long serialVersionUID -> o
    java.util.concurrent.atomic.AtomicInteger MODULE_ID_SEQ -> p
    java.lang.String _name -> a
    com.fasterxml.jackson.core.Version _version -> b
    boolean _hasExplicitName -> c
    com.fasterxml.jackson.databind.module.SimpleSerializers _serializers -> d
    com.fasterxml.jackson.databind.module.SimpleDeserializers _deserializers -> e
    com.fasterxml.jackson.databind.module.SimpleSerializers _keySerializers -> f
    com.fasterxml.jackson.databind.module.SimpleKeyDeserializers _keyDeserializers -> g
    com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver _abstractTypes -> h
    com.fasterxml.jackson.databind.module.SimpleValueInstantiators _valueInstantiators -> i
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier _deserializerModifier -> j
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier _serializerModifier -> k
    java.util.HashMap _mixins -> l
    java.util.LinkedHashSet _subtypes -> m
    com.fasterxml.jackson.databind.PropertyNamingStrategy _namingStrategy -> n
    71:139:void <init>() -> <init>
    146:147:void <init>(java.lang.String) -> <init>
    154:155:void <init>(com.fasterxml.jackson.core.Version) -> <init>
    71:171:void <init>(java.lang.String,com.fasterxml.jackson.core.Version) -> <init>
    178:179:void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map) -> <init>
    186:187:void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.List) -> <init>
    71:206:void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map,java.util.List) -> <init>
    218:231:java.lang.Object getTypeId() -> getTypeId
    244:245:void setSerializers(com.fasterxml.jackson.databind.module.SimpleSerializers) -> setSerializers
    251:252:void setDeserializers(com.fasterxml.jackson.databind.module.SimpleDeserializers) -> setDeserializers
    258:259:void setKeySerializers(com.fasterxml.jackson.databind.module.SimpleSerializers) -> setKeySerializers
    265:266:void setKeyDeserializers(com.fasterxml.jackson.databind.module.SimpleKeyDeserializers) -> setKeyDeserializers
    272:273:void setAbstractTypes(com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver) -> setAbstractTypes
    279:280:void setValueInstantiators(com.fasterxml.jackson.databind.module.SimpleValueInstantiators) -> setValueInstantiators
    286:287:com.fasterxml.jackson.databind.module.SimpleModule setDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> setDeserializerModifier
    294:295:com.fasterxml.jackson.databind.module.SimpleModule setSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> setSerializerModifier
    302:303:com.fasterxml.jackson.databind.module.SimpleModule setNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setNamingStrategy
    327:332:com.fasterxml.jackson.databind.module.SimpleModule addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    351:357:com.fasterxml.jackson.databind.module.SimpleModule addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    365:371:com.fasterxml.jackson.databind.module.SimpleModule addKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addKeySerializer
    394:400:com.fasterxml.jackson.databind.module.SimpleModule addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> addDeserializer
    408:414:com.fasterxml.jackson.databind.module.SimpleModule addKeyDeserializer(java.lang.Class,com.fasterxml.jackson.databind.KeyDeserializer) -> addKeyDeserializer
    431:438:com.fasterxml.jackson.databind.module.SimpleModule addAbstractTypeMapping(java.lang.Class,java.lang.Class) -> addAbstractTypeMapping
    448:455:com.fasterxml.jackson.databind.module.SimpleModule registerSubtypes(java.lang.Class[]) -> registerSubtypes
    465:472:com.fasterxml.jackson.databind.module.SimpleModule registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    484:491:com.fasterxml.jackson.databind.module.SimpleModule registerSubtypes(java.util.Collection) -> registerSubtypes
    509:515:com.fasterxml.jackson.databind.module.SimpleModule addValueInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> addValueInstantiator
    528:534:com.fasterxml.jackson.databind.module.SimpleModule setMixInAnnotation(java.lang.Class,java.lang.Class) -> setMixInAnnotation
    545:545:java.lang.String getModuleName() -> getModuleName
    558:593:void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> setupModule
    596:596:com.fasterxml.jackson.core.Version version() -> version
    609:613:void _checkNotNull(java.lang.Object,java.lang.String) -> _checkNotNull
    56:56:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.module.SimpleSerializers -> com.fasterxml.jackson.databind.module.e:
# {"fileName":"SimpleSerializers.java","id":"sourceFile"}
    long serialVersionUID -> d
    java.util.HashMap _classMappings -> a
    java.util.HashMap _interfaceMappings -> b
    boolean _hasEnumSerializer -> c
    37:57:void <init>() -> <init>
    37:64:void <init>(java.util.List) -> <init>
    78:85:void addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    89:90:void addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    96:99:void addSerializers(java.util.List) -> addSerializers
    111:165:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    172:172:com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    179:179:com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    186:186:com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    194:194:com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    202:202:com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
    213:224:com.fasterxml.jackson.databind.JsonSerializer _findInterfaceMapping(java.lang.Class,com.fasterxml.jackson.databind.type.ClassKey) -> _findInterfaceMapping
    229:245:void _addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> _addSerializer
com.fasterxml.jackson.databind.module.SimpleValueInstantiators -> com.fasterxml.jackson.databind.module.f:
# {"fileName":"SimpleValueInstantiators.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.util.HashMap _classMappings -> a
    30:32:void <init>() -> <init>
    37:38:com.fasterxml.jackson.databind.module.SimpleValueInstantiators addValueInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> addValueInstantiator
    45:46:com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.module.package-info -> com.fasterxml.jackson.databind.module.g:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.node.ArrayNode -> com.fasterxml.jackson.databind.node.a:
# {"fileName":"ArrayNode.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.util.List _children -> c
    30:32:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    38:40:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory,int) -> <init>
    46:48:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory,java.util.List) -> <init>
    52:52:com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer) -> _at
    60:65:com.fasterxml.jackson.databind.node.ArrayNode deepCopy() -> deepCopy
    78:82:com.fasterxml.jackson.databind.node.ObjectNode with(java.lang.String) -> with
    89:93:com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String) -> withArray
    101:117:com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withObject
    125:140:com.fasterxml.jackson.databind.node.ArrayNode _withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withArray
    145:167:com.fasterxml.jackson.databind.node.ObjectNode _withObjectAddTailElement(com.fasterxml.jackson.core.JsonPointer,boolean) -> _withObjectAddTailElement
    172:193:com.fasterxml.jackson.databind.node.ArrayNode _withArrayAddTailElement(com.fasterxml.jackson.core.JsonPointer,boolean) -> _withArrayAddTailElement
    199:210:void _withXxxSetArrayElement(int,com.fasterxml.jackson.databind.JsonNode) -> _withXxxSetArrayElement
    220:220:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
    231:231:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    236:236:boolean isArray() -> isArray
    239:239:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    243:243:int size() -> size
    247:247:boolean isEmpty() -> isEmpty
    251:251:java.util.Iterator elements() -> elements
    256:259:com.fasterxml.jackson.databind.JsonNode get(int) -> get
    263:263:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    266:266:com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    270:273:com.fasterxml.jackson.databind.JsonNode path(int) -> path
    278:282:com.fasterxml.jackson.databind.JsonNode required(int) -> required
    288:303:boolean equals(java.util.Comparator,com.fasterxml.jackson.databind.JsonNode) -> equals
    315:323:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    329:335:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    346:352:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    358:361:java.util.List findValues(java.lang.String,java.util.List) -> findValues
    367:370:java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    376:382:com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    388:391:java.util.List findParents(java.lang.String,java.util.List) -> findParents
    413:419:com.fasterxml.jackson.databind.JsonNode set(int,com.fasterxml.jackson.databind.JsonNode) -> set
    429:433:com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode) -> add
    446:447:com.fasterxml.jackson.databind.node.ArrayNode addAll(com.fasterxml.jackson.databind.node.ArrayNode) -> addAll
    459:462:com.fasterxml.jackson.databind.node.ArrayNode addAll(java.util.Collection) -> addAll
    476:480:com.fasterxml.jackson.databind.node.ArrayNode insert(int,com.fasterxml.jackson.databind.JsonNode) -> insert
    492:495:com.fasterxml.jackson.databind.JsonNode remove(int) -> remove
    507:508:com.fasterxml.jackson.databind.node.ArrayNode removeAll() -> removeAll
    525:527:com.fasterxml.jackson.databind.node.ArrayNode addArray() -> addArray
    538:540:com.fasterxml.jackson.databind.node.ObjectNode addObject() -> addObject
    550:550:com.fasterxml.jackson.databind.node.ArrayNode addPOJO(java.lang.Object) -> addPOJO
    559:559:com.fasterxml.jackson.databind.node.ArrayNode addRawValue(com.fasterxml.jackson.databind.util.RawValue) -> addRawValue
    568:568:com.fasterxml.jackson.databind.node.ArrayNode addNull() -> addNull
    579:579:com.fasterxml.jackson.databind.node.ArrayNode add(short) -> add
    591:591:com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Short) -> add
    600:600:com.fasterxml.jackson.databind.node.ArrayNode add(int) -> add
    610:610:com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Integer) -> add
    618:618:com.fasterxml.jackson.databind.node.ArrayNode add(long) -> add
    627:627:com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Long) -> add
    636:636:com.fasterxml.jackson.databind.node.ArrayNode add(float) -> add
    646:646:com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Float) -> add
    655:655:com.fasterxml.jackson.databind.node.ArrayNode add(double) -> add
    665:665:com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Double) -> add
    674:674:com.fasterxml.jackson.databind.node.ArrayNode add(java.math.BigDecimal) -> add
    685:685:com.fasterxml.jackson.databind.node.ArrayNode add(java.math.BigInteger) -> add
    694:694:com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.String) -> add
    703:703:com.fasterxml.jackson.databind.node.ArrayNode add(boolean) -> add
    713:713:com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Boolean) -> add
    723:723:com.fasterxml.jackson.databind.node.ArrayNode add(byte[]) -> add
    736:738:com.fasterxml.jackson.databind.node.ArrayNode insertArray(int) -> insertArray
    750:752:com.fasterxml.jackson.databind.node.ObjectNode insertObject(int) -> insertObject
    762:762:com.fasterxml.jackson.databind.node.ArrayNode insertNull(int) -> insertNull
    772:772:com.fasterxml.jackson.databind.node.ArrayNode insertPOJO(int,java.lang.Object) -> insertPOJO
    781:781:com.fasterxml.jackson.databind.node.ArrayNode insertRawValue(int,com.fasterxml.jackson.databind.util.RawValue) -> insertRawValue
    793:793:com.fasterxml.jackson.databind.node.ArrayNode insert(int,short) -> insert
    805:805:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Short) -> insert
    815:815:com.fasterxml.jackson.databind.node.ArrayNode insert(int,int) -> insert
    825:825:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Integer) -> insert
    835:835:com.fasterxml.jackson.databind.node.ArrayNode insert(int,long) -> insert
    845:845:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Long) -> insert
    855:855:com.fasterxml.jackson.databind.node.ArrayNode insert(int,float) -> insert
    865:865:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Float) -> insert
    875:875:com.fasterxml.jackson.databind.node.ArrayNode insert(int,double) -> insert
    885:885:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Double) -> insert
    895:895:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.math.BigDecimal) -> insert
    907:907:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.math.BigInteger) -> insert
    917:917:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.String) -> insert
    927:927:com.fasterxml.jackson.databind.node.ArrayNode insert(int,boolean) -> insert
    937:940:com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Boolean) -> insert
    951:954:com.fasterxml.jackson.databind.node.ArrayNode insert(int,byte[]) -> insert
    963:963:com.fasterxml.jackson.databind.node.ArrayNode setNull(int) -> setNull
    972:972:com.fasterxml.jackson.databind.node.ArrayNode setPOJO(int,java.lang.Object) -> setPOJO
    981:981:com.fasterxml.jackson.databind.node.ArrayNode setRawValue(int,com.fasterxml.jackson.databind.util.RawValue) -> setRawValue
    990:990:com.fasterxml.jackson.databind.node.ArrayNode set(int,short) -> set
    1002:1002:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Short) -> set
    1011:1011:com.fasterxml.jackson.databind.node.ArrayNode set(int,int) -> set
    1023:1023:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Integer) -> set
    1032:1032:com.fasterxml.jackson.databind.node.ArrayNode set(int,long) -> set
    1041:1041:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Long) -> set
    1052:1052:com.fasterxml.jackson.databind.node.ArrayNode set(int,float) -> set
    1064:1064:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Float) -> set
    1075:1075:com.fasterxml.jackson.databind.node.ArrayNode set(int,double) -> set
    1087:1087:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Double) -> set
    1098:1098:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.math.BigDecimal) -> set
    1109:1109:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.math.BigInteger) -> set
    1120:1120:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.String) -> set
    1131:1131:com.fasterxml.jackson.databind.node.ArrayNode set(int,boolean) -> set
    1143:1143:com.fasterxml.jackson.databind.node.ArrayNode set(int,java.lang.Boolean) -> set
    1154:1154:com.fasterxml.jackson.databind.node.ArrayNode set(int,byte[]) -> set
    1166:1171:boolean equals(java.lang.Object) -> equals
    1178:1178:boolean _childrenEqual(com.fasterxml.jackson.databind.node.ArrayNode) -> _childrenEqual
    1183:1183:int hashCode() -> hashCode
    1193:1197:com.fasterxml.jackson.databind.node.ArrayNode _set(int,com.fasterxml.jackson.databind.JsonNode) -> _set
    1201:1202:com.fasterxml.jackson.databind.node.ArrayNode _add(com.fasterxml.jackson.databind.JsonNode) -> _add
    1207:1214:com.fasterxml.jackson.databind.node.ArrayNode _insert(int,com.fasterxml.jackson.databind.JsonNode) -> _insert
    21:21:com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    21:21:com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String) -> withArray
    21:21:com.fasterxml.jackson.databind.JsonNode with(java.lang.String) -> with
    21:21:com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    21:21:com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    21:21:com.fasterxml.jackson.core.TreeNode path(int) -> path
    21:21:com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    21:21:com.fasterxml.jackson.core.TreeNode get(int) -> get
    21:21:com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
com.fasterxml.jackson.databind.node.BaseJsonNode -> com.fasterxml.jackson.databind.node.b:
# {"fileName":"BaseJsonNode.java","id":"sourceFile"}
    long serialVersionUID -> a
    32:32:java.lang.Object writeReplace() -> writeReplace
    35:35:void <init>() -> <init>
    46:50:com.fasterxml.jackson.databind.JsonNode findPath(java.lang.String) -> findPath
    int hashCode() -> hashCode
    64:65:com.fasterxml.jackson.databind.JsonNode required(java.lang.String) -> required
    70:71:com.fasterxml.jackson.databind.JsonNode required(int) -> required
    82:82:com.fasterxml.jackson.core.JsonParser traverse() -> traverse
    87:87:com.fasterxml.jackson.core.JsonParser traverse(com.fasterxml.jackson.core.ObjectCodec) -> traverse
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    107:107:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    121:134:com.fasterxml.jackson.databind.node.ObjectNode withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withObject
    152:152:com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withObject
    160:166:void _withXxxVerifyReplace(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean,com.fasterxml.jackson.databind.JsonNode) -> _withXxxVerifyReplace
    169:178:boolean _withXxxMayReplace(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode$OverwriteMode) -> _withXxxMayReplace
    187:200:com.fasterxml.jackson.databind.node.ArrayNode withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> withArray
    209:209:com.fasterxml.jackson.databind.node.ArrayNode _withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withArray
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    242:242:java.lang.String toString() -> toString
    247:247:java.lang.String toPrettyString() -> toPrettyString
    261:261:java.lang.Object _reportWrongNodeType(java.lang.String,java.lang.Object[]) -> _reportWrongNodeType
    265:265:java.lang.Object _reportWrongNodeOperation(java.lang.String,java.lang.Object[]) -> _reportWrongNodeOperation
    270:273:com.fasterxml.jackson.core.JsonPointer _jsonPointerIfValid(java.lang.String) -> _jsonPointerIfValid
    279:286:java.math.BigInteger _bigIntFromBigDec(java.math.BigDecimal) -> _bigIntFromBigDec
com.fasterxml.jackson.databind.node.BaseJsonNode$1 -> com.fasterxml.jackson.databind.node.b$1:
# {"fileName":"BaseJsonNode.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$databind$JsonNode$OverwriteMode -> a
    169:169:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BigIntegerNode -> com.fasterxml.jackson.databind.node.c:
# {"fileName":"BigIntegerNode.java","id":"sourceFile"}
    java.math.BigInteger MIN_INTEGER -> b
    java.math.BigInteger MAX_INTEGER -> c
    java.math.BigInteger MIN_LONG -> d
    java.math.BigInteger MAX_LONG -> e
    java.math.BigInteger _value -> a
    30:30:void <init>(java.math.BigInteger) -> <init>
    32:32:com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger) -> valueOf
    41:41:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    44:44:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    47:47:boolean isIntegralNumber() -> isIntegralNumber
    50:50:boolean isBigInteger() -> isBigInteger
    53:53:boolean canConvertToInt() -> canConvertToInt
    56:56:boolean canConvertToLong() -> canConvertToLong
    61:61:java.lang.Number numberValue() -> numberValue
    65:65:short shortValue() -> shortValue
    68:68:int intValue() -> intValue
    71:71:long longValue() -> longValue
    74:74:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    77:77:float floatValue() -> floatValue
    80:80:double doubleValue() -> doubleValue
    83:83:java.math.BigDecimal decimalValue() -> decimalValue
    93:93:java.lang.String asText() -> asText
    98:98:boolean asBoolean(boolean) -> asBoolean
    105:106:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    111:116:boolean equals(java.lang.Object) -> equals
    121:121:int hashCode() -> hashCode
    17:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BinaryNode -> com.fasterxml.jackson.databind.node.d:
# {"fileName":"BinaryNode.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE -> a
    byte[] _data -> b
    24:26:void <init>(byte[]) -> <init>
    29:36:void <init>(byte[],int,int) -> <init>
    40:46:com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[]) -> valueOf
    51:57:com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[],int,int) -> valueOf
    63:63:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    72:72:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    81:81:byte[] binaryValue() -> binaryValue
    89:89:java.lang.String asText() -> asText
    96:98:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    103:108:boolean equals(java.lang.Object) -> equals
    113:113:int hashCode() -> hashCode
    19:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.BooleanNode -> com.fasterxml.jackson.databind.node.e:
# {"fileName":"BooleanNode.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.node.BooleanNode TRUE -> a
    com.fasterxml.jackson.databind.node.BooleanNode FALSE -> b
    boolean _value -> d
    30:30:void <init>(boolean) -> <init>
    34:34:java.lang.Object readResolve() -> readResolve
    37:37:com.fasterxml.jackson.databind.node.BooleanNode getTrue() -> getTrue
    38:38:com.fasterxml.jackson.databind.node.BooleanNode getFalse() -> getFalse
    40:40:com.fasterxml.jackson.databind.node.BooleanNode valueOf(boolean) -> valueOf
    44:44:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    48:48:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    53:53:boolean booleanValue() -> booleanValue
    58:58:java.lang.String asText() -> asText
    63:63:boolean asBoolean() -> asBoolean
    68:68:boolean asBoolean(boolean) -> asBoolean
    73:73:int asInt(int) -> asInt
    77:77:long asLong(long) -> asLong
    81:81:double asDouble(double) -> asDouble
    86:87:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    91:91:int hashCode() -> hashCode
    101:106:boolean equals(java.lang.Object) -> equals
    21:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.ContainerNode -> com.fasterxml.jackson.databind.node.f:
# {"fileName":"ContainerNode.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> a
    28:30:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    32:32:void <init>() -> <init>
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    41:41:java.lang.String asText() -> asText
    int size() -> size
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withObject
    70:70:com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean) -> booleanNode
    73:73:com.fasterxml.jackson.databind.JsonNode missingNode() -> missingNode
    77:77:com.fasterxml.jackson.databind.node.NullNode nullNode() -> nullNode
    90:90:com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    98:98:com.fasterxml.jackson.databind.node.ArrayNode arrayNode(int) -> arrayNode
    105:105:com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
    108:108:com.fasterxml.jackson.databind.node.NumericNode numberNode(byte) -> numberNode
    110:110:com.fasterxml.jackson.databind.node.NumericNode numberNode(short) -> numberNode
    112:112:com.fasterxml.jackson.databind.node.NumericNode numberNode(int) -> numberNode
    115:115:com.fasterxml.jackson.databind.node.NumericNode numberNode(long) -> numberNode
    119:119:com.fasterxml.jackson.databind.node.NumericNode numberNode(float) -> numberNode
    121:121:com.fasterxml.jackson.databind.node.NumericNode numberNode(double) -> numberNode
    124:124:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger) -> numberNode
    126:126:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal) -> numberNode
    129:129:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    131:131:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Short) -> numberNode
    133:133:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    135:135:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Long) -> numberNode
    138:138:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Float) -> numberNode
    140:140:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Double) -> numberNode
    143:143:com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> textNode
    146:146:com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]) -> binaryNode
    148:148:com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    151:151:com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object) -> pojoNode
    154:154:com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue) -> rawValueNode
    com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    15:15:com.fasterxml.jackson.core.TreeNode get(int) -> get
    15:15:com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
    15:15:com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[],int,int) -> binaryNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[]) -> binaryNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode textNode(java.lang.String) -> textNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode numberNode(double) -> numberNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode numberNode(float) -> numberNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode numberNode(long) -> numberNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode numberNode(int) -> numberNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode numberNode(short) -> numberNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode numberNode(byte) -> numberNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode nullNode() -> nullNode
    15:15:com.fasterxml.jackson.databind.node.ValueNode booleanNode(boolean) -> booleanNode
com.fasterxml.jackson.databind.node.DecimalNode -> com.fasterxml.jackson.databind.node.g:
# {"fileName":"DecimalNode.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.node.DecimalNode ZERO -> a
    java.math.BigDecimal MIN_INTEGER -> c
    java.math.BigDecimal MAX_INTEGER -> d
    java.math.BigDecimal MIN_LONG -> e
    java.math.BigDecimal MAX_LONG -> f
    java.math.BigDecimal _value -> b
    33:33:void <init>(java.math.BigDecimal) -> <init>
    35:35:com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal) -> valueOf
    43:43:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    46:46:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    55:55:boolean isFloatingPointNumber() -> isFloatingPointNumber
    58:58:boolean isBigDecimal() -> isBigDecimal
    61:61:boolean canConvertToInt() -> canConvertToInt
    64:64:boolean canConvertToLong() -> canConvertToLong
    69:71:boolean canConvertToExactIntegral() -> canConvertToExactIntegral
    75:75:java.lang.Number numberValue() -> numberValue
    78:78:short shortValue() -> shortValue
    81:81:int intValue() -> intValue
    84:84:long longValue() -> longValue
    89:89:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    93:93:float floatValue() -> floatValue
    96:96:double doubleValue() -> doubleValue
    99:99:java.math.BigDecimal decimalValue() -> decimalValue
    103:103:java.lang.String asText() -> asText
    120:121:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    126:131:boolean equals(java.lang.Object) -> equals
    135:135:int hashCode() -> hashCode
    18:23:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.DoubleNode -> com.fasterxml.jackson.databind.node.h:
# {"fileName":"DoubleNode.java","id":"sourceFile"}
    double _value -> a
    28:28:void <init>(double) -> <init>
    30:30:com.fasterxml.jackson.databind.node.DoubleNode valueOf(double) -> valueOf
    38:38:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    41:41:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    50:50:boolean isFloatingPointNumber() -> isFloatingPointNumber
    53:53:boolean isDouble() -> isDouble
    56:56:boolean canConvertToInt() -> canConvertToInt
    59:59:boolean canConvertToLong() -> canConvertToLong
    64:65:boolean canConvertToExactIntegral() -> canConvertToExactIntegral
    70:70:java.lang.Number numberValue() -> numberValue
    74:74:short shortValue() -> shortValue
    77:77:int intValue() -> intValue
    80:80:long longValue() -> longValue
    83:83:float floatValue() -> floatValue
    86:86:double doubleValue() -> doubleValue
    89:89:java.math.BigDecimal decimalValue() -> decimalValue
    93:93:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    98:98:java.lang.String asText() -> asText
    104:104:boolean isNaN() -> isNaN
    109:110:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    115:123:boolean equals(java.lang.Object) -> equals
    130:131:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.FloatNode -> com.fasterxml.jackson.databind.node.i:
# {"fileName":"FloatNode.java","id":"sourceFile"}
    float _value -> a
    29:29:void <init>(float) -> <init>
    31:31:com.fasterxml.jackson.databind.node.FloatNode valueOf(float) -> valueOf
    39:39:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    42:42:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    51:51:boolean isFloatingPointNumber() -> isFloatingPointNumber
    54:54:boolean isFloat() -> isFloat
    57:57:boolean canConvertToInt() -> canConvertToInt
    61:61:boolean canConvertToLong() -> canConvertToLong
    66:67:boolean canConvertToExactIntegral() -> canConvertToExactIntegral
    72:72:java.lang.Number numberValue() -> numberValue
    76:76:short shortValue() -> shortValue
    79:79:int intValue() -> intValue
    82:82:long longValue() -> longValue
    85:85:float floatValue() -> floatValue
    88:88:double doubleValue() -> doubleValue
    91:91:java.math.BigDecimal decimalValue() -> decimalValue
    95:95:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    100:100:java.lang.String asText() -> asText
    107:107:boolean isNaN() -> isNaN
    112:113:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    118:126:boolean equals(java.lang.Object) -> equals
    131:131:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.IntNode -> com.fasterxml.jackson.databind.node.j:
# {"fileName":"IntNode.java","id":"sourceFile"}
    int MIN_CANONICAL -> a
    int MAX_CANONICAL -> b
    com.fasterxml.jackson.databind.node.IntNode[] CANONICALS -> d
    int _value -> c
    44:44:void <init>(int) -> <init>
    47:48:com.fasterxml.jackson.databind.node.IntNode valueOf(int) -> valueOf
    57:57:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    60:60:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    69:69:boolean isIntegralNumber() -> isIntegralNumber
    72:72:boolean isInt() -> isInt
    74:74:boolean canConvertToInt() -> canConvertToInt
    75:75:boolean canConvertToLong() -> canConvertToLong
    79:79:java.lang.Number numberValue() -> numberValue
    83:83:short shortValue() -> shortValue
    86:86:int intValue() -> intValue
    89:89:long longValue() -> longValue
    92:92:float floatValue() -> floatValue
    95:95:double doubleValue() -> doubleValue
    99:99:java.math.BigDecimal decimalValue() -> decimalValue
    102:102:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    106:106:java.lang.String asText() -> asText
    111:111:boolean asBoolean(boolean) -> asBoolean
    118:119:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    124:129:boolean equals(java.lang.Object) -> equals
    133:133:int hashCode() -> hashCode
    26:31:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.InternalNodeMapper -> com.fasterxml.jackson.databind.node.k:
# {"fileName":"InternalNodeMapper.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.json.JsonMapper JSON_MAPPER -> a
    com.fasterxml.jackson.databind.ObjectWriter STD_WRITER -> b
    com.fasterxml.jackson.databind.ObjectWriter PRETTY_WRITER -> c
    com.fasterxml.jackson.databind.ObjectReader NODE_READER -> d
    21:21:void <init>() -> <init>
    34:36:java.lang.String nodeToString(com.fasterxml.jackson.databind.node.BaseJsonNode) -> nodeToString
    42:44:java.lang.String nodeToPrettyString(com.fasterxml.jackson.databind.node.BaseJsonNode) -> nodeToPrettyString
    51:51:byte[] valueToBytes(java.lang.Object) -> valueToBytes
    55:55:com.fasterxml.jackson.databind.JsonNode bytesToNode(byte[]) -> bytesToNode
    59:59:com.fasterxml.jackson.databind.JsonSerializable _wrapper(com.fasterxml.jackson.databind.node.BaseJsonNode) -> _wrapper
    22:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack -> com.fasterxml.jackson.databind.node.k$a:
# {"fileName":"InternalNodeMapper.java","id":"sourceFile"}
    java.util.Iterator[] _stack -> a
    int _top -> b
    int _end -> c
    172:172:void <init>() -> <init>
    176:189:void push(java.util.Iterator) -> push
    192:197:java.util.Iterator popOrNull() -> popOrNull
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer -> com.fasterxml.jackson.databind.node.k$b:
# {"fileName":"InternalNodeMapper.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.node.BaseJsonNode _root -> a
    com.fasterxml.jackson.databind.SerializerProvider _context -> b
    78:80:void <init>(com.fasterxml.jackson.databind.node.BaseJsonNode) -> <init>
    84:86:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    93:94:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    98:107:void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.JsonNode) -> _serializeNonRecursive
    113:156:void _serializeNonRecursive(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack,java.util.Iterator) -> _serializeNonRecursive
com.fasterxml.jackson.databind.node.JsonNodeCreator -> com.fasterxml.jackson.databind.node.l:
# {"fileName":"JsonNodeCreator.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.node.ValueNode booleanNode(boolean) -> booleanNode
    com.fasterxml.jackson.databind.node.ValueNode nullNode() -> nullNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(int) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode textNode(java.lang.String) -> textNode
    com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[]) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[],int,int) -> binaryNode
    com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object) -> pojoNode
    com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue) -> rawValueNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode(int) -> arrayNode
    com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
com.fasterxml.jackson.databind.node.JsonNodeFactory -> com.fasterxml.jackson.databind.node.m:
# {"fileName":"JsonNodeFactory.java","id":"sourceFile"}
    long serialVersionUID -> c
    int MAX_ELEMENT_INDEX_FOR_INSERT -> a
    boolean _cfgBigDecimalExact -> d
    com.fasterxml.jackson.databind.node.JsonNodeFactory instance -> b
    68:70:void <init>(boolean) -> <init>
    79:80:void <init>() -> <init>
    96:96:com.fasterxml.jackson.databind.node.JsonNodeFactory withExactBigDecimals(boolean) -> withExactBigDecimals
    109:109:int getMaxElementIndexForInsert() -> getMaxElementIndexForInsert
    118:118:boolean willStripTrailingBigDecimalZeroes() -> willStripTrailingBigDecimalZeroes
    133:133:com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean) -> booleanNode
    141:141:com.fasterxml.jackson.databind.node.NullNode nullNode() -> nullNode
    144:144:com.fasterxml.jackson.databind.JsonNode missingNode() -> missingNode
    158:158:com.fasterxml.jackson.databind.node.NumericNode numberNode(byte) -> numberNode
    168:168:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    176:176:com.fasterxml.jackson.databind.node.NumericNode numberNode(short) -> numberNode
    186:186:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Short) -> numberNode
    194:194:com.fasterxml.jackson.databind.node.NumericNode numberNode(int) -> numberNode
    204:204:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    213:213:com.fasterxml.jackson.databind.node.NumericNode numberNode(long) -> numberNode
    223:226:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Long) -> numberNode
    235:238:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigInteger) -> numberNode
    246:246:com.fasterxml.jackson.databind.node.NumericNode numberNode(float) -> numberNode
    256:256:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Float) -> numberNode
    264:264:com.fasterxml.jackson.databind.node.NumericNode numberNode(double) -> numberNode
    274:274:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Double) -> numberNode
    290:295:com.fasterxml.jackson.databind.node.ValueNode numberNode(java.math.BigDecimal) -> numberNode
    309:309:com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> textNode
    317:317:com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]) -> binaryNode
    326:326:com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    339:339:com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    347:347:com.fasterxml.jackson.databind.node.ArrayNode arrayNode(int) -> arrayNode
    353:353:com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
    362:362:com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object) -> pojoNode
    366:366:com.fasterxml.jackson.databind.node.ValueNode rawValueNode(com.fasterxml.jackson.databind.util.RawValue) -> rawValueNode
    377:379:boolean _inIntRange(long) -> _inIntRange
    39:39:com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[],int,int) -> binaryNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode binaryNode(byte[]) -> binaryNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode textNode(java.lang.String) -> textNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode numberNode(double) -> numberNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode numberNode(float) -> numberNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode numberNode(long) -> numberNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode numberNode(int) -> numberNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode numberNode(short) -> numberNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode numberNode(byte) -> numberNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode nullNode() -> nullNode
    39:39:com.fasterxml.jackson.databind.node.ValueNode booleanNode(boolean) -> booleanNode
    60:60:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.JsonNodeType -> com.fasterxml.jackson.databind.node.n:
# {"fileName":"JsonNodeType.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.node.JsonNodeType ARRAY -> a
    com.fasterxml.jackson.databind.node.JsonNodeType BINARY -> b
    com.fasterxml.jackson.databind.node.JsonNodeType BOOLEAN -> c
    com.fasterxml.jackson.databind.node.JsonNodeType MISSING -> d
    com.fasterxml.jackson.databind.node.JsonNodeType NULL -> e
    com.fasterxml.jackson.databind.node.JsonNodeType NUMBER -> f
    com.fasterxml.jackson.databind.node.JsonNodeType OBJECT -> g
    com.fasterxml.jackson.databind.node.JsonNodeType POJO -> h
    com.fasterxml.jackson.databind.node.JsonNodeType STRING -> i
    com.fasterxml.jackson.databind.node.JsonNodeType[] $VALUES -> j
    17:17:com.fasterxml.jackson.databind.node.JsonNodeType[] values() -> values
    17:17:com.fasterxml.jackson.databind.node.JsonNodeType valueOf(java.lang.String) -> valueOf
    17:17:void <init>(java.lang.String,int) -> <init>
    17:27:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.LongNode -> com.fasterxml.jackson.databind.node.o:
# {"fileName":"LongNode.java","id":"sourceFile"}
    long _value -> a
    27:27:void <init>(long) -> <init>
    29:29:com.fasterxml.jackson.databind.node.LongNode valueOf(long) -> valueOf
    37:37:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    40:40:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    44:44:boolean isIntegralNumber() -> isIntegralNumber
    47:47:boolean isLong() -> isLong
    50:50:boolean canConvertToInt() -> canConvertToInt
    52:52:boolean canConvertToLong() -> canConvertToLong
    56:56:java.lang.Number numberValue() -> numberValue
    60:60:short shortValue() -> shortValue
    63:63:int intValue() -> intValue
    66:66:long longValue() -> longValue
    69:69:float floatValue() -> floatValue
    72:72:double doubleValue() -> doubleValue
    75:75:java.math.BigDecimal decimalValue() -> decimalValue
    78:78:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    82:82:java.lang.String asText() -> asText
    87:87:boolean asBoolean(boolean) -> asBoolean
    94:95:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    100:105:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.MissingNode -> com.fasterxml.jackson.databind.node.p:
# {"fileName":"MissingNode.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.node.MissingNode instance -> b
    34:34:void <init>() -> <init>
    38:38:java.lang.Object readResolve() -> readResolve
    43:43:boolean isMissingNode() -> isMissingNode
    49:49:com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    51:51:com.fasterxml.jackson.databind.node.MissingNode getInstance() -> getInstance
    56:56:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    59:59:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    61:61:java.lang.String asText() -> asText
    63:63:java.lang.String asText(java.lang.String) -> asText
    90:91:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    98:99:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    110:110:com.fasterxml.jackson.databind.JsonNode require() -> require
    116:116:com.fasterxml.jackson.databind.JsonNode requireNonNull() -> requireNonNull
    121:121:int hashCode() -> hashCode
    134:134:java.lang.String toString() -> toString
    139:139:java.lang.String toPrettyString() -> toPrettyString
    151:151:boolean equals(java.lang.Object) -> equals
    27:27:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.NodeCursor -> com.fasterxml.jackson.databind.node.q:
# {"fileName":"NodeCursor.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.node.NodeCursor _parent -> g
    java.lang.String _currentName -> h
    java.lang.Object _currentValue -> i
    33:37:void <init>(int,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    47:47:com.fasterxml.jackson.databind.node.NodeCursor getParent() -> getParent
    51:51:java.lang.String getCurrentName() -> getCurrentName
    58:59:void overrideCurrentName(java.lang.String) -> overrideCurrentName
    63:63:java.lang.Object getCurrentValue() -> getCurrentValue
    68:69:void setCurrentValue(java.lang.Object) -> setCurrentValue
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    com.fasterxml.jackson.databind.node.NodeCursor startObject() -> startObject
    com.fasterxml.jackson.databind.node.NodeCursor startArray() -> startArray
    88:96:com.fasterxml.jackson.databind.node.NodeCursor iterateChildren() -> iterateChildren
    12:12:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor -> com.fasterxml.jackson.databind.node.q$a:
# {"fileName":"NodeCursor.java","id":"sourceFile"}
    java.util.Iterator _contents -> j
    com.fasterxml.jackson.databind.JsonNode _currentElement -> k
    160:162:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    167:173:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    177:177:com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    180:180:com.fasterxml.jackson.databind.node.NodeCursor startArray() -> startArray
    183:183:com.fasterxml.jackson.databind.node.NodeCursor startObject() -> startObject
    152:152:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor -> com.fasterxml.jackson.databind.node.q$b:
# {"fileName":"NodeCursor.java","id":"sourceFile"}
    java.util.Iterator _contents -> j
    java.util.Map$Entry _current -> k
    boolean _needEntry -> l
    197:200:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    206:219:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    224:224:com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    228:228:com.fasterxml.jackson.databind.node.NodeCursor startArray() -> startArray
    231:231:com.fasterxml.jackson.databind.node.NodeCursor startObject() -> startObject
    187:187:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$RootCursor -> com.fasterxml.jackson.databind.node.q$c:
# {"fileName":"NodeCursor.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonNode _node -> j
    boolean _done -> k
    114:119:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor) -> <init>
    124:124:void overrideCurrentName(java.lang.String) -> overrideCurrentName
    128:134:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    141:141:com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    145:145:com.fasterxml.jackson.databind.node.NodeCursor startArray() -> startArray
    148:148:com.fasterxml.jackson.databind.node.NodeCursor startObject() -> startObject
    109:109:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeSerialization -> com.fasterxml.jackson.databind.node.r:
# {"fileName":"NodeSerialization.java","id":"sourceFile"}
    int LONGEST_EAGER_ALLOC -> a
    long serialVersionUID -> c
    byte[] json -> b
    24:24:void <init>() -> <init>
    26:26:void <init>(byte[]) -> <init>
    30:32:java.lang.Object readResolve() -> readResolve
    38:40:com.fasterxml.jackson.databind.node.NodeSerialization from(java.lang.Object) -> from
    46:48:void writeExternal(java.io.ObjectOutput) -> writeExternal
    52:54:void readExternal(java.io.ObjectInput) -> readExternal
    58:83:byte[] _read(java.io.ObjectInput,int) -> _read
com.fasterxml.jackson.databind.node.NullNode -> com.fasterxml.jackson.databind.node.s:
# {"fileName":"NullNode.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.node.NullNode instance -> a
    27:27:void <init>() -> <init>
    31:31:java.lang.Object readResolve() -> readResolve
    34:34:com.fasterxml.jackson.databind.node.NullNode getInstance() -> getInstance
    38:38:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    41:41:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    43:43:java.lang.String asText(java.lang.String) -> asText
    44:44:java.lang.String asText() -> asText
    49:49:com.fasterxml.jackson.databind.JsonNode requireNonNull() -> requireNonNull
    65:66:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    72:72:boolean equals(java.lang.Object) -> equals
    77:77:int hashCode() -> hashCode
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.NumericNode -> com.fasterxml.jackson.databind.node.t:
# {"fileName":"NumericNode.java","id":"sourceFile"}
    long serialVersionUID -> a
    16:16:void <init>() -> <init>
    21:21:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.String asText() -> asText
    50:50:int asInt() -> asInt
    55:55:int asInt(int) -> asInt
    60:60:long asLong() -> asLong
    65:65:long asLong(long) -> asLong
    70:70:double asDouble() -> asDouble
    75:75:double asDouble(double) -> asDouble
    92:92:boolean isNaN() -> isNaN
com.fasterxml.jackson.databind.node.ObjectNode -> com.fasterxml.jackson.databind.node.u:
# {"fileName":"ObjectNode.java","id":"sourceFile"}
    long serialVersionUID -> c
    java.util.Map _children -> b
    31:33:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> <init>
    39:41:void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory,java.util.Map) -> <init>
    45:45:com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer) -> _at
    56:61:com.fasterxml.jackson.databind.node.ObjectNode deepCopy() -> deepCopy
    74:89:com.fasterxml.jackson.databind.node.ObjectNode with(java.lang.String) -> with
    96:111:com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String) -> withArray
    119:135:com.fasterxml.jackson.databind.node.ObjectNode _withObject(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withObject
    143:160:com.fasterxml.jackson.databind.node.ArrayNode _withArray(com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.core.JsonPointer,com.fasterxml.jackson.databind.JsonNode$OverwriteMode,boolean) -> _withArray
    165:177:com.fasterxml.jackson.databind.node.ObjectNode _withObjectAddTailProperty(com.fasterxml.jackson.core.JsonPointer,boolean) -> _withObjectAddTailProperty
    182:194:com.fasterxml.jackson.databind.node.ArrayNode _withArrayAddTailProperty(com.fasterxml.jackson.core.JsonPointer,boolean) -> _withArrayAddTailProperty
    206:206:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider) -> isEmpty
    217:217:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    222:222:boolean isObject() -> isObject
    225:225:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    229:229:int size() -> size
    233:233:boolean isEmpty() -> isEmpty
    237:237:java.util.Iterator elements() -> elements
    241:241:com.fasterxml.jackson.databind.JsonNode get(int) -> get
    245:245:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    250:250:java.util.Iterator fieldNames() -> fieldNames
    255:255:com.fasterxml.jackson.databind.JsonNode path(int) -> path
    261:265:com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    270:274:com.fasterxml.jackson.databind.JsonNode required(java.lang.String) -> required
    283:283:java.util.Iterator fields() -> fields
    294:294:java.util.Set properties() -> properties
    300:318:boolean equals(java.util.Comparator,com.fasterxml.jackson.databind.JsonNode) -> equals
    330:339:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    345:355:java.util.List findValues(java.lang.String,java.util.List) -> findValues
    361:372:java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    378:387:com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    393:404:java.util.List findParents(java.lang.String,java.util.List) -> findParents
    422:439:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    447:467:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    479:498:void serializeFilteredContents(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean,boolean) -> serializeFilteredContents
    528:532:com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> set
    550:557:com.fasterxml.jackson.databind.JsonNode setAll(java.util.Map) -> setAll
    575:576:com.fasterxml.jackson.databind.JsonNode setAll(com.fasterxml.jackson.databind.node.ObjectNode) -> setAll
    593:596:com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> replace
    612:613:com.fasterxml.jackson.databind.JsonNode without(java.lang.String) -> without
    631:632:com.fasterxml.jackson.databind.JsonNode without(java.util.Collection) -> without
    657:660:com.fasterxml.jackson.databind.JsonNode put(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> put
    688:691:com.fasterxml.jackson.databind.JsonNode putIfAbsent(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> putIfAbsent
    702:702:com.fasterxml.jackson.databind.JsonNode remove(java.lang.String) -> remove
    715:716:com.fasterxml.jackson.databind.node.ObjectNode remove(java.util.Collection) -> remove
    728:729:com.fasterxml.jackson.databind.node.ObjectNode removeAll() -> removeAll
    744:744:com.fasterxml.jackson.databind.JsonNode putAll(java.util.Map) -> putAll
    759:759:com.fasterxml.jackson.databind.JsonNode putAll(com.fasterxml.jackson.databind.node.ObjectNode) -> putAll
    772:773:com.fasterxml.jackson.databind.node.ObjectNode retain(java.util.Collection) -> retain
    785:785:com.fasterxml.jackson.databind.node.ObjectNode retain(java.lang.String[]) -> retain
    807:809:com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String) -> putArray
    825:827:com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String) -> putObject
    849:849:com.fasterxml.jackson.databind.node.ObjectNode putPOJO(java.lang.String,java.lang.Object) -> putPOJO
    856:856:com.fasterxml.jackson.databind.node.ObjectNode putRawValue(java.lang.String,com.fasterxml.jackson.databind.util.RawValue) -> putRawValue
    868:869:com.fasterxml.jackson.databind.node.ObjectNode putNull(java.lang.String) -> putNull
    878:878:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,short) -> put
    888:889:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Short) -> put
    902:902:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,int) -> put
    912:913:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Integer) -> put
    926:926:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,long) -> put
    942:943:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Long) -> put
    952:952:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,float) -> put
    962:963:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Float) -> put
    972:972:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,double) -> put
    982:983:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Double) -> put
    992:993:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.math.BigDecimal) -> put
    1004:1005:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.math.BigInteger) -> put
    1014:1015:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.String) -> put
    1024:1024:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,boolean) -> put
    1034:1035:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Boolean) -> put
    1044:1045:com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,byte[]) -> put
    1057:1062:boolean equals(java.lang.Object) -> equals
    1070:1070:boolean _childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode) -> _childrenEqual
    1076:1076:int hashCode() -> hashCode
    1087:1088:com.fasterxml.jackson.databind.node.ObjectNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> _put
    21:21:com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    21:21:com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String) -> withArray
    21:21:com.fasterxml.jackson.databind.JsonNode with(java.lang.String) -> with
    21:21:com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    21:21:com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    21:21:com.fasterxml.jackson.core.TreeNode path(int) -> path
    21:21:com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    21:21:com.fasterxml.jackson.core.TreeNode get(int) -> get
    21:21:com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
com.fasterxml.jackson.databind.node.POJONode -> com.fasterxml.jackson.databind.node.v:
# {"fileName":"POJONode.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.lang.Object _value -> a
    21:21:void <init>(java.lang.Object) -> <init>
    31:31:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    34:34:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    44:47:byte[] binaryValue() -> binaryValue
    57:57:java.lang.String asText() -> asText
    60:60:java.lang.String asText(java.lang.String) -> asText
    66:69:boolean asBoolean(boolean) -> asBoolean
    75:78:int asInt(int) -> asInt
    84:87:long asLong(long) -> asLong
    93:96:double asDouble(double) -> asDouble
    108:117:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    128:128:java.lang.Object getPojo() -> getPojo
    139:144:boolean equals(java.lang.Object) -> equals
    152:155:boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode) -> _pojoEquals
    159:159:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.ShortNode -> com.fasterxml.jackson.databind.node.w:
# {"fileName":"ShortNode.java","id":"sourceFile"}
    short _value -> a
    27:27:void <init>(short) -> <init>
    29:29:com.fasterxml.jackson.databind.node.ShortNode valueOf(short) -> valueOf
    37:37:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    40:40:com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    44:44:boolean isIntegralNumber() -> isIntegralNumber
    47:47:boolean isShort() -> isShort
    49:49:boolean canConvertToInt() -> canConvertToInt
    50:50:boolean canConvertToLong() -> canConvertToLong
    54:54:java.lang.Number numberValue() -> numberValue
    58:58:short shortValue() -> shortValue
    61:61:int intValue() -> intValue
    64:64:long longValue() -> longValue
    67:67:float floatValue() -> floatValue
    70:70:double doubleValue() -> doubleValue
    73:73:java.math.BigDecimal decimalValue() -> decimalValue
    76:76:java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    80:80:java.lang.String asText() -> asText
    85:85:boolean asBoolean(boolean) -> asBoolean
    92:93:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    98:103:boolean equals(java.lang.Object) -> equals
    108:108:int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.TextNode -> com.fasterxml.jackson.databind.node.x:
# {"fileName":"TextNode.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.node.TextNode EMPTY_STRING_NODE -> a
    java.lang.String _value -> b
    25:25:void <init>(java.lang.String) -> <init>
    38:44:com.fasterxml.jackson.databind.node.TextNode valueOf(java.lang.String) -> valueOf
    49:49:com.fasterxml.jackson.databind.node.JsonNodeType getNodeType() -> getNodeType
    52:52:com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    56:56:java.lang.String textValue() -> textValue
    67:84:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    89:89:byte[] binaryValue() -> binaryValue
    100:100:java.lang.String asText() -> asText
    105:105:java.lang.String asText(java.lang.String) -> asText
    112:121:boolean asBoolean(boolean) -> asBoolean
    126:126:int asInt(int) -> asInt
    131:131:long asLong(long) -> asLong
    136:136:double asDouble(double) -> asDouble
    148:153:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    164:169:boolean equals(java.lang.Object) -> equals
    173:173:int hashCode() -> hashCode
    178:181:void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.TreeTraversingParser -> com.fasterxml.jackson.databind.node.y:
# {"fileName":"TreeTraversingParser.java","id":"sourceFile"}
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> d
    com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor -> e
    boolean _closed -> f
    53:53:void <init>(com.fasterxml.jackson.databind.JsonNode) -> <init>
    57:60:void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.ObjectCodec) -> <init>
    64:65:void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    69:69:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    74:74:com.fasterxml.jackson.core.Version version() -> version
    80:80:com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    92:97:void close() -> close
    108:125:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    134:141:com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    146:146:boolean isClosed() -> isClosed
    156:160:java.lang.String getCurrentName() -> getCurrentName
    164:171:void overrideCurrentName(java.lang.String) -> overrideCurrentName
    175:175:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    180:180:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    185:185:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    197:216:java.lang.String getText() -> getText
    222:222:char[] getTextCharacters() -> getTextCharacters
    227:227:int getTextLength() -> getTextLength
    232:232:int getTextOffset() -> getTextOffset
    238:238:boolean hasTextCharacters() -> hasTextCharacters
    251:252:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    258:258:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    263:263:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    268:268:double getDoubleValue() -> getDoubleValue
    273:273:float getFloatValue() -> getFloatValue
    278:282:int getIntValue() -> getIntValue
    287:291:long getLongValue() -> getLongValue
    296:296:java.lang.Number getNumberValue() -> getNumberValue
    302:313:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    318:324:boolean isNaN() -> isNaN
    338:348:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    356:361:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    371:374:com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    380:385:com.fasterxml.jackson.databind.JsonNode currentNumericNode() -> currentNumericNode
    390:391:void _handleEOF() -> _handleEOF
com.fasterxml.jackson.databind.node.TreeTraversingParser$1 -> com.fasterxml.jackson.databind.node.y$1:
# {"fileName":"TreeTraversingParser.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    113:113:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.node.ValueNode -> com.fasterxml.jackson.databind.node.z:
# {"fileName":"ValueNode.java","id":"sourceFile"}
    long serialVersionUID -> a
    22:22:void <init>() -> <init>
    28:28:com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer) -> _at
    37:37:com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    46:50:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    59:59:boolean isEmpty() -> isEmpty
    68:68:com.fasterxml.jackson.databind.JsonNode get(int) -> get
    71:71:com.fasterxml.jackson.databind.JsonNode path(int) -> path
    74:74:boolean has(int) -> has
    77:77:boolean hasNonNull(int) -> hasNonNull
    80:80:com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    83:83:com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    86:86:boolean has(java.lang.String) -> has
    89:89:boolean hasNonNull(java.lang.String) -> hasNonNull
    99:99:com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    105:105:com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    110:110:java.util.List findValues(java.lang.String,java.util.List) -> findValues
    115:115:java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    120:120:java.util.List findParents(java.lang.String,java.util.List) -> findParents
    17:17:com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    17:17:com.fasterxml.jackson.core.TreeNode path(int) -> path
    17:17:com.fasterxml.jackson.core.TreeNode path(java.lang.String) -> path
    17:17:com.fasterxml.jackson.core.TreeNode get(int) -> get
    17:17:com.fasterxml.jackson.core.TreeNode get(java.lang.String) -> get
com.fasterxml.jackson.databind.node.package-info -> com.fasterxml.jackson.databind.node.aa:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.package-info -> com.fasterxml.jackson.databind.aj:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.ser.AnyGetterWriter -> com.fasterxml.jackson.databind.ser.a:
# {"fileName":"AnyGetterWriter.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.BeanProperty _property -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> b
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> c
    com.fasterxml.jackson.databind.ser.std.MapSerializer _mapSerializer -> d
    31:38:void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    44:46:void fixAccess(com.fasterxml.jackson.databind.SerializationConfig) -> fixAccess
    51:66:void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> getAndSerialize
    75:92:void getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter) -> getAndFilter
    99:106:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
com.fasterxml.jackson.databind.ser.BasicSerializerFactory -> com.fasterxml.jackson.databind.ser.b:
# {"fileName":"BasicSerializerFactory.java","id":"sourceFile"}
    java.util.HashMap _concrete -> a
    java.util.HashMap _concreteLazy -> b
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig -> c
    136:138:void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> <init>
    148:148:com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig getFactoryConfig() -> getFactoryConfig
    com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> withConfig
    169:169:com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    178:178:com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    187:187:com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    209:263:com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
    272:297:com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
    309:327:com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createTypeSerializer
    java.lang.Iterable customSerializers() -> customSerializers
    352:364:com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByLookup
    387:411:com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializerByAnnotations
    426:484:com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByPrimaryType
    496:496:com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findOptionalStdSerializer
    510:527:com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByAddonType
    542:548:com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializerFromAnnotation
    561:566:com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer) -> findConvertingSerializer
    573:577:com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> findConverter
    593:682:com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> buildContainerSerializer
    696:759:com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildCollectionSerializer
    770:770:boolean isIndexedList(java.lang.Class) -> isIndexedList
    775:775:com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildIndexedListSerializer
    780:780:com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildCollectionSerializer
    784:784:com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType) -> buildEnumSetSerializer
    805:851:com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildMapSerializer
    865:914:com.fasterxml.jackson.databind.ser.std.MapSerializer _checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer) -> _checkMapContentInclusion
    927:981:com.fasterxml.jackson.databind.JsonSerializer buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> buildMapEntrySerializer
    997:1022:com.fasterxml.jackson.annotation.JsonInclude$Value _findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _findInclusionWithContent
    1045:1078:com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildArraySerializer
    1095:1113:com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findReferenceSerializer
    1121:1168:com.fasterxml.jackson.databind.JsonSerializer buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildAtomicReferenceSerializer
    1185:1185:com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType) -> buildIteratorSerializer
    1196:1196:com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType) -> buildIterableSerializer
    1208:1224:com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildEnumSerializer
    1242:1247:com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> _findKeySerializer
    1259:1264:com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> _findContentSerializer
    1272:1272:java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findFilterId
    1289:1297:boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> usesStaticTyping
    63:111:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1 -> com.fasterxml.jackson.databind.ser.b$1:
# {"fileName":"BasicSerializerFactory.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> a
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> b
    470:884:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanPropertyFilter -> com.fasterxml.jackson.databind.ser.c:
# {"fileName":"BeanPropertyFilter.java","id":"sourceFile"}
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> serializeAsField
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.BeanPropertyWriter -> com.fasterxml.jackson.databind.ser.d:
# {"fileName":"BeanPropertyWriter.java","id":"sourceFile"}
    long serialVersionUID -> w
    java.lang.Object MARKER_FOR_EMPTY -> c
    com.fasterxml.jackson.core.io.SerializedString _name -> d
    com.fasterxml.jackson.databind.PropertyName _wrapperName -> e
    com.fasterxml.jackson.databind.JavaType _declaredType -> f
    com.fasterxml.jackson.databind.JavaType _cfgSerializationType -> g
    com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType -> h
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> i
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> j
    java.lang.reflect.Method _accessorMethod -> k
    java.lang.reflect.Field _field -> l
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> m
    com.fasterxml.jackson.databind.JsonSerializer _nullSerializer -> n
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> o
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> p
    boolean _suppressNulls -> q
    java.lang.Object _suppressableValue -> r
    java.lang.Class[] _includeInViews -> s
    java.util.HashMap _internalSettings -> v
    216:248:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class[]) -> <init>
    257:260:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object) -> <init>
    270:290:void <init>() -> <init>
    296:297:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    303:334:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName) -> <init>
    337:359:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString) -> <init>
    362:366:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    375:375:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _new(com.fasterxml.jackson.databind.PropertyName) -> _new
    385:386:void assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> assignTypeSerializer
    393:399:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    406:412:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    419:419:com.fasterxml.jackson.databind.ser.BeanPropertyWriter unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingWriter
    428:429:void setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType) -> setNonTrivialBaseType
    439:440:void fixAccess(com.fasterxml.jackson.databind.SerializationConfig) -> fixAccess
    454:464:java.lang.Object readResolve() -> readResolve
    476:476:java.lang.String getName() -> getName
    482:482:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    487:487:com.fasterxml.jackson.databind.JavaType getType() -> getType
    492:492:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    498:498:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    504:505:java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    510:510:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    516:517:void _depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode) -> _depositSchemaProperty
    532:532:java.lang.Object getInternalSetting(java.lang.Object) -> getInternalSetting
    541:544:java.lang.Object setInternalSetting(java.lang.Object,java.lang.Object) -> setInternalSetting
    553:561:java.lang.Object removeInternalSetting(java.lang.Object) -> removeInternalSetting
    571:571:com.fasterxml.jackson.core.SerializableString getSerializedName() -> getSerializedName
    575:575:boolean hasSerializer() -> hasSerializer
    579:579:boolean hasNullSerializer() -> hasNullSerializer
    586:586:com.fasterxml.jackson.databind.jsontype.TypeSerializer getTypeSerializer() -> getTypeSerializer
    600:600:boolean isUnwrapping() -> isUnwrapping
    604:604:boolean willSuppressNulls() -> willSuppressNulls
    614:618:boolean wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName) -> wouldConflictWithName
    623:623:com.fasterxml.jackson.databind.JsonSerializer getSerializer() -> getSerializer
    627:627:com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
    632:633:java.lang.Class getRawSerializationType() -> getRawSerializationType
    641:647:java.lang.Class getPropertyType() -> getPropertyType
    659:665:java.lang.reflect.Type getGenericPropertyType() -> getGenericPropertyType
    669:669:java.lang.Class[] getViews() -> getViews
    687:736:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    748:751:void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
    764:809:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    822:827:void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsPlaceholder
    839:846:void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    865:884:void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    896:907:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    919:920:java.lang.Object get(java.lang.Object) -> get
    941:965:boolean _handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> _handleSelfReference
    970:989:java.lang.String toString() -> toString
    48:48:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializer -> com.fasterxml.jackson.databind.ser.e:
# {"fileName":"BeanSerializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    45:46:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    54:55:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) -> <init>
    59:60:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    64:65:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    68:69:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set) -> <init>
    74:75:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    89:89:com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType) -> createDummy
    100:100:com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> createDummy
    105:105:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    110:110:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    115:115:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    120:120:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    126:126:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> withProperties
    144:151:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    169:181:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    190:190:java.lang.String toString() -> toString
    26:26:com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder -> com.fasterxml.jackson.databind.ser.f:
# {"fileName":"BeanSerializerBuilder.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES -> i
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> a
    com.fasterxml.jackson.databind.SerializationConfig _config -> b
    java.util.List _properties -> c
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties -> d
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter -> e
    java.lang.Object _filterId -> f
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> g
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> h
    40:78:void <init>(com.fasterxml.jackson.databind.BeanDescription) -> <init>
    40:92:void <init>(com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> <init>
    104:105:void setConfig(com.fasterxml.jackson.databind.SerializationConfig) -> setConfig
    108:109:void setProperties(java.util.List) -> setProperties
    117:125:void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> setFilteredProperties
    128:129:void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter) -> setAnyGetter
    132:133:void setFilterId(java.lang.Object) -> setFilterId
    137:141:void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> setTypeId
    144:145:void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> setObjectIdWriter
    155:155:com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    157:157:com.fasterxml.jackson.databind.BeanDescription getBeanDescription() -> getBeanDescription
    159:159:java.util.List getProperties() -> getProperties
    161:161:boolean hasProperties() -> hasProperties
    164:164:com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] getFilteredProperties() -> getFilteredProperties
    166:166:com.fasterxml.jackson.databind.ser.AnyGetterWriter getAnyGetter() -> getAnyGetter
    168:168:java.lang.Object getFilterId() -> getFilterId
    170:170:com.fasterxml.jackson.databind.introspect.AnnotatedMember getTypeId() -> getTypeId
    172:172:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter getObjectIdWriter() -> getObjectIdWriter
    189:223:com.fasterxml.jackson.databind.JsonSerializer build() -> build
    234:234:com.fasterxml.jackson.databind.ser.BeanSerializer createDummy() -> createDummy
    19:19:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializerFactory -> com.fasterxml.jackson.databind.ser.g:
# {"fileName":"BeanSerializerFactory.java","id":"sourceFile"}
    long serialVersionUID -> e
    com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance -> d
    86:87:void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> <init>
    98:112:com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> withConfig
    117:117:java.lang.Iterable customSerializers() -> customSerializers
    143:188:com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    195:258:com.fasterxml.jackson.databind.JsonSerializer _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> _createSerializer2
    273:273:com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findBeanSerializer
    288:295:com.fasterxml.jackson.databind.JsonSerializer findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findBeanOrAddOnSerializer
    312:324:com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyTypeSerializer
    341:354:com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyContentTypeSerializer
    368:368:com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription) -> constructBeanSerializer
    384:499:com.fasterxml.jackson.databind.JsonSerializer constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> constructBeanOrAddOnSerializer
    506:548:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> constructObjectIdHandler
    559:559:com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> constructFilteredBeanWriter
    565:565:com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> constructPropertyBuilder
    569:569:com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription) -> constructBeanSerializerBuilder
    588:588:boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    599:639:java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> findBeanProperties
    659:680:java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> filterBeanProperties
    696:711:java.util.List filterUnwantedJDKProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> filterUnwantedJDKProperties
    726:751:void processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> processViews
    762:797:void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> removeIgnorableTypes
    805:814:void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> removeSetterlessGetters
    826:842:java.util.List removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List) -> removeOverlappingTypeIds
    860:883:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _constructWriter
    893:901:com.fasterxml.jackson.databind.JsonSerializer _findUnsupportedTypeSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> _findUnsupportedTypeSerializer
    912:919:boolean _isUnserializableJacksonType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> _isUnserializableJacksonType
    73:73:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.BeanSerializerModifier -> com.fasterxml.jackson.databind.ser.h:
# {"fileName":"BeanSerializerModifier.java","id":"sourceFile"}
    36:36:void <init>() -> <init>
    49:49:java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> changeProperties
    64:64:java.util.List orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> orderProperties
    78:78:com.fasterxml.jackson.databind.ser.BeanSerializerBuilder updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> updateBuilder
    95:95:com.fasterxml.jackson.databind.JsonSerializer modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifySerializer
    123:123:com.fasterxml.jackson.databind.JsonSerializer modifyArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyArraySerializer
    131:131:com.fasterxml.jackson.databind.JsonSerializer modifyCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyCollectionSerializer
    139:139:com.fasterxml.jackson.databind.JsonSerializer modifyCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyCollectionLikeSerializer
    147:147:com.fasterxml.jackson.databind.JsonSerializer modifyMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyMapSerializer
    155:155:com.fasterxml.jackson.databind.JsonSerializer modifyMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyMapLikeSerializer
    163:163:com.fasterxml.jackson.databind.JsonSerializer modifyEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyEnumSerializer
    185:185:com.fasterxml.jackson.databind.JsonSerializer modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifyKeySerializer
com.fasterxml.jackson.databind.ser.ContainerSerializer -> com.fasterxml.jackson.databind.ser.i:
# {"fileName":"ContainerSerializer.java","id":"sourceFile"}
    25:26:void <init>(java.lang.Class) -> <init>
    32:33:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    42:43:void <init>(java.lang.Class,boolean) -> <init>
    46:47:void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer) -> <init>
    60:61:com.fasterxml.jackson.databind.ser.ContainerSerializer withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    150:150:boolean hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> hasContentTypeAnnotation
com.fasterxml.jackson.databind.ser.ContextualSerializer -> com.fasterxml.jackson.databind.ser.j:
# {"fileName":"ContextualSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider -> com.fasterxml.jackson.databind.ser.k:
# {"fileName":"DefaultSerializerProvider.java","id":"sourceFile"}
    long serialVersionUID -> s
    java.util.Map _seenObjectIds -> p
    java.util.ArrayList _objectIdGenerators -> q
    com.fasterxml.jackson.core.JsonGenerator _generator -> r
    65:65:void <init>() -> <init>
    69:70:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    73:74:void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) -> <init>
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
    93:93:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy() -> copy
    106:138:com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> serializerInstance
    145:154:java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class) -> includeFilterInstance
    160:172:boolean includeFilterSuppressNulls(java.lang.Object) -> includeFilterSuppressNulls
    185:213:com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    228:231:java.util.Map _createObjectIdMap() -> _createObjectIdMap
    252:271:boolean hasSerializerFor(java.lang.Class,java.util.concurrent.atomic.AtomicReference) -> hasSerializerFor
    283:283:com.fasterxml.jackson.core.JsonGenerator getGenerator() -> getGenerator
    300:319:void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> serializeValue
    334:356:void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> serializeValue
    373:400:void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> serializeValue
    412:458:void serializePolymorphic(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializePolymorphic
    465:472:void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.PropertyName) -> _serialize
    479:483:void _serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer) -> _serialize
    492:498:void _serializeNull(com.fasterxml.jackson.core.JsonGenerator) -> _serializeNull
    501:508:java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception) -> _wrapAsIOE
    529:529:int cachedSerializersCount() -> cachedSerializersCount
    539:540:void flushCachedSerializers() -> flushCachedSerializers
    558:566:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    584:592:com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl -> com.fasterxml.jackson.databind.ser.k$a:
# {"fileName":"DefaultSerializerProvider.java","id":"sourceFile"}
    long serialVersionUID -> s
    609:609:void <init>() -> <init>
    610:610:void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl) -> <init>
    614:615:void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> <init>
    620:623:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy() -> copy
    628:628:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
    606:606:com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
com.fasterxml.jackson.databind.ser.FilterProvider -> com.fasterxml.jackson.databind.ser.l:
# {"fileName":"FilterProvider.java","id":"sourceFile"}
    11:11:void <init>() -> <init>
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
    52:56:com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object,java.lang.Object) -> findPropertyFilter
com.fasterxml.jackson.databind.ser.PropertyBuilder -> com.fasterxml.jackson.databind.ser.m:
# {"fileName":"PropertyBuilder.java","id":"sourceFile"}
    java.lang.Object NO_DEFAULT_MARKER -> g
    com.fasterxml.jackson.databind.SerializationConfig _config -> a
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> c
    java.lang.Object _defaultBean -> d
    com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion -> e
    boolean _useRealPropertyDefaults -> f
    53:74:void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> <init>
    83:83:com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    100:239:com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> buildWriter
    256:256:com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object,java.lang.Class[]) -> _constructPropertyWriter
    276:314:com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType) -> findSerializationType
    325:343:java.lang.Object getDefaultBean() -> getDefaultBean
    365:372:java.lang.Object getPropertyDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> getPropertyDefaultValue
    381:381:java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType) -> getDefaultValue
    392:398:java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwWrapped
    18:18:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.PropertyBuilder$1 -> com.fasterxml.jackson.databind.ser.m$1:
# {"fileName":"PropertyBuilder.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
    156:156:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.PropertyFilter -> com.fasterxml.jackson.databind.ser.n:
# {"fileName":"PropertyFilter.java","id":"sourceFile"}
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsElement
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.PropertyWriter -> com.fasterxml.jackson.databind.ser.o:
# {"fileName":"PropertyWriter.java","id":"sourceFile"}
    long serialVersionUID -> c
    27:28:void <init>(com.fasterxml.jackson.databind.PropertyMetadata) -> <init>
    31:32:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> <init>
    35:36:void <init>(com.fasterxml.jackson.databind.ser.PropertyWriter) -> <init>
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    71:75:java.lang.annotation.Annotation findAnnotation(java.lang.Class) -> findAnnotation
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
    void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsPlaceholder
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.ResolvableSerializer -> com.fasterxml.jackson.databind.ser.p:
# {"fileName":"ResolvableSerializer.java","id":"sourceFile"}
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
com.fasterxml.jackson.databind.ser.SerializerCache -> com.fasterxml.jackson.databind.ser.q:
# {"fileName":"SerializerCache.java","id":"sourceFile"}
    int DEFAULT_MAX_CACHED -> a
    com.fasterxml.jackson.databind.util.LRUMap _sharedMap -> b
    java.util.concurrent.atomic.AtomicReference _readOnlyMap -> c
    47:48:void <init>() -> <init>
    50:54:void <init>(int) -> <init>
    62:66:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> getReadOnlyLookupMap
    72:77:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _makeReadOnlyLookupMap() -> _makeReadOnlyLookupMap
    87:87:int size() -> size
    96:98:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    103:105:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> untypedValueSerializer
    110:112:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> typedValueSerializer
    117:119:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    135:141:void addTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> addTypedSerializer
    145:151:void addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addTypedSerializer
    157:170:void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    176:189:void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    202:212:void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    219:221:void flush() -> flush
com.fasterxml.jackson.databind.ser.SerializerFactory -> com.fasterxml.jackson.databind.ser.r:
# {"fileName":"SerializerFactory.java","id":"sourceFile"}
    11:11:void <init>() -> <init>
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createTypeSerializer
    87:87:com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> createKeySerializer
com.fasterxml.jackson.databind.ser.Serializers -> com.fasterxml.jackson.databind.ser.s:
# {"fileName":"Serializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findReferenceSerializer
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
com.fasterxml.jackson.databind.ser.Serializers$Base -> com.fasterxml.jackson.databind.ser.s$a:
# {"fileName":"Serializers.java","id":"sourceFile"}
    101:101:void <init>() -> <init>
    107:107:com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    116:116:com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findReferenceSerializer
    124:124:com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    132:132:com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    140:140:com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    149:149:com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    158:158:com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.t:
# {"fileName":"VirtualBeanPropertyWriter.java","id":"sourceFile"}
    long serialVersionUID -> w
    35:37:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> <init>
    45:46:void <init>() -> <init>
    57:61:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value,java.lang.Class[]) -> <init>
    69:70:void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    73:74:void <init>(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter) -> <init>
    77:78:void <init>(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName) -> <init>
    81:85:boolean _suppressNulls(com.fasterxml.jackson.annotation.JsonInclude$Value) -> _suppressNulls
    89:98:java.lang.Object _suppressableValue(com.fasterxml.jackson.annotation.JsonInclude$Value) -> _suppressableValue
    108:108:boolean isVirtual() -> isVirtual
    java.lang.Object value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> value
    com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> withConfig
    151:190:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    200:240:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter -> com.fasterxml.jackson.databind.ser.impl.a:
# {"fileName":"AttributePropertyWriter.java","id":"sourceFile"}
    long serialVersionUID -> x
    java.lang.String _attrName -> w
    35:36:void <init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> <init>
    42:48:void <init>(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    55:55:com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter construct(java.lang.String,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType) -> construct
    60:62:void <init>(com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter) -> <init>
    71:71:com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType) -> withConfig
    82:82:java.lang.Object value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> value
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer -> com.fasterxml.jackson.databind.ser.impl.b:
# {"fileName":"BeanAsArraySerializer.java","id":"sourceFile"}
    long serialVersionUID -> l
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer -> a
    65:67:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) -> <init>
    70:71:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    74:76:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set) -> <init>
    80:82:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    95:95:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    100:100:boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    106:106:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    111:111:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    116:116:com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    124:124:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> withProperties
    130:130:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    148:157:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    168:180:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    190:195:boolean hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider) -> hasSingleElement
    202:229:void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsArray
    238:238:java.lang.String toString() -> toString
    47:47:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    47:47:com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
com.fasterxml.jackson.databind.ser.impl.FailingSerializer -> com.fasterxml.jackson.databind.ser.impl.c:
# {"fileName":"FailingSerializer.java","id":"sourceFile"}
    java.lang.String _msg -> a
    25:27:void <init>(java.lang.String) -> <init>
    32:33:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.impl.d:
# {"fileName":"FilteredBeanPropertyWriter.java","id":"sourceFile"}
    15:15:void <init>() -> <init>
    19:22:com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> constructViewBased
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView -> com.fasterxml.jackson.databind.ser.impl.d$a:
# {"fileName":"FilteredBeanPropertyWriter.java","id":"sourceFile"}
    long serialVersionUID -> y
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> w
    java.lang.Class[] _views -> x
    109:112:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> <init>
    116:116:com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    121:122:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    126:127:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    133:138:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    144:149:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    155:158:void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    162:171:boolean _inView(java.lang.Class) -> _inView
    98:98:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView -> com.fasterxml.jackson.databind.ser.impl.d$b:
# {"fileName":"FilteredBeanPropertyWriter.java","id":"sourceFile"}
    long serialVersionUID -> y
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> w
    java.lang.Class _view -> x
    43:46:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class) -> <init>
    50:50:com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    55:56:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    60:61:void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    67:73:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    79:85:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    91:95:void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    31:31:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer -> com.fasterxml.jackson.databind.ser.impl.e:
# {"fileName":"IndexedListSerializer.java","id":"sourceFile"}
    long serialVersionUID -> h
    27:28:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    33:34:void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    40:40:com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    51:51:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.List) -> isEmpty
    56:56:boolean hasSingleElement(java.util.List) -> hasSingleElement
    61:61:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    69:81:void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    87:125:void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    131:151:void serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    156:187:void serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedContents
    18:18:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    18:18:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    18:18:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    18:18:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer -> com.fasterxml.jackson.databind.ser.impl.f:
# {"fileName":"IndexedStringListSerializer.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance -> a
    37:38:void <init>() -> <init>
    42:43:void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer,java.lang.Boolean) -> <init>
    47:47:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    50:50:com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    54:55:void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    67:79:void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    86:91:void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    96:109:void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int) -> serializeContents
    22:22:void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    22:22:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    28:28:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.IteratorSerializer -> com.fasterxml.jackson.databind.ser.impl.g:
# {"fileName":"IteratorSerializer.java","id":"sourceFile"}
    19:20:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    25:26:void <init>(com.fasterxml.jackson.databind.ser.impl.IteratorSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Iterator) -> isEmpty
    36:36:boolean hasSingleElement(java.util.Iterator) -> hasSingleElement
    41:41:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    48:48:com.fasterxml.jackson.databind.ser.impl.IteratorSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    66:69:void serialize(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    75:94:void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    99:124:void _serializeDynamicContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _serializeDynamicContents
    13:13:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    13:13:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    13:13:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    13:13:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    13:13:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer -> com.fasterxml.jackson.databind.ser.impl.h:
# {"fileName":"MapEntrySerializer.java","id":"sourceFile"}
    java.lang.Object MARKER_FOR_EMPTY -> a
    com.fasterxml.jackson.databind.BeanProperty _property -> b
    boolean _valueTypeIsStatic -> c
    com.fasterxml.jackson.databind.JavaType _entryType -> d
    com.fasterxml.jackson.databind.JavaType _keyType -> e
    com.fasterxml.jackson.databind.JavaType _valueType -> f
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> g
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> h
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> i
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> j
    java.lang.Object _suppressableValue -> k
    boolean _suppressNulls -> l
    111:121:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    128:130:void <init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    138:151:void <init>(com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object,boolean) -> <init>
    155:155:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    165:165:com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object,boolean) -> withResolved
    174:178:com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    186:276:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    287:287:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    292:292:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    297:297:boolean hasSingleElement(java.util.Map$Entry) -> hasSingleElement
    303:327:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map$Entry) -> isEmpty
    340:343:void serialize(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    350:355:void serializeWithType(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    361:415:void serializeDynamic(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeDynamic
    426:430:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    436:440:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    24:24:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    24:24:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    24:24:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    24:24:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    33:33:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer$1 -> com.fasterxml.jackson.databind.ser.impl.h$1:
# {"fileName":"MapEntrySerializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
    231:231:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter -> com.fasterxml.jackson.databind.ser.impl.i:
# {"fileName":"ObjectIdWriter.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType idType -> a
    com.fasterxml.jackson.core.SerializableString propertyName -> b
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> c
    com.fasterxml.jackson.databind.JsonSerializer serializer -> d
    boolean alwaysAsId -> e
    52:58:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> <init>
    70:72:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean) -> construct
    76:76:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> withSerializer
    83:86:com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withAlwaysAsId(boolean) -> withAlwaysAsId
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator -> com.fasterxml.jackson.databind.ser.impl.j:
# {"fileName":"PropertyBasedObjectIdGenerator.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property -> b
    18:19:void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    23:25:void <init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> <init>
    33:45:boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    51:56:java.lang.Object generateId(java.lang.Object) -> generateId
    62:62:com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    68:68:com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    73:77:com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap -> com.fasterxml.jackson.databind.ser.impl.k:
# {"fileName":"PropertySerializerMap.java","id":"sourceFile"}
    boolean _resetWhenFull -> a
    35:37:void <init>(boolean) -> <init>
    39:41:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    64:65:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddPrimarySerializer
    72:73:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddPrimarySerializer
    90:91:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddSecondarySerializer
    98:99:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddSecondarySerializer
    117:118:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddRootValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> findAndAddRootValueSerializer
    128:129:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddRootValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> findAndAddRootValueSerializer
    144:145:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddKeySerializer
    155:155:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    162:162:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult addSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
    171:171:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties() -> emptyForProperties
    178:178:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForRootValues() -> emptyForRootValues
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double -> com.fasterxml.jackson.databind.ser.impl.k$a:
# {"fileName":"PropertySerializerMap.java","id":"sourceFile"}
    java.lang.Class _type1 -> b
    java.lang.Class _type2 -> c
    com.fasterxml.jackson.databind.JsonSerializer _serializer1 -> d
    com.fasterxml.jackson.databind.JsonSerializer _serializer2 -> e
    292:297:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    302:308:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    314:318:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty -> com.fasterxml.jackson.databind.ser.impl.k$b:
# {"fileName":"PropertySerializerMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_PROPERTIES -> b
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_ROOT_VALUES -> c
    237:238:void <init>(boolean) -> <init>
    242:242:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    247:247:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
    231:234:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi -> com.fasterxml.jackson.databind.ser.impl.k$c:
# {"fileName":"PropertySerializerMap.java","id":"sourceFile"}
    int MAX_ENTRIES -> b
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> c
    337:339:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[]) -> <init>
    346:371:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    377:388:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult -> com.fasterxml.jackson.databind.ser.impl.k$d:
# {"fileName":"PropertySerializerMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonSerializer serializer -> a
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map -> b
    198:201:void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap) -> <init>
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single -> com.fasterxml.jackson.databind.ser.impl.k$e:
# {"fileName":"PropertySerializerMap.java","id":"sourceFile"}
    java.lang.Class _type -> b
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> c
    263:266:void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    271:274:com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    279:279:com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer -> com.fasterxml.jackson.databind.ser.impl.k$f:
# {"fileName":"PropertySerializerMap.java","id":"sourceFile"}
    java.lang.Class type -> a
    com.fasterxml.jackson.databind.JsonSerializer serializer -> b
    212:215:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap -> com.fasterxml.jackson.databind.ser.impl.l:
# {"fileName":"ReadOnlyClassToSerializerMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets -> a
    int _size -> b
    int _mask -> c
    26:35:void <init>(com.fasterxml.jackson.databind.util.LRUMap) -> <init>
    40:45:int findSize(int) -> findSize
    52:52:com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap from(com.fasterxml.jackson.databind.util.LRUMap) -> from
    61:61:int size() -> size
    65:77:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> typedValueSerializer
    82:94:com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    99:111:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> untypedValueSerializer
    116:128:com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    31:33:void lambda$new$0(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[],com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer) -> lambda$new$0
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket -> com.fasterxml.jackson.databind.ser.impl.l$a:
# {"fileName":"ReadOnlyClassToSerializerMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonSerializer value -> a
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next -> b
    java.lang.Class _class -> c
    com.fasterxml.jackson.databind.JavaType _type -> d
    boolean _isTyped -> e
    148:154:void <init>(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket,com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    157:157:boolean matchesTyped(java.lang.Class) -> matchesTyped
    161:161:boolean matchesUntyped(java.lang.Class) -> matchesUntyped
    165:165:boolean matchesTyped(com.fasterxml.jackson.databind.JavaType) -> matchesTyped
    169:169:boolean matchesUntyped(com.fasterxml.jackson.databind.JavaType) -> matchesUntyped
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter -> com.fasterxml.jackson.databind.ser.impl.m:
# {"fileName":"SimpleBeanPropertyFilter.java","id":"sourceFile"}
    31:31:void <init>() -> <init>
    41:41:com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAll() -> serializeAll
    51:51:com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAll() -> filterOutAll
    63:63:com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAll(java.util.Set) -> serializeAll
    71:71:com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.util.Set) -> filterOutAllExcept
    75:77:com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.lang.String[]) -> filterOutAllExcept
    81:81:com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.util.Set) -> serializeAllExcept
    85:87:com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.lang.String[]) -> serializeAllExcept
    98:98:com.fasterxml.jackson.databind.ser.PropertyFilter from(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> from
    142:142:boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
    152:152:boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter) -> include
    163:163:boolean includeElement(java.lang.Object) -> includeElement
    177:182:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> serializeAsField
    190:193:void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    201:204:void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    217:222:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
    229:232:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsElement
    240:243:void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    250:253:void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1 -> com.fasterxml.jackson.databind.ser.impl.m$1:
# {"fileName":"SimpleBeanPropertyFilter.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter val$src -> a
    98:98:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> <init>
    103:104:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsField
    110:111:void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    117:118:void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    125:125:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter) -> serializeAsElement
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter -> com.fasterxml.jackson.databind.ser.impl.m$a:
# {"fileName":"SimpleBeanPropertyFilter.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter EXCLUDE_ALL -> a
    java.util.Set _propertiesToInclude -> b
    278:280:void <init>(java.util.Set) -> <init>
    284:284:boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
    289:289:boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter) -> include
    271:271:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter -> com.fasterxml.jackson.databind.ser.impl.m$b:
# {"fileName":"SimpleBeanPropertyFilter.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter INCLUDE_ALL -> a
    java.util.Set _propertiesToExclude -> b
    310:312:void <init>(java.util.Set) -> <init>
    316:316:boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
    321:321:boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter) -> include
    303:303:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider -> com.fasterxml.jackson.databind.ser.impl.n:
# {"fileName":"SimpleFilterProvider.java","id":"sourceFile"}
    long serialVersionUID -> d
    java.util.Map _filtersById -> a
    com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter -> b
    boolean _cfgFailOnUnknownId -> c
    50:51:void <init>() -> <init>
    41:70:void <init>(java.util.Map) -> <init>
    75:86:java.util.Map _convert(java.util.Map) -> _convert
    91:91:com.fasterxml.jackson.databind.ser.PropertyFilter _convert(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> _convert
    105:106:com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> setDefaultFilter
    119:120:com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.PropertyFilter) -> setDefaultFilter
    128:129:com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter) -> setDefaultFilter
    133:133:com.fasterxml.jackson.databind.ser.PropertyFilter getDefaultFilter() -> getDefaultFilter
    137:138:com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean) -> setFailOnUnknownId
    142:142:boolean willFailOnUnknownId() -> willFailOnUnknownId
    150:151:com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> addFilter
    170:171:com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.PropertyFilter) -> addFilter
    193:194:com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter) -> addFilter
    198:198:com.fasterxml.jackson.databind.ser.PropertyFilter removeFilter(java.lang.String) -> removeFilter
    211:211:com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
    217:225:com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object,java.lang.Object) -> findPropertyFilter
com.fasterxml.jackson.databind.ser.impl.StringArraySerializer -> com.fasterxml.jackson.databind.ser.impl.o:
# {"fileName":"StringArraySerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> e
    com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance -> a
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> b
    52:54:void <init>() -> <init>
    59:61:void <init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    65:65:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    74:74:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    92:125:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    136:136:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    141:141:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    146:146:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String[]) -> isEmpty
    151:151:boolean hasSingleElement(java.lang.String[]) -> hasSingleElement
    164:176:void serialize(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    182:198:void serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    203:211:void serializeContentsSlow(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsSlow
    219:219:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    225:226:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    25:25:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    25:25:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    25:25:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    25:25:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    35:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer -> com.fasterxml.jackson.databind.ser.impl.p:
# {"fileName":"StringCollectionSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer instance -> a
    36:37:void <init>() -> <init>
    42:43:void <init>(com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer,java.lang.Boolean) -> <init>
    47:47:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    51:51:com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    57:58:void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    70:82:void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    89:94:void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    100:114:void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    22:22:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    22:22:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    27:27:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer -> com.fasterxml.jackson.databind.ser.impl.q:
# {"fileName":"TypeWrappedSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> a
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> b
    25:28:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    32:33:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    41:42:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    45:45:java.lang.Class handledType() -> handledType
    58:65:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    75:75:com.fasterxml.jackson.databind.JsonSerializer valueSerializer() -> valueSerializer
    79:79:com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer() -> typeSerializer
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer -> com.fasterxml.jackson.databind.ser.impl.r:
# {"fileName":"UnknownSerializer.java","id":"sourceFile"}
    17:18:void <init>() -> <init>
    22:23:void <init>(java.lang.Class) -> <init>
    29:33:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    39:43:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    47:57:void failForEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> failForEmpty
com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer -> com.fasterxml.jackson.databind.ser.impl.s:
# {"fileName":"UnsupportedTypeSerializer.java","id":"sourceFile"}
    long serialVersionUID -> c
    com.fasterxml.jackson.databind.JavaType _type -> a
    java.lang.String _message -> b
    28:31:void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> <init>
    35:36:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.impl.t:
# {"fileName":"UnwrappingBeanPropertyWriter.java","id":"sourceFile"}
    long serialVersionUID -> x
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> w
    43:45:void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    49:51:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString) -> <init>
    56:62:com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    72:72:com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter _new(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString) -> _new
    83:83:boolean isUnwrapping() -> isUnwrapping
    90:131:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    137:148:void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    160:177:void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    183:195:void _depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode) -> _depositSchemaProperty
    209:225:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    24:24:com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter$1 -> com.fasterxml.jackson.databind.ser.impl.t$1:
# {"fileName":"UnwrappingBeanPropertyWriter.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor val$visitor -> b
    com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter this$0 -> c
    165:165:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor) -> <init>
    171:171:com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor expectObjectFormat(com.fasterxml.jackson.databind.JavaType) -> expectObjectFormat
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer -> com.fasterxml.jackson.databind.ser.impl.u:
# {"fileName":"UnwrappingBeanSerializer.java","id":"sourceFile"}
    long serialVersionUID -> l
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> a
    37:39:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    43:45:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    49:51:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    54:55:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set) -> <init>
    58:60:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set,java.util.Set) -> <init>
    65:67:void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    78:78:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    83:83:boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    88:88:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    93:93:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    98:98:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    104:104:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> withProperties
    113:113:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    130:140:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    146:160:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    169:169:java.lang.String toString() -> toString
    14:14:com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
com.fasterxml.jackson.databind.ser.impl.WritableObjectId -> com.fasterxml.jackson.databind.ser.impl.v:
# {"fileName":"WritableObjectId.java","id":"sourceFile"}
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> a
    java.lang.Object id -> b
    boolean idWritten -> c
    26:30:void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> <init>
    34:43:boolean writeAsId(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> writeAsId
    50:53:java.lang.Object generateId(java.lang.Object) -> generateId
    62:81:void writeAsField(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> writeAsField
com.fasterxml.jackson.databind.ser.impl.package-info -> com.fasterxml.jackson.databind.ser.impl.w:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.ser.package-info -> com.fasterxml.jackson.databind.ser.u:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase -> com.fasterxml.jackson.databind.ser.std.a:
# {"fileName":"ArraySerializerBase.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    java.lang.Boolean _unwrapSingle -> d
    39:42:void <init>(java.lang.Class) -> <init>
    53:56:void <init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    60:63:void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase) -> <init>
    71:74:void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    82:85:void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    97:109:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    118:127:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    134:140:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    149:152:boolean _shouldUnwrapSingle(com.fasterxml.jackson.databind.SerializerProvider) -> _shouldUnwrapSingle
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase -> com.fasterxml.jackson.databind.ser.std.b:
# {"fileName":"AsArraySerializerBase.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType _elementType -> a
    com.fasterxml.jackson.databind.BeanProperty _property -> b
    boolean _staticTyping -> c
    java.lang.Boolean _unwrapSingle -> d
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> e
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> f
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> g
    80:81:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    91:92:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    105:114:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    121:130:void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    139:140:void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    148:148:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    175:217:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    228:228:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    233:233:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    248:256:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    262:268:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    281:293:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    300:309:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    314:319:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    325:329:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer -> com.fasterxml.jackson.databind.ser.std.c:
# {"fileName":"AtomicReferenceSerializer.java","id":"sourceFile"}
    long serialVersionUID -> j
    24:25:void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    32:34:void <init>(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean) -> <init>
    41:41:com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer) -> withResolved
    49:49:com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    62:62:boolean _isValuePresent(java.util.concurrent.atomic.AtomicReference) -> _isValuePresent
    67:67:java.lang.Object _getReferenced(java.util.concurrent.atomic.AtomicReference) -> _getReferenced
    72:72:java.lang.Object _getReferencedIfPresent(java.util.concurrent.atomic.AtomicReference) -> _getReferencedIfPresent
    10:10:java.lang.Object _getReferencedIfPresent(java.lang.Object) -> _getReferencedIfPresent
    10:10:java.lang.Object _getReferenced(java.lang.Object) -> _getReferenced
    10:10:boolean _isValuePresent(java.lang.Object) -> _isValuePresent
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase -> com.fasterxml.jackson.databind.ser.std.d:
# {"fileName":"BeanSerializerBase.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.PropertyName NAME_FOR_OBJECT_REF -> b
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPS -> c
    com.fasterxml.jackson.databind.JavaType _beanType -> d
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props -> e
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps -> f
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter -> g
    java.lang.Object _propertyFilterId -> h
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> i
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> j
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> k
    114:134:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    139:149:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> <init>
    154:155:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> <init>
    163:173:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object) -> <init>
    178:179:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[]) -> <init>
    183:184:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set) -> <init>
    188:217:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set) -> <init>
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    236:236:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.util.Set) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set) -> withByNameInclusion
    256:256:com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object) -> withFilterId
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> withProperties
    294:295:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) -> <init>
    302:303:void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    308:319:com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    336:409:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
    422:437:com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> findConvertingSerializer
    446:605:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    616:616:java.util.Iterator properties() -> properties
    627:627:boolean usesObjectId() -> usesObjectId
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    641:658:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    663:687:void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean) -> _serializeWithObjectId
    692:705:void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _serializeWithObjectId
    711:724:void _serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId) -> _serializeObjectId
    731:739:com.fasterxml.jackson.core.type.WritableTypeId _typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken) -> _typeIdDef
    745:749:java.lang.String _customTypeId(java.lang.Object) -> _customTypeId
    762:793:void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFields
    807:840:void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFieldsFiltered
    847:879:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    887:918:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    37:37:com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
    43:45:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase$1 -> com.fasterxml.jackson.databind.ser.std.d$1:
# {"fileName":"BeanSerializerBase.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> a
    460:460:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.BooleanSerializer -> com.fasterxml.jackson.databind.ser.std.e:
# {"fileName":"BooleanSerializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    boolean _forPrimitive -> a
    42:44:void <init>(boolean) -> <init>
    52:63:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    68:69:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    75:76:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    84:84:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    89:90:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber -> com.fasterxml.jackson.databind.ser.std.e$a:
# {"fileName":"BooleanSerializer.java","id":"sourceFile"}
    long serialVersionUID -> b
    boolean _forPrimitive -> a
    111:113:void <init>(boolean) -> <init>
    117:118:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    128:129:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    135:136:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    142:150:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer -> com.fasterxml.jackson.databind.ser.std.f:
# {"fileName":"ByteArraySerializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    36:37:void <init>() -> <init>
    41:41:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,byte[]) -> isEmpty
    48:50:void serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    58:70:void serializeWithType(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    79:81:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    94:98:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    30:30:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    30:30:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    30:30:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer -> com.fasterxml.jackson.databind.ser.std.g:
# {"fileName":"ByteBufferSerializer.java","id":"sourceFile"}
    16:16:void <init>() -> <init>
    22:36:void serialize(java.nio.ByteBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    43:47:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    13:13:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.CalendarSerializer -> com.fasterxml.jackson.databind.ser.std.h:
# {"fileName":"CalendarSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance -> a
    23:23:void <init>() -> <init>
    26:27:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    31:31:com.fasterxml.jackson.databind.ser.std.CalendarSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    36:36:long _timestamp(java.util.Calendar) -> _timestamp
    42:47:void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    16:16:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    16:16:long _timestamp(java.lang.Object) -> _timestamp
    16:16:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    21:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ClassSerializer -> com.fasterxml.jackson.databind.ser.std.i:
# {"fileName":"ClassSerializer.java","id":"sourceFile"}
    22:22:void <init>() -> <init>
    27:28:void serialize(java.lang.Class,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    37:37:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    44:45:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.CollectionSerializer -> com.fasterxml.jackson.databind.ser.std.j:
# {"fileName":"CollectionSerializer.java","id":"sourceFile"}
    long serialVersionUID -> h
    41:42:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    51:52:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    57:58:void <init>(com.fasterxml.jackson.databind.ser.std.CollectionSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    62:62:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    69:69:com.fasterxml.jackson.databind.ser.std.CollectionSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    80:80:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection) -> isEmpty
    85:85:boolean hasSingleElement(java.util.Collection) -> hasSingleElement
    97:109:void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    114:155:void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    160:182:void serializeContentsUsing(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    25:25:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    25:25:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    25:25:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    25:25:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    25:25:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.DateSerializer -> com.fasterxml.jackson.databind.ser.std.k:
# {"fileName":"DateSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.DateSerializer instance -> a
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    36:36:com.fasterxml.jackson.databind.ser.std.DateSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    41:41:long _timestamp(java.util.Date) -> _timestamp
    47:52:void serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    15:15:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    15:15:long _timestamp(java.lang.Object) -> _timestamp
    15:15:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    24:24:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase -> com.fasterxml.jackson.databind.ser.std.l:
# {"fileName":"DateTimeSerializerBase.java","id":"sourceFile"}
    java.lang.Boolean _useTimestamp -> b
    java.text.DateFormat _customFormat -> c
    java.util.concurrent.atomic.AtomicReference _reusedCustomFormat -> d
    53:57:void <init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat) -> <init>
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    67:132:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    146:146:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    long _timestamp(java.lang.Object) -> _timestamp
    158:158:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    164:165:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    185:195:boolean _asTimestamp(com.fasterxml.jackson.databind.SerializerProvider) -> _asTimestamp
    201:207:void _acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,boolean) -> _acceptJsonFormatVisitor
    214:232:void _serializeAsString(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _serializeAsString
com.fasterxml.jackson.databind.ser.std.EnumSerializer -> com.fasterxml.jackson.databind.ser.std.m:
# {"fileName":"EnumSerializer.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.databind.util.EnumValues _values -> a
    java.lang.Boolean _serializeAsIndex -> b
    com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming -> c
    70:74:void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean) -> <init>
    81:85:void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean,com.fasterxml.jackson.databind.util.EnumValues) -> <init>
    101:104:com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat$Value) -> construct
    116:126:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    135:135:com.fasterxml.jackson.databind.util.EnumValues getEnumValues() -> getEnumValues
    147:161:void serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    176:189:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    196:219:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    229:232:boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider) -> _serializeAsIndex
    243:262:java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Value,boolean,java.lang.Boolean) -> _isShapeWrittenUsingIndex
    273:277:com.fasterxml.jackson.databind.util.EnumValues constructEnumNamingStrategyValues(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> constructEnumNamingStrategyValues
    31:31:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.EnumSetSerializer -> com.fasterxml.jackson.databind.ser.std.n:
# {"fileName":"EnumSetSerializer.java","id":"sourceFile"}
    18:19:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    24:25:void <init>(com.fasterxml.jackson.databind.ser.std.EnumSetSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:com.fasterxml.jackson.databind.ser.std.EnumSetSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    37:37:com.fasterxml.jackson.databind.ser.std.EnumSetSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    42:42:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.EnumSet) -> isEmpty
    47:47:boolean hasSingleElement(java.util.EnumSet) -> hasSingleElement
    54:66:void serialize(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    73:86:void serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    10:10:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    10:10:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    10:10:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    10:10:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    10:10:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    10:10:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.FileSerializer -> com.fasterxml.jackson.databind.ser.std.o:
# {"fileName":"FileSerializer.java","id":"sourceFile"}
    22:22:void <init>() -> <init>
    26:27:void serialize(java.io.File,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    35:35:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    42:43:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    18:18:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer -> com.fasterxml.jackson.databind.ser.std.p:
# {"fileName":"InetAddressSerializer.java","id":"sourceFile"}
    boolean _asNumeric -> a
    36:37:void <init>() -> <init>
    43:45:void <init>(boolean) -> <init>
    51:63:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    71:86:void serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    93:97:void serializeWithType(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    25:25:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    25:25:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer -> com.fasterxml.jackson.databind.ser.std.q:
# {"fileName":"InetSocketAddressSerializer.java","id":"sourceFile"}
    19:19:void <init>() -> <init>
    24:39:void serialize(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    46:50:void serializeWithType(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    15:15:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    15:15:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.IterableSerializer -> com.fasterxml.jackson.databind.ser.std.r:
# {"fileName":"IterableSerializer.java","id":"sourceFile"}
    19:20:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    25:26:void <init>(com.fasterxml.jackson.databind.ser.std.IterableSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    30:30:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    37:37:com.fasterxml.jackson.databind.ser.std.IterableSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    43:43:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Iterable) -> isEmpty
    49:58:boolean hasSingleElement(java.lang.Iterable) -> hasSingleElement
    65:76:void serialize(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    82:113:void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    12:12:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    12:12:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    12:12:com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    12:12:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    12:12:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer -> com.fasterxml.jackson.databind.ser.std.s:
# {"fileName":"JsonValueSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> a
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> b
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> c
    com.fasterxml.jackson.databind.BeanProperty _property -> d
    com.fasterxml.jackson.databind.JavaType _valueType -> e
    boolean _forceTypeInformation -> f
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> g
    100:108:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    115:116:void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    123:131:void <init>(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> <init>
    135:135:java.lang.Class _notNullClass(java.lang.Class) -> _notNullClass
    141:146:com.fasterxml.jackson.databind.ser.std.JsonValueSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> withResolved
    159:171:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    189:222:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    236:255:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    264:296:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    312:316:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    332:347:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    363:383:boolean _acceptJsonFormatVisitorForEnum(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> _acceptJsonFormatVisitorForEnum
    395:405:boolean isNaturalTypeWithStdHandling(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> isNaturalTypeWithStdHandling
    412:425:com.fasterxml.jackson.databind.JsonSerializer _findDynamicSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class) -> _findDynamicSerializer
    455:455:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter -> com.fasterxml.jackson.databind.ser.std.s$a:
# {"fileName":"JsonValueSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> a
    java.lang.Object _forObject -> b
    475:478:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object) -> <init>
    482:482:com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    487:487:com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    492:492:java.lang.String getPropertyName() -> getPropertyName
    497:497:com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    506:507:com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypePrefix
    514:514:com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId) -> writeTypeSuffix
    522:523:void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    528:529:void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    534:535:void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    540:541:void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    546:547:void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    552:553:void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    558:559:void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    564:565:void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    570:571:void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    583:584:void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    589:590:void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    595:596:void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    601:602:void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    607:608:void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    613:614:void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
com.fasterxml.jackson.databind.ser.std.MapProperty -> com.fasterxml.jackson.databind.ser.std.t:
# {"fileName":"MapProperty.java","id":"sourceFile"}
    long serialVersionUID -> i
    com.fasterxml.jackson.databind.BeanProperty BOGUS_PROP -> j
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> c
    com.fasterxml.jackson.databind.BeanProperty _property -> d
    java.lang.Object _key -> e
    java.lang.Object _value -> f
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> g
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> h
    37:40:void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> <init>
    51:55:void reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> reset
    61:62:void reset(java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> reset
    66:69:java.lang.String getName() -> getName
    76:76:java.lang.Object getValue() -> getValue
    83:84:void setValue(java.lang.Object) -> setValue
    88:88:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    93:93:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    98:98:java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    105:111:void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    117:120:void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsOmittedField
    126:131:void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsElement
    137:138:void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsPlaceholder
    151:152:void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    159:159:void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    163:163:com.fasterxml.jackson.databind.JavaType getType() -> getType
    168:168:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    173:173:com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.MapSerializer -> com.fasterxml.jackson.databind.ser.std.u:
# {"fileName":"MapSerializer.java","id":"sourceFile"}
    long serialVersionUID -> s
    com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE -> a
    java.lang.Object MARKER_FOR_EMPTY -> b
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    boolean _valueTypeIsStatic -> d
    com.fasterxml.jackson.databind.JavaType _keyType -> e
    com.fasterxml.jackson.databind.JavaType _valueType -> f
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> g
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> h
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> i
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> j
    java.util.Set _ignoredEntries -> k
    java.util.Set _includedEntries -> l
    java.lang.Object _filterId -> m
    java.lang.Object _suppressableValue -> n
    boolean _suppressNulls -> o
    com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker -> p
    boolean _sortKeys -> q
    184:202:void <init>(java.util.Set,java.util.Set,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    214:218:void <init>(java.util.Set,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    228:247:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set) -> <init>
    257:258:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set) -> <init>
    266:285:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean) -> <init>
    289:307:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean) -> <init>
    311:315:com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    325:330:com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set,boolean) -> withResolved
    340:340:com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,boolean) -> withResolved
    345:349:com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object) -> withFilterId
    359:363:com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    376:402:com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object) -> construct
    413:413:com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object) -> construct
    420:421:void _ensureOverride(java.lang.String) -> _ensureOverride
    428:429:void _ensureOverride() -> _ensureOverride
    445:446:void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object) -> <init>
    453:453:com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object) -> withContentInclusion
    467:468:com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object) -> construct
    483:609:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    620:620:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    625:625:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    631:683:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Map) -> isEmpty
    688:688:boolean hasSingleElement(java.util.Map) -> hasSingleElement
    706:706:com.fasterxml.jackson.databind.JsonSerializer getKeySerializer() -> getKeySerializer
    719:722:void serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    730:735:void serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    752:767:void serializeWithoutTypeInfo(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeWithoutTypeInfo
    778:813:void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFields
    823:874:void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> serializeOptionalFields
    885:914:void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeFieldsUsing
    927:977:void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object) -> serializeFilteredFields
    986:1032:void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> serializeTypedFields
    1047:1097:void serializeFilteredAnyProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,java.util.Map,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object) -> serializeFilteredAnyProperties
    1114:1114:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    1121:1131:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    1143:1148:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    1155:1159:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    1167:1186:java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> _orderEntries
    1202:1202:boolean _hasNullKey(java.util.Map) -> _hasNullKey
    1209:1237:void _writeNullKeyedEntry(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> _writeNullKeyedEntry
    1243:1252:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> _findSerializer
    35:35:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    35:35:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    35:35:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    35:35:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    35:35:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    35:35:com.fasterxml.jackson.databind.JsonSerializer withFilterId(java.lang.Object) -> withFilterId
    42:47:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.MapSerializer$1 -> com.fasterxml.jackson.databind.ser.std.u$1:
# {"fileName":"MapSerializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
    568:568:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase -> com.fasterxml.jackson.databind.ser.std.v:
# {"fileName":"NonTypedScalarSerializerBase.java","id":"sourceFile"}
    22:23:void <init>(java.lang.Class) -> <init>
    26:27:void <init>(java.lang.Class,boolean) -> <init>
    34:35:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.NullSerializer -> com.fasterxml.jackson.databind.ser.std.w:
# {"fileName":"NullSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.NullSerializer instance -> a
    26:26:void <init>() -> <init>
    30:31:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    44:45:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    53:53:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    58:59:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    24:24:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer -> com.fasterxml.jackson.databind.ser.std.x:
# {"fileName":"NumberSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.NumberSerializer instance -> a
    int MAX_BIG_DECIMAL_SCALE -> b
    boolean _isInt -> c
    45:48:void <init>(java.lang.Class) -> <init>
    54:66:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    73:92:void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    100:100:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    106:116:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    122:122:com.fasterxml.jackson.databind.JsonSerializer bigDecimalAsStringSerializer() -> bigDecimalAsStringSerializer
    23:23:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    32:32:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer$1 -> com.fasterxml.jackson.databind.ser.std.x$1:
# {"fileName":"NumberSerializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> a
    56:56:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer -> com.fasterxml.jackson.databind.ser.std.x$a:
# {"fileName":"NumberSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer BD_INSTANCE -> a
    131:132:void <init>() -> <init>
    138:138:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    146:162:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    167:167:java.lang.String valueToString(java.lang.Object) -> valueToString
    172:173:boolean _verifyBigDecimalRange(com.fasterxml.jackson.core.JsonGenerator,java.math.BigDecimal) -> _verifyBigDecimalRange
    128:128:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers -> com.fasterxml.jackson.databind.ser.std.y:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    25:25:void <init>() -> <init>
    28:43:void addAll(java.util.Map) -> addAll
com.fasterxml.jackson.databind.ser.std.NumberSerializers$1 -> com.fasterxml.jackson.databind.ser.std.y$1:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape -> a
    104:104:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base -> com.fasterxml.jackson.databind.ser.std.y$a:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonParser$NumberType _numberType -> a
    java.lang.String _schemaType -> b
    boolean _isInt -> c
    70:76:void <init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser$NumberType,java.lang.String) -> <init>
    84:84:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    91:96:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    102:113:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer -> com.fasterxml.jackson.databind.ser.std.y$b:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    228:229:void <init>(java.lang.Class) -> <init>
    235:236:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    245:255:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    259:259:boolean notFinite(double) -> notFinite
com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer -> com.fasterxml.jackson.databind.ser.std.y$c:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance -> d
    208:209:void <init>() -> <init>
    214:215:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    205:205:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer -> com.fasterxml.jackson.databind.ser.std.y$d:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance -> d
    180:181:void <init>() -> <init>
    186:187:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    177:177:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer -> com.fasterxml.jackson.databind.ser.std.y$e:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    151:152:void <init>(java.lang.Class) -> <init>
    157:158:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    166:167:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer -> com.fasterxml.jackson.databind.ser.std.y$f:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    193:194:void <init>(java.lang.Class) -> <init>
    199:200:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer -> com.fasterxml.jackson.databind.ser.std.y$g:
# {"fileName":"NumberSerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer instance -> d
    128:129:void <init>() -> <init>
    134:135:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    125:125:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer -> com.fasterxml.jackson.databind.ser.std.z:
# {"fileName":"ObjectArraySerializer.java","id":"sourceFile"}
    boolean _staticTyping -> a
    com.fasterxml.jackson.databind.JavaType _elementType -> b
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> e
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> f
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> g
    65:71:void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    75:83:void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> <init>
    90:97:void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> <init>
    101:101:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    107:107:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    112:116:com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Boolean) -> withResolved
    130:166:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    177:177:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    182:182:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    187:187:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object[]) -> isEmpty
    192:192:boolean hasSingleElement(java.lang.Object[]) -> hasSingleElement
    204:216:void serialize(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    221:258:void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    263:284:void serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    288:310:void serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedContents
    316:335:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    340:345:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    351:356:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    23:23:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    23:23:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    23:23:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    23:23:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.RawSerializer -> com.fasterxml.jackson.databind.ser.std.aa:
# {"fileName":"RawSerializer.java","id":"sourceFile"}
    26:27:void <init>(java.lang.Class) -> <init>
    31:32:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    39:43:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    53:53:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    60:61:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer -> com.fasterxml.jackson.databind.ser.std.ab:
# {"fileName":"ReferenceTypeSerializer.java","id":"sourceFile"}
    long serialVersionUID -> j
    java.lang.Object MARKER_FOR_EMPTY -> a
    com.fasterxml.jackson.databind.JavaType _referredType -> b
    com.fasterxml.jackson.databind.BeanProperty _property -> c
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> d
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> e
    com.fasterxml.jackson.databind.util.NameTransformer _unwrapper -> f
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> g
    java.lang.Object _suppressableValue -> h
    boolean _suppressNulls -> i
    100:109:void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    117:127:void <init>(com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean) -> <init>
    131:145:com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer) -> withResolved
    com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean) -> withContentInclusion
    boolean _isValuePresent(java.lang.Object) -> _isValuePresent
    java.lang.Object _getReferenced(java.lang.Object) -> _getReferenced
    java.lang.Object _getReferencedIfPresent(java.lang.Object) -> _getReferencedIfPresent
    201:280:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    287:313:boolean _useStatic(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType) -> _useStatic
    326:347:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    352:352:boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    359:359:com.fasterxml.jackson.databind.JavaType getReferredType() -> getReferredType
    372:388:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    395:418:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    430:438:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    453:474:com.fasterxml.jackson.databind.JsonSerializer _findCachedSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Class) -> _findCachedSerializer
    485:485:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> _findSerializer
    35:35:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer$1 -> com.fasterxml.jackson.databind.ser.std.ab$1:
# {"fileName":"ReferenceTypeSerializer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
    237:237:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.SerializableSerializer -> com.fasterxml.jackson.databind.ser.std.ac:
# {"fileName":"SerializableSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance -> a
    27:27:void <init>() -> <init>
    31:34:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializable) -> isEmpty
    39:40:void serialize(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    45:46:void serializeWithType(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    52:53:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    20:20:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    20:20:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    20:20:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.SqlDateSerializer -> com.fasterxml.jackson.databind.ser.std.ad:
# {"fileName":"SqlDateSerializer.java","id":"sourceFile"}
    23:24:void <init>() -> <init>
    27:28:void <init>(java.lang.Boolean,java.text.DateFormat) -> <init>
    32:32:com.fasterxml.jackson.databind.ser.std.SqlDateSerializer withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
    37:37:long _timestamp(java.sql.Date) -> _timestamp
    44:57:void serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    16:16:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    16:16:long _timestamp(java.lang.Object) -> _timestamp
    16:16:com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat) -> withFormat
com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer -> com.fasterxml.jackson.databind.ser.std.ae:
# {"fileName":"SqlTimeSerializer.java","id":"sourceFile"}
    17:17:void <init>() -> <init>
    22:23:void serialize(java.sql.Time,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    31:31:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    38:39:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    12:12:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase -> com.fasterxml.jackson.databind.ser.std.af:
# {"fileName":"StaticListSerializerBase.java","id":"sourceFile"}
    java.lang.Boolean _unwrapSingle -> b
    38:40:void <init>(java.lang.Class) -> <init>
    47:49:void <init>(com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase,java.lang.Boolean) -> <init>
    com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    69:100:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    106:106:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.Collection) -> isEmpty
    115:115:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    120:124:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    23:23:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    23:23:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdArraySerializers -> com.fasterxml.jackson.databind.ser.std.ag:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    java.util.HashMap _arraySerializers -> a
    39:39:void <init>() -> <init>
    46:46:com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class) -> findStandardImpl
    25:37:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer -> com.fasterxml.jackson.databind.ser.std.ag$a:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    94:94:void <init>() -> <init>
    98:99:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    103:103:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    112:112:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    117:117:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    123:123:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    128:128:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,boolean[]) -> isEmpty
    133:133:boolean hasSingleElement(boolean[]) -> hasSingleElement
    139:147:void serialize(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    153:156:void serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    165:167:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    174:175:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    86:86:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    86:86:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    86:86:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    86:86:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    92:92:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer -> com.fasterxml.jackson.databind.ser.std.ag$b:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    269:269:void <init>() -> <init>
    273:273:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,char[]) -> isEmpty
    281:288:void serialize(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    296:308:void serializeWithType(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    313:316:void _writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[]) -> _writeArrayContents
    325:328:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    335:336:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    266:266:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    266:266:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    266:266:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer -> com.fasterxml.jackson.databind.ser.std.ag$c:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    593:593:void <init>() -> <init>
    600:601:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    605:605:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    614:614:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    619:619:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    625:625:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    630:630:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,double[]) -> isEmpty
    635:635:boolean hasSingleElement(double[]) -> hasSingleElement
    641:648:void serialize(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    653:656:void serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    664:664:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    671:672:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    586:586:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    586:586:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    586:586:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    586:586:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    591:591:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer -> com.fasterxml.jackson.databind.ser.std.ag$d:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    515:516:void <init>() -> <init>
    519:520:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    524:524:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    529:529:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    535:535:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    540:540:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,float[]) -> isEmpty
    545:545:boolean hasSingleElement(float[]) -> hasSingleElement
    551:559:void serialize(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    565:568:void serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    576:576:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    582:583:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    507:507:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    507:507:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    507:507:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    507:507:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    512:512:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer -> com.fasterxml.jackson.databind.ser.std.ag$e:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    346:346:void <init>() -> <init>
    353:354:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    358:358:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    367:367:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    372:372:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    378:378:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    383:383:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,int[]) -> isEmpty
    388:388:boolean hasSingleElement(int[]) -> hasSingleElement
    394:401:void serialize(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    407:410:void serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    418:418:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    424:425:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    339:339:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    339:339:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    339:339:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    339:339:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    344:344:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer -> com.fasterxml.jackson.databind.ser.std.ag$f:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    435:435:void <init>() -> <init>
    438:439:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    443:443:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    448:448:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    454:454:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    459:459:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,long[]) -> isEmpty
    464:464:boolean hasSingleElement(long[]) -> hasSingleElement
    470:477:void serialize(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    483:486:void serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    495:496:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    503:504:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    428:428:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    428:428:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    428:428:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    428:428:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    433:433:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer -> com.fasterxml.jackson.databind.ser.std.ag$g:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    185:185:void <init>() -> <init>
    188:189:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    193:193:com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> _withResolved
    198:198:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    204:204:com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    209:209:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,short[]) -> isEmpty
    214:214:boolean hasSingleElement(short[]) -> hasSingleElement
    220:228:void serialize(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    234:237:void serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    247:248:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    255:256:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    178:178:void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    178:178:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    178:178:boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    178:178:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    183:183:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer -> com.fasterxml.jackson.databind.ser.std.ag$h:
# {"fileName":"StdArraySerializers.java","id":"sourceFile"}
    63:64:void <init>(java.lang.Class) -> <init>
    68:69:void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean) -> <init>
    76:76:com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer -> com.fasterxml.jackson.databind.ser.std.ah:
# {"fileName":"StdDelegatingSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.Converter _converter -> a
    com.fasterxml.jackson.databind.JavaType _delegateType -> b
    com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer -> c
    54:58:void <init>(com.fasterxml.jackson.databind.util.Converter) -> <init>
    63:67:void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.Converter) -> <init>
    73:77:void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> <init>
    86:87:com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> withDelegate
    99:103:void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
    109:129:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    139:139:com.fasterxml.jackson.databind.util.Converter getConverter() -> getConverter
    144:144:com.fasterxml.jackson.databind.JsonSerializer getDelegatee() -> getDelegatee
    156:168:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    176:182:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    187:194:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    211:215:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    226:230:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
    241:244:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    264:264:java.lang.Object convertValue(java.lang.Object) -> convertValue
    279:279:com.fasterxml.jackson.databind.JsonSerializer _findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider) -> _findSerializer
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers -> com.fasterxml.jackson.databind.ser.std.ai:
# {"fileName":"StdJdkSerializers.java","id":"sourceFile"}
    19:19:void <init>() -> <init>
    27:51:java.util.Collection all() -> all
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> com.fasterxml.jackson.databind.ser.std.ai$a:
# {"fileName":"StdJdkSerializers.java","id":"sourceFile"}
    63:63:void <init>() -> <init>
    67:68:void serialize(java.util.concurrent.atomic.AtomicBoolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    76:76:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    81:82:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    60:60:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> com.fasterxml.jackson.databind.ser.std.ai$b:
# {"fileName":"StdJdkSerializers.java","id":"sourceFile"}
    88:88:void <init>() -> <init>
    92:93:void serialize(java.util.concurrent.atomic.AtomicInteger,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    101:101:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    107:108:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    85:85:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer -> com.fasterxml.jackson.databind.ser.std.ai$c:
# {"fileName":"StdJdkSerializers.java","id":"sourceFile"}
    114:114:void <init>() -> <init>
    118:119:void serialize(java.util.concurrent.atomic.AtomicLong,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    127:127:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    134:135:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    111:111:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializer -> com.fasterxml.jackson.databind.ser.std.aj:
# {"fileName":"StdKeySerializer.java","id":"sourceFile"}
    18:18:void <init>() -> <init>
    23:24:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers -> com.fasterxml.jackson.databind.ser.std.ak:
# {"fileName":"StdKeySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER -> a
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER -> b
    16:16:void <init>() -> <init>
    39:79:com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean) -> getStdKeySerializer
    95:113:com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class) -> getFallbackKeySerializer
    126:145:com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> getFallbackKeySerializer
    153:153:com.fasterxml.jackson.databind.JsonSerializer getDefault() -> getDefault
    19:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default -> com.fasterxml.jackson.databind.ser.std.ak$a:
# {"fileName":"StdKeySerializers.java","id":"sourceFile"}
    int TYPE_DATE -> a
    int TYPE_CALENDAR -> b
    int TYPE_CLASS -> c
    int TYPE_ENUM -> d
    int TYPE_INTEGER -> e
    int TYPE_LONG -> f
    int TYPE_BYTE_ARRAY -> g
    int TYPE_TO_STRING -> h
    int _typeId -> i
    183:185:void <init>(int,java.lang.Class) -> <init>
    189:231:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic -> com.fasterxml.jackson.databind.ser.std.ak$b:
# {"fileName":"StdKeySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> a
    244:246:void <init>() -> <init>
    250:251:java.lang.Object readResolve() -> readResolve
    258:265:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    269:270:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    276:289:com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer -> com.fasterxml.jackson.databind.ser.std.ak$c:
# {"fileName":"StdKeySerializers.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.EnumValues _values -> a
    com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming -> b
    324:327:void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues) -> <init>
    333:336:void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues,com.fasterxml.jackson.databind.util.EnumValues) -> <init>
    341:341:com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues) -> construct
    347:347:com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class,com.fasterxml.jackson.databind.util.EnumValues,com.fasterxml.jackson.databind.util.EnumValues) -> construct
    354:369:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer -> com.fasterxml.jackson.databind.ser.std.ak$d:
# {"fileName":"StdKeySerializers.java","id":"sourceFile"}
    298:298:void <init>() -> <init>
    302:303:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdScalarSerializer -> com.fasterxml.jackson.databind.ser.std.al:
# {"fileName":"StdScalarSerializer.java","id":"sourceFile"}
    20:21:void <init>(java.lang.Class) -> <init>
    29:30:void <init>(java.lang.Class,boolean) -> <init>
    40:41:void <init>(com.fasterxml.jackson.databind.ser.std.StdScalarSerializer) -> <init>
    55:59:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    69:69:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    77:78:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.StdSerializer -> com.fasterxml.jackson.databind.ser.std.am:
# {"fileName":"StdSerializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    java.lang.Object KEY_CONTENT_CONVERTER_LOCK -> b
    java.lang.Class _handledType -> r
    57:59:void <init>(java.lang.Class) -> <init>
    62:64:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    71:73:void <init>(java.lang.Class,boolean) -> <init>
    79:81:void <init>(com.fasterxml.jackson.databind.ser.std.StdSerializer) -> <init>
    90:90:java.lang.Class handledType() -> handledType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    116:117:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    130:130:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    145:149:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
    160:162:com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String) -> createSchemaNode
    167:171:com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean) -> createSchemaNode
    182:183:void visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> visitStringFormat
    196:200:void visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> visitStringFormat
    212:216:void visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser$NumberType) -> visitIntFormat
    229:238:void visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser$NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> visitIntFormat
    250:254:void visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser$NumberType) -> visitFloatFormat
    263:267:void visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JavaType) -> visitArrayFormat
    276:280:void visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes) -> visitArrayFormat
    308:323:void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    330:345:void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
    371:390:com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> findContextualConvertingSerializer
    401:417:com.fasterxml.jackson.databind.JsonSerializer findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> findConvertingContentSerializer
    430:437:com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object) -> findPropertyFilter
    452:456:com.fasterxml.jackson.annotation.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> findFormatOverrides
    471:475:java.lang.Boolean findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Feature) -> findFormatFeature
    484:488:com.fasterxml.jackson.annotation.JsonInclude$Value findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class) -> findIncludeOverrides
    500:511:com.fasterxml.jackson.databind.JsonSerializer findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAnnotatedContentSerializer
    527:527:boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> isDefaultSerializer
    534:534:boolean _neitherNull(java.lang.Object,java.lang.Object) -> _neitherNull
    541:541:boolean _nonEmpty(java.util.Collection) -> _nonEmpty
    43:43:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.StringSerializer -> com.fasterxml.jackson.databind.ser.std.an:
# {"fileName":"StringSerializer.java","id":"sourceFile"}
    long serialVersionUID -> a
    31:31:void <init>() -> <init>
    35:36:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    41:42:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    49:50:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    58:58:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    63:64:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer -> com.fasterxml.jackson.databind.ser.std.ao:
# {"fileName":"TimeZoneSerializer.java","id":"sourceFile"}
    14:14:void <init>() -> <init>
    18:19:void serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    26:30:void serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    11:11:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    11:11:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer -> com.fasterxml.jackson.databind.ser.std.ap:
# {"fileName":"ToEmptyObjectSerializer.java","id":"sourceFile"}
    32:33:void <init>(java.lang.Class) -> <init>
    36:37:void <init>(com.fasterxml.jackson.databind.JavaType) -> <init>
    42:44:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    50:53:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    57:57:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    67:67:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    75:76:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.ToStringSerializer -> com.fasterxml.jackson.databind.ser.std.aq:
# {"fileName":"ToStringSerializer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance -> a
    30:30:void <init>() -> <init>
    38:39:void <init>(java.lang.Class) -> <init>
    43:43:java.lang.String valueToString(java.lang.Object) -> valueToString
    20:20:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.ser.std.ToStringSerializerBase -> com.fasterxml.jackson.databind.ser.std.ar:
# {"fileName":"ToStringSerializerBase.java","id":"sourceFile"}
    29:30:void <init>(java.lang.Class) -> <init>
    34:34:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    41:42:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    56:60:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    68:68:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    74:75:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    java.lang.String valueToString(java.lang.Object) -> valueToString
com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer -> com.fasterxml.jackson.databind.ser.std.as:
# {"fileName":"TokenBufferSerializer.java","id":"sourceFile"}
    28:28:void <init>() -> <init>
    34:35:void serialize(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    53:57:void serializeWithType(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    68:68:com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    77:78:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    23:23:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    23:23:void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.UUIDSerializer -> com.fasterxml.jackson.databind.ser.std.at:
# {"fileName":"UUIDSerializer.java","id":"sourceFile"}
    char[] HEX_CHARS -> a
    java.lang.Boolean _asBinary -> b
    40:40:void <init>() -> <init>
    46:48:void <init>(java.lang.Boolean) -> <init>
    54:58:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.util.UUID) -> isEmpty
    65:81:com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    89:114:void serialize(java.util.UUID,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    119:126:boolean _writeAsBinary(com.fasterxml.jackson.core.JsonGenerator) -> _writeAsBinary
    135:136:void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    140:142:void _appendInt(int,char[],int) -> _appendInt
    146:150:void _appendShort(int,char[],int) -> _appendShort
    154:161:byte[] _asBytes(java.util.UUID) -> _asBytes
    166:170:void _appendInt(int,byte[],int) -> _appendInt
    24:24:void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    24:24:boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object) -> isEmpty
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.ArrayType -> com.fasterxml.jackson.databind.type.a:
# {"fileName":"ArrayType.java","id":"sourceFile"}
    long serialVersionUID -> l
    com.fasterxml.jackson.databind.JavaType _componentType -> f
    java.lang.Object _emptyArray -> g
    33:38:void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> <init>
    41:41:com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings) -> construct
    47:48:com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Object,java.lang.Object) -> construct
    53:54:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    61:64:com.fasterxml.jackson.databind.type.ArrayType withTypeHandler(java.lang.Object) -> withTypeHandler
    70:73:com.fasterxml.jackson.databind.type.ArrayType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    79:82:com.fasterxml.jackson.databind.type.ArrayType withValueHandler(java.lang.Object) -> withValueHandler
    87:90:com.fasterxml.jackson.databind.type.ArrayType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    96:99:com.fasterxml.jackson.databind.type.ArrayType withStaticTyping() -> withStaticTyping
    116:116:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    124:124:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    128:128:com.fasterxml.jackson.databind.JavaType _reportUnsupported() -> _reportUnsupported
    138:138:boolean isArrayType() -> isArrayType
    146:146:boolean isAbstract() -> isAbstract
    154:154:boolean isConcrete() -> isConcrete
    159:159:boolean hasGenericTypes() -> hasGenericTypes
    169:169:boolean isContainerType() -> isContainerType
    172:172:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    176:176:java.lang.Object getContentValueHandler() -> getContentValueHandler
    181:181:java.lang.Object getContentTypeHandler() -> getContentTypeHandler
    186:186:boolean hasHandlers() -> hasHandlers
    191:192:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    197:198:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    211:211:java.lang.Object[] getEmptyArray() -> getEmptyArray
    223:223:java.lang.String toString() -> toString
    229:234:boolean equals(java.lang.Object) -> equals
    12:12:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    12:12:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    12:12:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    12:12:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    12:12:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    12:12:com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
com.fasterxml.jackson.databind.type.ClassKey -> com.fasterxml.jackson.databind.type.b:
# {"fileName":"ClassKey.java","id":"sourceFile"}
    long serialVersionUID -> a
    java.lang.String _className -> b
    java.lang.Class _class -> c
    int _hashCode -> d
    36:40:void <init>() -> <init>
    43:47:void <init>(java.lang.Class) -> <init>
    51:54:void reset(java.lang.Class) -> reset
    66:66:int compareTo(com.fasterxml.jackson.databind.type.ClassKey) -> compareTo
    78:90:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    95:95:java.lang.String toString() -> toString
    19:19:int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.databind.type.ClassStack -> com.fasterxml.jackson.databind.type.c:
# {"fileName":"ClassStack.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.type.ClassStack _parent -> a
    java.lang.Class _current -> b
    java.util.ArrayList _selfRefs -> c
    21:22:void <init>(java.lang.Class) -> <init>
    24:27:void <init>(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class) -> <init>
    33:33:com.fasterxml.jackson.databind.type.ClassStack child(java.lang.Class) -> child
    42:46:void addSelfReference(com.fasterxml.jackson.databind.type.ResolvedRecursiveType) -> addSelfReference
    55:60:void resolveSelfReferences(com.fasterxml.jackson.databind.JavaType) -> resolveSelfReferences
    64:70:com.fasterxml.jackson.databind.type.ClassStack find(java.lang.Class) -> find
    75:84:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.CollectionLikeType -> com.fasterxml.jackson.databind.type.d:
# {"fileName":"CollectionLikeType.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.JavaType _elementType -> f
    34:37:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    44:46:void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType) -> <init>
    53:53:com.fasterxml.jackson.databind.type.CollectionLikeType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> construct
    65:73:com.fasterxml.jackson.databind.type.CollectionLikeType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> construct
    86:89:com.fasterxml.jackson.databind.type.CollectionLikeType upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> upgradeFrom
    95:95:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    102:105:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    111:111:com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    118:119:com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    125:125:com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    131:132:com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    138:146:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    151:155:com.fasterxml.jackson.databind.type.CollectionLikeType withStaticTyping() -> withStaticTyping
    162:162:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    174:174:boolean isContainerType() -> isContainerType
    177:177:boolean isCollectionLikeType() -> isCollectionLikeType
    180:180:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    184:184:java.lang.Object getContentValueHandler() -> getContentValueHandler
    189:189:java.lang.Object getContentTypeHandler() -> getContentTypeHandler
    194:194:boolean hasHandlers() -> hasHandlers
    199:199:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    204:208:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    213:222:java.lang.String buildCanonicalName() -> buildCanonicalName
    241:241:boolean isTrueCollectionType() -> isTrueCollectionType
    253:258:boolean equals(java.lang.Object) -> equals
    264:264:java.lang.String toString() -> toString
    15:15:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    15:15:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    15:15:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    15:15:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    15:15:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    15:15:com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
com.fasterxml.jackson.databind.type.CollectionType -> com.fasterxml.jackson.databind.type.e:
# {"fileName":"CollectionType.java","id":"sourceFile"}
    long serialVersionUID -> g
    25:26:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    32:33:void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType) -> <init>
    40:40:com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> construct
    51:60:com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> construct
    67:67:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    73:76:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    82:82:com.fasterxml.jackson.databind.type.CollectionType withTypeHandler(java.lang.Object) -> withTypeHandler
    89:90:com.fasterxml.jackson.databind.type.CollectionType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    96:96:com.fasterxml.jackson.databind.type.CollectionType withValueHandler(java.lang.Object) -> withValueHandler
    102:103:com.fasterxml.jackson.databind.type.CollectionType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    109:113:com.fasterxml.jackson.databind.type.CollectionType withStaticTyping() -> withStaticTyping
    120:120:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    134:134:java.lang.String toString() -> toString
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withStaticTyping() -> withStaticTyping
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    10:10:com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    10:10:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    10:10:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    10:10:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    10:10:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    10:10:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
com.fasterxml.jackson.databind.type.IdentityEqualityType -> com.fasterxml.jackson.databind.type.f:
# {"fileName":"IdentityEqualityType.java","id":"sourceFile"}
    long serialVersionUID -> f
    18:19:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    23:23:boolean equals(java.lang.Object) -> equals
    29:29:int hashCode() -> hashCode
com.fasterxml.jackson.databind.type.LogicalType -> com.fasterxml.jackson.databind.type.g:
# {"fileName":"LogicalType.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.type.LogicalType Array -> a
    com.fasterxml.jackson.databind.type.LogicalType Collection -> b
    com.fasterxml.jackson.databind.type.LogicalType Map -> c
    com.fasterxml.jackson.databind.type.LogicalType POJO -> d
    com.fasterxml.jackson.databind.type.LogicalType Untyped -> e
    com.fasterxml.jackson.databind.type.LogicalType Integer -> f
    com.fasterxml.jackson.databind.type.LogicalType Float -> g
    com.fasterxml.jackson.databind.type.LogicalType Boolean -> h
    com.fasterxml.jackson.databind.type.LogicalType Enum -> i
    com.fasterxml.jackson.databind.type.LogicalType Textual -> j
    com.fasterxml.jackson.databind.type.LogicalType Binary -> k
    com.fasterxml.jackson.databind.type.LogicalType DateTime -> l
    com.fasterxml.jackson.databind.type.LogicalType OtherScalar -> m
    com.fasterxml.jackson.databind.type.LogicalType[] $VALUES -> n
    11:11:com.fasterxml.jackson.databind.type.LogicalType[] values() -> values
    11:11:com.fasterxml.jackson.databind.type.LogicalType valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    116:134:com.fasterxml.jackson.databind.type.LogicalType fromClass(java.lang.Class,com.fasterxml.jackson.databind.type.LogicalType) -> fromClass
    11:99:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.MapLikeType -> com.fasterxml.jackson.databind.type.h:
# {"fileName":"MapLikeType.java","id":"sourceFile"}
    long serialVersionUID -> l
    com.fasterxml.jackson.databind.JavaType _keyType -> f
    com.fasterxml.jackson.databind.JavaType _valueType -> g
    39:44:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    50:53:void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> <init>
    66:70:com.fasterxml.jackson.databind.type.MapLikeType upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> upgradeFrom
    79:86:com.fasterxml.jackson.databind.type.MapLikeType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    94:94:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    103:106:com.fasterxml.jackson.databind.type.MapLikeType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    113:116:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    123:123:com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    130:131:com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    137:137:com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    144:145:com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    151:169:com.fasterxml.jackson.databind.JavaType withHandlersFrom(com.fasterxml.jackson.databind.JavaType) -> withHandlersFrom
    174:178:com.fasterxml.jackson.databind.type.MapLikeType withStaticTyping() -> withStaticTyping
    185:185:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    191:202:java.lang.String buildCanonicalName() -> buildCanonicalName
    213:213:boolean isContainerType() -> isContainerType
    218:218:boolean isMapLikeType() -> isMapLikeType
    223:223:com.fasterxml.jackson.databind.JavaType getKeyType() -> getKeyType
    228:228:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    233:233:java.lang.Object getContentValueHandler() -> getContentValueHandler
    238:238:java.lang.Object getContentTypeHandler() -> getContentTypeHandler
    243:244:boolean hasHandlers() -> hasHandlers
    249:249:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    254:259:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    269:270:com.fasterxml.jackson.databind.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    275:276:com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    289:289:boolean isTrueMapType() -> isTrueMapType
    300:301:java.lang.String toString() -> toString
    306:312:boolean equals(java.lang.Object) -> equals
    16:16:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    16:16:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    16:16:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    16:16:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    16:16:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    16:16:com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    16:16:com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
com.fasterxml.jackson.databind.type.MapType -> com.fasterxml.jackson.databind.type.i:
# {"fileName":"MapType.java","id":"sourceFile"}
    long serialVersionUID -> l
    23:25:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    31:32:void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> <init>
    40:40:com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    48:56:com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    63:63:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    70:70:com.fasterxml.jackson.databind.type.MapType withTypeHandler(java.lang.Object) -> withTypeHandler
    77:78:com.fasterxml.jackson.databind.type.MapType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    84:84:com.fasterxml.jackson.databind.type.MapType withValueHandler(java.lang.Object) -> withValueHandler
    90:91:com.fasterxml.jackson.databind.type.MapType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    97:101:com.fasterxml.jackson.databind.type.MapType withStaticTyping() -> withStaticTyping
    107:110:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    116:119:com.fasterxml.jackson.databind.type.MapType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    126:126:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    140:141:com.fasterxml.jackson.databind.type.MapType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    147:148:com.fasterxml.jackson.databind.type.MapType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    161:161:java.lang.String toString() -> toString
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withStaticTyping() -> withStaticTyping
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    10:10:com.fasterxml.jackson.databind.type.MapLikeType withKeyType(com.fasterxml.jackson.databind.JavaType) -> withKeyType
    10:10:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    10:10:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    10:10:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    10:10:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    10:10:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
com.fasterxml.jackson.databind.type.PlaceholderForType -> com.fasterxml.jackson.databind.type.j:
# {"fileName":"PlaceholderForType.java","id":"sourceFile"}
    long serialVersionUID -> l
    int _ordinal -> f
    com.fasterxml.jackson.databind.JavaType _actualType -> g
    25:29:void <init>(int) -> <init>
    31:31:com.fasterxml.jackson.databind.JavaType actualType() -> actualType
    32:32:void actualType(com.fasterxml.jackson.databind.JavaType) -> actualType
    37:37:java.lang.String buildCanonicalName() -> buildCanonicalName
    42:42:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    47:48:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    53:53:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    58:58:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    63:63:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    68:68:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    73:73:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    78:78:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    83:83:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    89:89:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    94:94:boolean isContainerType() -> isContainerType
    99:99:java.lang.String toString() -> toString
    103:103:java.lang.Object _unsupported() -> _unsupported
com.fasterxml.jackson.databind.type.ReferenceType -> com.fasterxml.jackson.databind.type.k:
# {"fileName":"ReferenceType.java","id":"sourceFile"}
    long serialVersionUID -> l
    com.fasterxml.jackson.databind.JavaType _referencedType -> f
    com.fasterxml.jackson.databind.JavaType _anchorType -> g
    36:40:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean) -> <init>
    51:55:void <init>(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType) -> <init>
    67:75:com.fasterxml.jackson.databind.type.ReferenceType upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> upgradeFrom
    84:84:com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType) -> construct
    90:90:com.fasterxml.jackson.databind.type.ReferenceType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> construct
    97:100:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    107:110:com.fasterxml.jackson.databind.type.ReferenceType withTypeHandler(java.lang.Object) -> withTypeHandler
    117:121:com.fasterxml.jackson.databind.type.ReferenceType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    127:130:com.fasterxml.jackson.databind.type.ReferenceType withValueHandler(java.lang.Object) -> withValueHandler
    137:141:com.fasterxml.jackson.databind.type.ReferenceType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    148:152:com.fasterxml.jackson.databind.type.ReferenceType withStaticTyping() -> withStaticTyping
    159:159:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    167:174:java.lang.String buildCanonicalName() -> buildCanonicalName
    188:188:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    201:201:com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    206:206:com.fasterxml.jackson.databind.JavaType getReferencedType() -> getReferencedType
    211:211:boolean hasContentType() -> hasContentType
    216:216:boolean isReferenceType() -> isReferenceType
    221:221:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    227:231:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    241:241:com.fasterxml.jackson.databind.JavaType getAnchorType() -> getAnchorType
    249:249:boolean isAnchorType() -> isAnchorType
    261:268:java.lang.String toString() -> toString
    274:283:boolean equals(java.lang.Object) -> equals
    15:15:com.fasterxml.jackson.databind.type.SimpleType withStaticTyping() -> withStaticTyping
    15:15:com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    15:15:com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    15:15:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    15:15:com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    15:15:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    15:15:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    15:15:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    15:15:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    15:15:com.fasterxml.jackson.core.type.ResolvedType getReferencedType() -> getReferencedType
    15:15:com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
com.fasterxml.jackson.databind.type.ResolvedRecursiveType -> com.fasterxml.jackson.databind.type.l:
# {"fileName":"ResolvedRecursiveType.java","id":"sourceFile"}
    long serialVersionUID -> g
    com.fasterxml.jackson.databind.JavaType _referencedType -> f
    17:18:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> <init>
    23:27:void setReference(com.fasterxml.jackson.databind.JavaType) -> setReference
    31:34:com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    37:37:com.fasterxml.jackson.databind.JavaType getSelfReferencedType() -> getSelfReferencedType
    42:45:com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> getBindings
    53:57:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    62:65:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    70:70:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    75:75:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    80:80:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    85:85:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    90:90:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    95:95:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
    101:101:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    107:107:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    112:112:boolean isContainerType() -> isContainerType
    117:126:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.SimpleType -> com.fasterxml.jackson.databind.type.m:
# {"fileName":"SimpleType.java","id":"sourceFile"}
    long serialVersionUID -> f
    33:34:void <init>(java.lang.Class) -> <init>
    38:39:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> <init>
    48:49:void <init>(com.fasterxml.jackson.databind.type.TypeBase) -> <init>
    55:61:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean) -> <init>
    72:74:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    86:86:com.fasterxml.jackson.databind.type.SimpleType constructUnsafe(java.lang.Class) -> constructUnsafe
    110:122:com.fasterxml.jackson.databind.type.SimpleType construct(java.lang.Class) -> construct
    129:170:com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    175:175:com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType) -> withContentType
    180:183:com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    189:189:com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    194:197:com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    203:203:com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    208:208:com.fasterxml.jackson.databind.type.SimpleType withStaticTyping() -> withStaticTyping
    216:216:com.fasterxml.jackson.databind.JavaType refine(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> refine
    222:240:java.lang.String buildCanonicalName() -> buildCanonicalName
    250:250:boolean isContainerType() -> isContainerType
    253:253:boolean hasContentType() -> hasContentType
    257:257:java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    263:274:java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    291:298:com.fasterxml.jackson.databind.JavaType _buildSuperClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _buildSuperClass
    311:313:java.lang.String toString() -> toString
    319:331:boolean equals(java.lang.Object) -> equals
    13:13:com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    13:13:com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    13:13:com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    13:13:com.fasterxml.jackson.databind.JavaType withStaticTyping() -> withStaticTyping
com.fasterxml.jackson.databind.type.TypeBase -> com.fasterxml.jackson.databind.type.n:
# {"fileName":"TypeBase.java","id":"sourceFile"}
    long serialVersionUID -> f
    com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS -> g
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> l
    com.fasterxml.jackson.databind.JavaType _superClass -> h
    com.fasterxml.jackson.databind.JavaType[] _superInterfaces -> i
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> j
    java.lang.String _canonicalName -> k
    49:53:void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean) -> <init>
    61:65:void <init>(com.fasterxml.jackson.databind.type.TypeBase) -> <init>
    70:74:java.lang.String toCanonical() -> toCanonical
    78:78:java.lang.String buildCanonicalName() -> buildCanonicalName
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    89:89:com.fasterxml.jackson.databind.type.TypeBindings getBindings() -> getBindings
    94:94:int containedTypeCount() -> containedTypeCount
    99:99:com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    105:105:java.lang.String containedTypeName(int) -> containedTypeName
    110:110:com.fasterxml.jackson.databind.JavaType getSuperClass() -> getSuperClass
    115:124:java.util.List getInterfaces() -> getInterfaces
    130:149:com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class) -> findSuperType
    155:159:com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class) -> findTypeParameters
    173:177:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    183:184:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    199:240:java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean) -> _classSignature
    253:257:com.fasterxml.jackson.databind.JavaType _bogusSuperClass(java.lang.Class) -> _bogusSuperClass
    261:262:boolean _hasNTypeParameters(int) -> _hasNTypeParameters
    15:15:com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    21:22:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeBindings -> com.fasterxml.jackson.databind.type.o:
# {"fileName":"TypeBindings.java","id":"sourceFile"}
    long serialVersionUID -> a
    java.lang.String[] NO_STRINGS -> b
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> c
    com.fasterxml.jackson.databind.type.TypeBindings EMPTY -> d
    java.lang.String[] _names -> e
    com.fasterxml.jackson.databind.JavaType[] _types -> f
    java.lang.String[] _unboundVariables -> g
    int _hashCode -> h
    53:62:void <init>(java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.String[]) -> <init>
    65:65:com.fasterxml.jackson.databind.type.TypeBindings emptyBindings() -> emptyBindings
    70:73:java.lang.Object readResolve() -> readResolve
    82:84:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,java.util.List) -> create
    89:114:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> create
    120:126:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> create
    133:139:com.fasterxml.jackson.databind.type.TypeBindings create(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> create
    148:151:com.fasterxml.jackson.databind.type.TypeBindings create(java.util.List,java.util.List) -> create
    161:170:com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> createIfNeeded
    181:199:com.fasterxml.jackson.databind.type.TypeBindings createIfNeeded(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> createIfNeeded
    209:213:com.fasterxml.jackson.databind.type.TypeBindings withUnboundVariable(java.lang.String) -> withUnboundVariable
    227:250:com.fasterxml.jackson.databind.JavaType findBoundType(java.lang.String) -> findBoundType
    263:268:boolean invalidCacheKey() -> invalidCacheKey
    272:272:boolean isEmpty() -> isEmpty
    279:279:int size() -> size
    284:287:java.lang.String getBoundName(int) -> getBoundName
    292:295:com.fasterxml.jackson.databind.JavaType getBoundType(int) -> getBoundType
    303:306:java.util.List getTypeParameters() -> getTypeParameters
    313:320:boolean hasUnbound(java.lang.String) -> hasUnbound
    334:338:java.lang.Object asKey(java.lang.Class) -> asKey
    349:363:java.lang.String toString() -> toString
    366:366:int hashCode() -> hashCode
    370:376:boolean equals(java.lang.Object) -> equals
    386:386:com.fasterxml.jackson.databind.JavaType[] typeParameterArray() -> typeParameterArray
    17:21:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeBindings$AsKey -> com.fasterxml.jackson.databind.type.o$a:
# {"fileName":"TypeBindings.java","id":"sourceFile"}
    java.lang.Class _raw -> a
    com.fasterxml.jackson.databind.JavaType[] _params -> b
    int _hash -> c
    462:466:void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType[],int) -> <init>
    469:469:int hashCode() -> hashCode
    473:491:boolean equals(java.lang.Object) -> equals
    496:496:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash -> com.fasterxml.jackson.databind.type.o$b:
# {"fileName":"TypeBindings.java","id":"sourceFile"}
    java.lang.reflect.TypeVariable[] VARS_ABSTRACT_LIST -> a
    java.lang.reflect.TypeVariable[] VARS_COLLECTION -> b
    java.lang.reflect.TypeVariable[] VARS_ITERABLE -> c
    java.lang.reflect.TypeVariable[] VARS_LIST -> d
    java.lang.reflect.TypeVariable[] VARS_ARRAY_LIST -> e
    java.lang.reflect.TypeVariable[] VARS_MAP -> f
    java.lang.reflect.TypeVariable[] VARS_HASH_MAP -> g
    java.lang.reflect.TypeVariable[] VARS_LINKED_HASH_MAP -> h
    406:406:void <init>() -> <init>
    419:434:java.lang.reflect.TypeVariable[] paramsFor1(java.lang.Class) -> paramsFor1
    439:448:java.lang.reflect.TypeVariable[] paramsFor2(java.lang.Class) -> paramsFor2
    407:415:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeFactory -> com.fasterxml.jackson.databind.type.p:
# {"fileName":"TypeFactory.java","id":"sourceFile"}
    long serialVersionUID -> o
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> p
    com.fasterxml.jackson.databind.type.TypeFactory instance -> a
    com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS -> b
    java.lang.Class CLS_STRING -> q
    java.lang.Class CLS_OBJECT -> r
    java.lang.Class CLS_COMPARABLE -> s
    java.lang.Class CLS_ENUM -> t
    java.lang.Class CLS_JSON_NODE -> u
    java.lang.Class CLS_BOOL -> v
    java.lang.Class CLS_INT -> w
    java.lang.Class CLS_LONG -> x
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL -> c
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT -> d
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG -> e
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING -> f
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT -> g
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE -> h
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM -> i
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE -> j
    com.fasterxml.jackson.databind.util.LookupCache _typeCache -> k
    com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers -> l
    com.fasterxml.jackson.databind.type.TypeParser _parser -> m
    java.lang.ClassLoader _classLoader -> n
    174:175:void <init>() -> <init>
    183:184:void <init>(com.fasterxml.jackson.databind.util.LRUMap) -> <init>
    189:197:void <init>(com.fasterxml.jackson.databind.util.LookupCache) -> <init>
    206:207:void <init>(com.fasterxml.jackson.databind.util.LRUMap,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader) -> <init>
    214:223:void <init>(com.fasterxml.jackson.databind.util.LookupCache,com.fasterxml.jackson.databind.type.TypeParser,com.fasterxml.jackson.databind.type.TypeModifier[],java.lang.ClassLoader) -> <init>
    232:248:com.fasterxml.jackson.databind.type.TypeFactory withModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> withModifier
    256:256:com.fasterxml.jackson.databind.type.TypeFactory withClassLoader(java.lang.ClassLoader) -> withClassLoader
    269:269:com.fasterxml.jackson.databind.type.TypeFactory withCache(com.fasterxml.jackson.databind.util.LRUMap) -> withCache
    280:280:com.fasterxml.jackson.databind.type.TypeFactory withCache(com.fasterxml.jackson.databind.util.LookupCache) -> withCache
    288:288:com.fasterxml.jackson.databind.type.TypeFactory defaultInstance() -> defaultInstance
    301:302:void clearCache() -> clearCache
    305:305:java.lang.ClassLoader getClassLoader() -> getClassLoader
    320:320:com.fasterxml.jackson.databind.JavaType unknownType() -> unknownType
    330:334:java.lang.Class rawClass(java.lang.reflect.Type) -> rawClass
    351:378:java.lang.Class findClass(java.lang.String) -> findClass
    383:383:java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader) -> classForName
    387:387:java.lang.Class classForName(java.lang.String) -> classForName
    392:401:java.lang.Class _findPrimitive(java.lang.String) -> _findPrimitive
    426:426:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    451:519:com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean) -> constructSpecializedType
    525:561:com.fasterxml.jackson.databind.type.TypeBindings _bindingsForSubtype(com.fasterxml.jackson.databind.JavaType,int,java.lang.Class,boolean) -> _bindingsForSubtype
    567:606:java.lang.String _resolveTypePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> _resolveTypePlaceholders
    612:631:boolean _verifyAndResolvePlaceholders(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> _verifyAndResolvePlaceholders
    647:663:com.fasterxml.jackson.databind.JavaType constructGeneralizedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructGeneralizedType
    678:678:com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String) -> constructFromCanonical
    692:696:com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> findTypeParameters
    704:704:com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> findTypeParameters
    712:712:com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class) -> findTypeParameters
    727:742:com.fasterxml.jackson.databind.JavaType moreSpecificType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> moreSpecificType
    752:752:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    758:758:com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference) -> constructType
    796:796:com.fasterxml.jackson.databind.JavaType resolveMemberType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> resolveMemberType
    819:823:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> constructType
    831:832:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,java.lang.Class) -> constructType
    841:861:com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType) -> constructType
    877:877:com.fasterxml.jackson.databind.type.ArrayType constructArrayType(java.lang.Class) -> constructArrayType
    887:887:com.fasterxml.jackson.databind.type.ArrayType constructArrayType(com.fasterxml.jackson.databind.JavaType) -> constructArrayType
    898:899:com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> constructCollectionType
    911:924:com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructCollectionType
    934:935:com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,java.lang.Class) -> constructCollectionLikeType
    945:950:com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructCollectionLikeType
    962:968:com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapType
    977:996:com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> constructMapType
    1011:1013:com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapLikeType
    1029:1034:com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> constructMapLikeType
    1043:1043:com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructSimpleType
    1057:1057:com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructSimpleType
    1070:1071:com.fasterxml.jackson.databind.JavaType constructReferenceType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructReferenceType
    1090:1090:com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class) -> uncheckedSimpleType
    1111:1116:com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,java.lang.Class[]) -> constructParametricType
    1137:1137:com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructParametricType
    1161:1162:com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> constructParametricType
    1173:1173:com.fasterxml.jackson.databind.JavaType constructParametrizedType(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructParametrizedType
    1184:1184:com.fasterxml.jackson.databind.JavaType constructParametrizedType(java.lang.Class,java.lang.Class,java.lang.Class[]) -> constructParametrizedType
    1206:1206:com.fasterxml.jackson.databind.type.CollectionType constructRawCollectionType(java.lang.Class) -> constructRawCollectionType
    1221:1221:com.fasterxml.jackson.databind.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class) -> constructRawCollectionLikeType
    1236:1236:com.fasterxml.jackson.databind.type.MapType constructRawMapType(java.lang.Class) -> constructRawMapType
    1251:1251:com.fasterxml.jackson.databind.type.MapLikeType constructRawMapLikeType(java.lang.Class) -> constructRawMapLikeType
    1266:1286:com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _mapType
    1292:1302:com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _collectionType
    1308:1318:com.fasterxml.jackson.databind.JavaType _referenceType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _referenceType
    1332:1338:com.fasterxml.jackson.databind.JavaType _constructSimple(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _constructSimple
    1351:1351:com.fasterxml.jackson.databind.JavaType _newSimpleType(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _newSimpleType
    1360:1360:com.fasterxml.jackson.databind.JavaType _unknownType() -> _unknownType
    1371:1380:com.fasterxml.jackson.databind.JavaType _findWellKnownSimple(java.lang.Class) -> _findWellKnownSimple
    1399:1425:com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromAny
    1430:1447:com.fasterxml.jackson.databind.JavaType _applyModifiers(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType) -> _applyModifiers
    1457:1535:com.fasterxml.jackson.databind.JavaType _fromClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromClass
    1540:1544:com.fasterxml.jackson.databind.JavaType _resolveSuperClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _resolveSuperClass
    1549:1559:com.fasterxml.jackson.databind.JavaType[] _resolveSuperInterfaces(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _resolveSuperInterfaces
    1570:1588:com.fasterxml.jackson.databind.JavaType _fromWellKnownClass(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _fromWellKnownClass
    1596:1604:com.fasterxml.jackson.databind.JavaType _fromWellKnownInterface(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[]) -> _fromWellKnownInterface
    1615:1642:com.fasterxml.jackson.databind.JavaType _fromParamType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromParamType
    1647:1648:com.fasterxml.jackson.databind.JavaType _fromArrayType(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromArrayType
    1654:1681:com.fasterxml.jackson.databind.JavaType _fromVariable(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromVariable
    1691:1691:com.fasterxml.jackson.databind.JavaType _fromWildcard(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromWildcard
    68:139:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.type.TypeModifier -> com.fasterxml.jackson.databind.type.q:
# {"fileName":"TypeModifier.java","id":"sourceFile"}
    16:16:void <init>() -> <init>
    com.fasterxml.jackson.databind.JavaType modifyType(com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.type.TypeFactory) -> modifyType
com.fasterxml.jackson.databind.type.TypeParser -> com.fasterxml.jackson.databind.type.r:
# {"fileName":"TypeParser.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.type.TypeFactory _factory -> a
    19:21:void <init>(com.fasterxml.jackson.databind.type.TypeFactory) -> <init>
    27:27:com.fasterxml.jackson.databind.type.TypeParser withFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> withFactory
    32:38:com.fasterxml.jackson.databind.JavaType parse(java.lang.String) -> parse
    44:60:com.fasterxml.jackson.databind.JavaType parseType(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> parseType
    66:76:java.util.List parseTypes(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> parseTypes
    82:85:java.lang.Class findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> findClass
    91:92:java.lang.IllegalArgumentException _problem(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer,java.lang.String) -> _problem
com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer -> com.fasterxml.jackson.databind.type.r$a:
# {"fileName":"TypeParser.java","id":"sourceFile"}
    java.lang.String _input -> a
    int _index -> b
    java.lang.String _pushbackToken -> c
    104:106:void <init>(java.lang.String) -> <init>
    110:110:boolean hasMoreTokens() -> hasMoreTokens
    116:124:java.lang.String nextToken() -> nextToken
    128:130:void pushBack(java.lang.String) -> pushBack
    132:132:java.lang.String getAllInput() -> getAllInput
    134:134:java.lang.String getRemainingInput() -> getRemainingInput
com.fasterxml.jackson.databind.type.package-info -> com.fasterxml.jackson.databind.type.s:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.util.AccessPattern -> com.fasterxml.jackson.databind.util.a:
# {"fileName":"AccessPattern.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.AccessPattern ALWAYS_NULL -> a
    com.fasterxml.jackson.databind.util.AccessPattern CONSTANT -> b
    com.fasterxml.jackson.databind.util.AccessPattern DYNAMIC -> c
    com.fasterxml.jackson.databind.util.AccessPattern[] $VALUES -> d
    9:9:com.fasterxml.jackson.databind.util.AccessPattern[] values() -> values
    9:9:com.fasterxml.jackson.databind.util.AccessPattern valueOf(java.lang.String) -> valueOf
    9:9:void <init>(java.lang.String,int) -> <init>
    9:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.Annotations -> com.fasterxml.jackson.databind.util.b:
# {"fileName":"Annotations.java","id":"sourceFile"}
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    boolean has(java.lang.Class) -> has
    boolean hasOneOf(java.lang.Class[]) -> hasOneOf
    int size() -> size
com.fasterxml.jackson.databind.util.ArrayBuilders -> com.fasterxml.jackson.databind.util.c:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> a
    com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder _byteBuilder -> b
    com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder _shortBuilder -> c
    com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder _intBuilder -> d
    com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder _longBuilder -> e
    com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder _floatBuilder -> f
    com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> g
    17:29:void <init>() -> <init>
    33:36:com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> getBooleanBuilder
    41:44:com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder getByteBuilder() -> getByteBuilder
    48:51:com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder getShortBuilder() -> getShortBuilder
    55:58:com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder getIntBuilder() -> getIntBuilder
    62:65:com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder getLongBuilder() -> getLongBuilder
    70:73:com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> getFloatBuilder
    77:80:com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> getDoubleBuilder
    159:161:java.lang.Object getArrayComparator(java.lang.Object) -> getArrayComparator
    187:195:java.util.HashSet arrayToSet(java.lang.Object[]) -> arrayToSet
    209:237:java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object) -> insertInListNoDup
com.fasterxml.jackson.databind.util.ArrayBuilders$1 -> com.fasterxml.jackson.databind.util.c$1:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    java.lang.Class val$defaultValueType -> a
    int val$length -> b
    java.lang.Object val$defaultValue -> c
    161:161:void <init>(java.lang.Class,int,java.lang.Object) -> <init>
    164:180:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder -> com.fasterxml.jackson.databind.util.c$a:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    92:92:void <init>() -> <init>
    94:94:boolean[] _constructArray(int) -> _constructArray
    89:89:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder -> com.fasterxml.jackson.databind.util.c$b:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    100:100:void <init>() -> <init>
    102:102:byte[] _constructArray(int) -> _constructArray
    97:97:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder -> com.fasterxml.jackson.databind.util.c$c:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    136:136:void <init>() -> <init>
    138:138:double[] _constructArray(int) -> _constructArray
    133:133:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder -> com.fasterxml.jackson.databind.util.c$d:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    129:129:void <init>() -> <init>
    131:131:float[] _constructArray(int) -> _constructArray
    126:126:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder -> com.fasterxml.jackson.databind.util.c$e:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    114:114:void <init>() -> <init>
    116:116:int[] _constructArray(int) -> _constructArray
    111:111:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder -> com.fasterxml.jackson.databind.util.c$f:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    121:121:void <init>() -> <init>
    123:123:long[] _constructArray(int) -> _constructArray
    118:118:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder -> com.fasterxml.jackson.databind.util.c$g:
# {"fileName":"ArrayBuilders.java","id":"sourceFile"}
    107:107:void <init>() -> <init>
    109:109:short[] _constructArray(int) -> _constructArray
    104:104:java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayIterator -> com.fasterxml.jackson.databind.util.d:
# {"fileName":"ArrayIterator.java","id":"sourceFile"}
    java.lang.Object[] _a -> a
    int _index -> b
    17:20:void <init>(java.lang.Object[]) -> <init>
    23:23:boolean hasNext() -> hasNext
    27:30:java.lang.Object next() -> next
    33:33:void remove() -> remove
    34:34:java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.util.BeanUtil -> com.fasterxml.jackson.databind.util.e:
# {"fileName":"BeanUtil.java","id":"sourceFile"}
    15:15:void <init>() -> <init>
    30:35:java.lang.String okNameForGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean) -> okNameForGetter
    47:69:java.lang.String okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForRegularGetter
    81:89:java.lang.String okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForIsGetter
    96:96:java.lang.String okNameForSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean) -> okNameForSetter
    107:113:java.lang.String okNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean) -> okNameForMutator
    139:163:java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType) -> getDefaultValue
    182:199:boolean isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isCglibGetCallbacks
    206:206:boolean isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGroovyMetaClassGetter
    224:248:java.lang.String legacyManglePropertyName(java.lang.String,int) -> legacyManglePropertyName
    258:279:java.lang.String stdManglePropertyName(java.lang.String,int) -> stdManglePropertyName
    298:316:java.lang.String checkUnsupportedType(com.fasterxml.jackson.databind.JavaType) -> checkUnsupportedType
    323:323:boolean isJava8TimeClass(java.lang.Class) -> isJava8TimeClass
    327:327:boolean isJava8TimeClass(java.lang.String) -> isJava8TimeClass
    334:334:boolean isJodaTimeClass(java.lang.Class) -> isJodaTimeClass
    338:338:boolean isJodaTimeClass(java.lang.String) -> isJodaTimeClass
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream -> com.fasterxml.jackson.databind.util.f:
# {"fileName":"ByteBufferBackedInputStream.java","id":"sourceFile"}
    java.nio.ByteBuffer _b -> a
    14:14:void <init>(java.nio.ByteBuffer) -> <init>
    16:16:int available() -> available
    19:19:int read() -> read
    23:26:int read(byte[],int,int) -> read
com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream -> com.fasterxml.jackson.databind.util.g:
# {"fileName":"ByteBufferBackedOutputStream.java","id":"sourceFile"}
    java.nio.ByteBuffer _b -> a
    13:13:void <init>(java.nio.ByteBuffer) -> <init>
    15:15:void write(int) -> write
    16:16:void write(byte[],int,int) -> write
com.fasterxml.jackson.databind.util.ClassUtil -> com.fasterxml.jackson.databind.util.h:
# {"fileName":"ClassUtil.java","id":"sourceFile"}
    java.lang.Class CLS_OBJECT -> a
    java.lang.annotation.Annotation[] NO_ANNOTATIONS -> b
    com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] NO_CTORS -> c
    java.util.Iterator EMPTY_ITERATOR -> d
    18:18:void <init>() -> <init>
    38:38:java.util.Iterator emptyIterator() -> emptyIterator
    63:68:java.util.List findSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean) -> findSuperTypes
    75:80:java.util.List findRawSuperTypes(java.lang.Class,java.lang.Class,boolean) -> findRawSuperTypes
    95:107:java.util.List findSuperClasses(java.lang.Class,java.lang.Class,boolean) -> findSuperClasses
    112:112:java.util.List findSuperTypes(java.lang.Class,java.lang.Class) -> findSuperTypes
    117:118:java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List) -> findSuperTypes
    124:139:void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.Collection,boolean) -> _addSuperTypes
    142:153:void _addRawSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> _addRawSuperTypes
    168:182:java.lang.String canBeABeanType(java.lang.Class) -> canBeABeanType
    192:212:java.lang.String isLocalType(java.lang.Class,boolean) -> isLocalType
    221:230:java.lang.Class getOuterClass(java.lang.Class) -> getOuterClass
    247:254:boolean isProxyType(java.lang.Class) -> isProxyType
    263:264:boolean isConcrete(java.lang.Class) -> isConcrete
    269:270:boolean isConcrete(java.lang.reflect.Member) -> isConcrete
    275:278:boolean isCollectionMapOrArray(java.lang.Class) -> isCollectionMapOrArray
    282:282:boolean isBogusClass(java.lang.Class) -> isBogusClass
    292:293:boolean isRecordType(java.lang.Class) -> isRecordType
    300:300:boolean isObjectOrPrimitive(java.lang.Class) -> isObjectOrPrimitive
    309:309:boolean hasClass(java.lang.Object,java.lang.Class) -> hasClass
    318:323:void verifyMustOverride(java.lang.Class,java.lang.Object,java.lang.String) -> verifyMustOverride
    338:351:boolean hasGetterSignature(java.lang.reflect.Method) -> hasGetterSignature
    367:370:java.lang.Throwable throwIfError(java.lang.Throwable) -> throwIfError
    380:383:java.lang.Throwable throwIfRTE(java.lang.Throwable) -> throwIfRTE
    393:396:java.lang.Throwable throwIfIOE(java.lang.Throwable) -> throwIfIOE
    411:414:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    425:425:java.lang.Throwable throwRootCauseIfIOE(java.lang.Throwable) -> throwRootCauseIfIOE
    433:434:void throwAsIAE(java.lang.Throwable) -> throwAsIAE
    443:445:void throwAsIAE(java.lang.Throwable,java.lang.String) -> throwAsIAE
    453:457:java.lang.Object throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException) -> throwAsMappingException
    467:468:void unwrapAndThrowAsIAE(java.lang.Throwable) -> unwrapAndThrowAsIAE
    477:478:void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> unwrapAndThrowAsIAE
    494:502:void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception) -> closeOnFailAndThrowAsIOE
    518:535:void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception) -> closeOnFailAndThrowAsIOE
    560:568:java.lang.Object createInstance(java.lang.Class,boolean) -> createInstance
    576:591:java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> findConstructor
    604:607:java.lang.Class classOf(java.lang.Object) -> classOf
    614:617:java.lang.Class rawClass(com.fasterxml.jackson.databind.JavaType) -> rawClass
    624:624:java.lang.Object nonNull(java.lang.Object,java.lang.Object) -> nonNull
    631:634:java.lang.String nullOrToString(java.lang.Object) -> nullOrToString
    641:644:java.lang.String nonNullString(java.lang.String) -> nonNullString
    654:657:java.lang.String quotedOr(java.lang.Object,java.lang.String) -> quotedOr
    673:678:java.lang.String getClassDescription(java.lang.Object) -> getClassDescription
    694:699:java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType) -> getTypeDescription
    710:714:java.lang.String classNameOf(java.lang.Object) -> classNameOf
    724:740:java.lang.String nameOf(java.lang.Class) -> nameOf
    753:756:java.lang.String nameOf(com.fasterxml.jackson.databind.util.Named) -> nameOf
    766:769:java.lang.String name(java.lang.String) -> name
    779:783:java.lang.String name(com.fasterxml.jackson.databind.PropertyName) -> name
    798:801:java.lang.String backticked(java.lang.String) -> backticked
    810:813:java.lang.String apostrophed(java.lang.String) -> apostrophed
    827:833:java.lang.String exceptionMessage(java.lang.Throwable) -> exceptionMessage
    848:872:java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    883:907:java.lang.Class wrapperType(java.lang.Class) -> wrapperType
    918:946:java.lang.Class primitiveType(java.lang.Class) -> primitiveType
    965:966:void checkAndFixAccess(java.lang.reflect.Member) -> checkAndFixAccess
    983:1017:void checkAndFixAccess(java.lang.reflect.Member,boolean) -> checkAndFixAccess
    1032:1032:boolean isEnumType(java.lang.Class) -> isEnumType
    1044:1048:java.lang.Class findEnumType(java.util.EnumSet) -> findEnumType
    1059:1063:java.lang.Class findEnumType(java.util.EnumMap) -> findEnumType
    1075:1075:java.lang.Class findEnumType(java.lang.Enum) -> findEnumType
    1088:1091:java.lang.Class findEnumType(java.lang.Class) -> findEnumType
    1107:1121:java.lang.Enum findFirstAnnotatedEnumValue(java.lang.Class,java.lang.Class) -> findFirstAnnotatedEnumValue
    1141:1141:boolean isJacksonStdImpl(java.lang.Object) -> isJacksonStdImpl
    1145:1145:boolean isJacksonStdImpl(java.lang.Class) -> isJacksonStdImpl
    1162:1163:boolean isJDKClass(java.lang.Class) -> isJDKClass
    1181:1185:boolean isJDK17OrAbove() -> isJDK17OrAbove
    1200:1214:int getJDKMajorVersion() -> getJDKMajorVersion
    1228:1229:boolean isNonStaticInnerClass(java.lang.Class) -> isNonStaticInnerClass
    1239:1240:java.lang.String getPackageName(java.lang.Class) -> getPackageName
    1247:1247:boolean hasEnclosingMethod(java.lang.Class) -> hasEnclosingMethod
    1255:1255:java.lang.reflect.Field[] getDeclaredFields(java.lang.Class) -> getDeclaredFields
    1263:1263:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    1270:1273:java.lang.annotation.Annotation[] findClassAnnotations(java.lang.Class) -> findClassAnnotations
    1286:1308:java.lang.reflect.Method[] getClassMethods(java.lang.Class) -> getClassMethods
    1316:1318:java.lang.reflect.Method[] _failGetClassMethods(java.lang.Class,java.lang.Throwable) -> _failGetClassMethods
    1328:1337:com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] getConstructors(java.lang.Class) -> getConstructors
    1347:1347:java.lang.Class getDeclaringClass(java.lang.Class) -> getDeclaringClass
    1354:1354:java.lang.reflect.Type getGenericSuperclass(java.lang.Class) -> getGenericSuperclass
    1361:1361:java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class) -> getGenericInterfaces
    1369:1369:java.lang.Class getEnclosingClass(java.lang.Class) -> getEnclosingClass
    1373:1373:java.lang.Class[] _interfaces(java.lang.Class) -> _interfaces
    20:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ClassUtil$Ctor -> com.fasterxml.jackson.databind.util.h$a:
# {"fileName":"ClassUtil.java","id":"sourceFile"}
    java.lang.reflect.Constructor _ctor -> a
    java.lang.annotation.Annotation[] _annotations -> b
    java.lang.annotation.Annotation[][] _paramAnnotations -> c
    int _paramCount -> d
    1489:1493:void <init>(java.lang.reflect.Constructor) -> <init>
    1496:1496:java.lang.reflect.Constructor getConstructor() -> getConstructor
    1500:1505:int getParamCount() -> getParamCount
    1509:1509:java.lang.Class getDeclaringClass() -> getDeclaringClass
    1513:1518:java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    1522:1527:java.lang.annotation.Annotation[][] getParameterAnnotations() -> getParameterAnnotations
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator -> com.fasterxml.jackson.databind.util.h$b:
# {"fileName":"ClassUtil.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator instance -> a
    java.lang.reflect.Field enumSetTypeField -> b
    java.lang.reflect.Field enumMapTypeField -> c
    java.lang.String failForEnumSet -> d
    java.lang.String failForEnumMap -> e
    1396:1420:void <init>() -> <init>
    1425:1428:java.lang.Class enumTypeFor(java.util.EnumSet) -> enumTypeFor
    1435:1438:java.lang.Class enumTypeFor(java.util.EnumMap) -> enumTypeFor
    1445:1447:java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> get
    1455:1465:java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> locateField
    1388:1388:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.CompactStringObjectMap -> com.fasterxml.jackson.databind.util.i:
# {"fileName":"CompactStringObjectMap.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY -> b
    int _hashMask -> c
    int _spillCount -> d
    java.lang.Object[] _hashArea -> e
    33:37:void <init>(int,int,java.lang.Object[]) -> <init>
    41:80:com.fasterxml.jackson.databind.util.CompactStringObjectMap construct(java.util.Map) -> construct
    85:96:int findSize(int) -> findSize
    100:106:java.lang.Object find(java.lang.String) -> find
    111:129:java.lang.Object _find2(java.lang.String,int,java.lang.Object) -> _find2
    134:143:java.lang.Object findCaseInsensitive(java.lang.String) -> findCaseInsensitive
    147:155:java.util.List keys() -> keys
    25:25:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.Converter -> com.fasterxml.jackson.databind.util.j:
# {"fileName":"Converter.java","id":"sourceFile"}
    java.lang.Object convert(java.lang.Object) -> convert
    com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getInputType
    com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getOutputType
com.fasterxml.jackson.databind.util.Converter$None -> com.fasterxml.jackson.databind.util.j$a:
# {"fileName":"Converter.java","id":"sourceFile"}
    65:65:void <init>() -> <init>
com.fasterxml.jackson.databind.util.EnumResolver -> com.fasterxml.jackson.databind.util.k:
# {"fileName":"EnumResolver.java","id":"sourceFile"}
    long serialVersionUID -> g
    java.lang.Class _enumClass -> a
    java.lang.Enum[] _enums -> b
    java.util.HashMap _enumsById -> c
    java.lang.Enum _defaultValue -> d
    boolean _isIgnoreCase -> e
    boolean _isFromIntValue -> f
    59:66:void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean,boolean) -> <init>
    82:82:com.fasterxml.jackson.databind.util.EnumResolver constructFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> constructFor
    90:114:com.fasterxml.jackson.databind.util.EnumResolver _constructFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _constructFor
    126:126:com.fasterxml.jackson.databind.util.EnumResolver constructUsingToString(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> constructUsingToString
    137:137:com.fasterxml.jackson.databind.util.EnumResolver constructUsingIndex(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> constructUsingIndex
    143:155:com.fasterxml.jackson.databind.util.EnumResolver _constructUsingIndex(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _constructUsingIndex
    168:168:com.fasterxml.jackson.databind.util.EnumResolver constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.EnumNamingStrategy) -> constructUsingEnumNamingStrategy
    180:194:com.fasterxml.jackson.databind.util.EnumResolver _constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.EnumNamingStrategy) -> _constructUsingEnumNamingStrategy
    202:225:com.fasterxml.jackson.databind.util.EnumResolver _constructUsingToString(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class) -> _constructUsingToString
    236:236:com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> constructUsingMethod
    244:264:com.fasterxml.jackson.databind.util.EnumResolver _constructUsingMethod(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _constructUsingMethod
    269:269:com.fasterxml.jackson.databind.util.CompactStringObjectMap constructLookup() -> constructLookup
    274:274:java.lang.Class _enumClass(java.lang.Class) -> _enumClass
    278:282:java.lang.Enum[] _enumConstants(java.lang.Class) -> _enumConstants
    286:286:java.lang.Enum _enumDefault(com.fasterxml.jackson.databind.AnnotationIntrospector,java.lang.Class) -> _enumDefault
    290:293:boolean _isIntType(java.lang.Class) -> _isIntType
    313:314:void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean) -> <init>
    323:329:java.lang.Enum findEnum(java.lang.String) -> findEnum
    334:339:java.lang.Enum _findEnumCaseInsensitive(java.lang.String) -> _findEnumCaseInsensitive
    343:346:java.lang.Enum getEnum(int) -> getEnum
    350:350:java.lang.Enum getDefaultValue() -> getDefaultValue
    354:354:java.lang.Enum[] getRawEnums() -> getRawEnums
    358:362:java.util.List getEnums() -> getEnums
    369:369:java.util.Collection getEnumIds() -> getEnumIds
    372:372:java.lang.Class getEnumClass() -> getEnumClass
    374:374:int lastValidIndex() -> lastValidIndex
    385:385:boolean isFromIntValue() -> isFromIntValue
com.fasterxml.jackson.databind.util.EnumValues -> com.fasterxml.jackson.databind.util.l:
# {"fileName":"EnumValues.java","id":"sourceFile"}
    long serialVersionUID -> a
    java.lang.Class _enumClass -> b
    java.lang.Enum[] _values -> c
    com.fasterxml.jackson.core.SerializableString[] _textual -> d
    java.util.EnumMap _asMap -> e
    27:31:void <init>(java.lang.Class,com.fasterxml.jackson.core.SerializableString[]) -> <init>
    38:41:com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class) -> construct
    47:65:com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> constructFromName
    70:79:com.fasterxml.jackson.databind.util.EnumValues constructFromToString(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class) -> constructFromToString
    91:100:com.fasterxml.jackson.databind.util.EnumValues constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.EnumNamingStrategy) -> constructUsingEnumNamingStrategy
    108:113:com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,java.util.List) -> construct
    121:121:com.fasterxml.jackson.databind.util.EnumValues construct(java.lang.Class,com.fasterxml.jackson.core.SerializableString[]) -> construct
    125:125:com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum) -> serializedValueFor
    129:129:java.util.Collection values() -> values
    138:138:java.util.List enums() -> enums
    146:155:java.util.EnumMap internalMap() -> internalMap
    161:161:java.lang.Class getEnumClass() -> getEnumClass
com.fasterxml.jackson.databind.util.ExceptionUtil -> com.fasterxml.jackson.databind.util.m:
# {"fileName":"ExceptionUtil.java","id":"sourceFile"}
    11:11:void <init>() -> <init>
    31:40:void rethrowIfFatal(java.lang.Throwable) -> rethrowIfFatal
    51:51:boolean isFatal(java.lang.Throwable) -> isFatal
    63:64:java.lang.Object throwSneaky(java.io.IOException) -> throwSneaky
    69:69:void _sneaky(java.lang.Throwable) -> _sneaky
com.fasterxml.jackson.databind.util.ISO8601DateFormat -> com.fasterxml.jackson.databind.util.n:
# {"fileName":"ISO8601DateFormat.java","id":"sourceFile"}
    long serialVersionUID -> a
    22:25:void <init>() -> <init>
    29:30:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    36:39:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    47:47:java.util.Date parse(java.lang.String) -> parse
    52:52:java.lang.Object clone() -> clone
com.fasterxml.jackson.databind.util.ISO8601Utils -> com.fasterxml.jackson.databind.util.o:
# {"fileName":"ISO8601Utils.java","id":"sourceFile"}
    int DEF_8601_LEN -> a
    java.util.TimeZone TIMEZONE_Z -> b
    16:16:void <init>() -> <init>
    39:39:java.lang.String format(java.util.Date) -> format
    50:50:java.lang.String format(java.util.Date,boolean) -> format
    55:55:java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    69:97:java.lang.String format(java.util.Date,boolean,java.util.TimeZone,java.util.Locale) -> format
    116:261:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    273:273:boolean checkOffset(java.lang.String,int,char) -> checkOffset
    286:308:int parseInt(java.lang.String,int,int) -> parseInt
    315:319:int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    18:24:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil -> com.fasterxml.jackson.databind.util.p:
# {"fileName":"IgnorePropertiesUtil.java","id":"sourceFile"}
    11:11:void <init>() -> <init>
    17:30:boolean shouldIgnore(java.lang.Object,java.util.Collection,java.util.Collection) -> shouldIgnore
    44:47:com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set) -> buildCheckerIfNeeded
    63:77:java.util.Set combineNamesToInclude(java.util.Set,java.util.Set) -> combineNamesToInclude
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker -> com.fasterxml.jackson.databind.util.p$a:
# {"fileName":"IgnorePropertiesUtil.java","id":"sourceFile"}
    long serialVersionUID -> a
    java.util.Set _toIgnore -> b
    java.util.Set _toInclude -> c
    92:98:void <init>(java.util.Set,java.util.Set) -> <init>
    101:101:com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker construct(java.util.Set,java.util.Set) -> construct
    106:107:boolean shouldIgnore(java.lang.Object) -> shouldIgnore
com.fasterxml.jackson.databind.util.JSONPObject -> com.fasterxml.jackson.databind.util.q:
# {"fileName":"JSONPObject.java","id":"sourceFile"}
    java.lang.String _function -> a
    java.lang.Object _value -> b
    com.fasterxml.jackson.databind.JavaType _serializationType -> c
    39:40:void <init>(java.lang.String,java.lang.Object) -> <init>
    43:47:void <init>(java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> <init>
    60:61:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    68:95:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    103:103:java.lang.String getFunction() -> getFunction
    104:104:java.lang.Object getValue() -> getValue
    105:105:com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
com.fasterxml.jackson.databind.util.JSONWrappedObject -> com.fasterxml.jackson.databind.util.r:
# {"fileName":"JSONWrappedObject.java","id":"sourceFile"}
    java.lang.String _prefix -> a
    java.lang.String _suffix -> b
    java.lang.Object _value -> c
    com.fasterxml.jackson.databind.JavaType _serializationType -> d
    46:47:void <init>(java.lang.String,java.lang.String,java.lang.Object) -> <init>
    55:60:void <init>(java.lang.String,java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> <init>
    73:74:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    81:91:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    99:99:java.lang.String getPrefix() -> getPrefix
    100:100:java.lang.String getSuffix() -> getSuffix
    101:101:java.lang.Object getValue() -> getValue
    102:102:com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
com.fasterxml.jackson.databind.util.LRUMap -> com.fasterxml.jackson.databind.util.s:
# {"fileName":"LRUMap.java","id":"sourceFile"}
    long serialVersionUID -> d
    int _initialEntries -> a
    int _maxEntries -> b
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map -> c
    37:46:void <init>(int,int) -> <init>
    50:50:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    58:58:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    63:63:java.lang.Object get(java.lang.Object) -> get
    66:66:void clear() -> clear
    69:69:int size() -> size
    78:81:void contents(java.util.function.BiConsumer) -> contents
    90:90:java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.util.LinkedNode -> com.fasterxml.jackson.databind.util.t:
# {"fileName":"LinkedNode.java","id":"sourceFile"}
    java.lang.Object value -> a
    com.fasterxml.jackson.databind.util.LinkedNode next -> b
    15:18:void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode) -> <init>
    22:26:void linkNext(com.fasterxml.jackson.databind.util.LinkedNode) -> linkNext
    28:28:com.fasterxml.jackson.databind.util.LinkedNode next() -> next
    30:30:java.lang.Object value() -> value
    44:50:boolean contains(com.fasterxml.jackson.databind.util.LinkedNode,java.lang.Object) -> contains
com.fasterxml.jackson.databind.util.LookupCache -> com.fasterxml.jackson.databind.util.u:
# {"fileName":"LookupCache.java","id":"sourceFile"}
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void clear() -> clear
com.fasterxml.jackson.databind.util.NameTransformer -> com.fasterxml.jackson.databind.util.v:
# {"fileName":"NameTransformer.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.NameTransformer NOP -> a
    33:33:void <init>() -> <init>
    41:92:com.fasterxml.jackson.databind.util.NameTransformer simpleTransformer(java.lang.String,java.lang.String) -> simpleTransformer
    101:101:com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> chainedTransformer
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    14:14:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.NameTransformer$1 -> com.fasterxml.jackson.databind.util.v$1:
# {"fileName":"NameTransformer.java","id":"sourceFile"}
    java.lang.String val$prefix -> b
    java.lang.String val$suffix -> c
    46:46:void <init>(java.lang.String,java.lang.String) -> <init>
    48:48:java.lang.String transform(java.lang.String) -> transform
    51:57:java.lang.String reverse(java.lang.String) -> reverse
    60:60:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$2 -> com.fasterxml.jackson.databind.util.v$2:
# {"fileName":"NameTransformer.java","id":"sourceFile"}
    java.lang.String val$prefix -> b
    63:63:void <init>(java.lang.String) -> <init>
    65:65:java.lang.String transform(java.lang.String) -> transform
    68:71:java.lang.String reverse(java.lang.String) -> reverse
    74:74:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$3 -> com.fasterxml.jackson.databind.util.v$3:
# {"fileName":"NameTransformer.java","id":"sourceFile"}
    java.lang.String val$suffix -> b
    78:78:void <init>(java.lang.String) -> <init>
    80:80:java.lang.String transform(java.lang.String) -> transform
    83:86:java.lang.String reverse(java.lang.String) -> reverse
    89:89:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$Chained -> com.fasterxml.jackson.databind.util.v$a:
# {"fileName":"NameTransformer.java","id":"sourceFile"}
    long serialVersionUID -> d
    com.fasterxml.jackson.databind.util.NameTransformer _t1 -> b
    com.fasterxml.jackson.databind.util.NameTransformer _t2 -> c
    123:126:void <init>(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> <init>
    130:130:java.lang.String transform(java.lang.String) -> transform
    135:139:java.lang.String reverse(java.lang.String) -> reverse
    143:143:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer -> com.fasterxml.jackson.databind.util.v$b:
# {"fileName":"NameTransformer.java","id":"sourceFile"}
    long serialVersionUID -> b
    16:16:void <init>() -> <init>
    24:24:java.lang.String transform(java.lang.String) -> transform
    29:29:java.lang.String reverse(java.lang.String) -> reverse
com.fasterxml.jackson.databind.util.Named -> com.fasterxml.jackson.databind.util.w:
# {"fileName":"Named.java","id":"sourceFile"}
    java.lang.String getName() -> getName
com.fasterxml.jackson.databind.util.NativeImageUtil -> com.fasterxml.jackson.databind.util.x:
# {"fileName":"NativeImageUtil.java","id":"sourceFile"}
    boolean RUNNING_IN_SVM -> a
    18:19:void <init>() -> <init>
    26:26:boolean isRunningInNativeImage() -> isRunningInNativeImage
    33:39:boolean isUnsupportedFeatureError(java.lang.Throwable) -> isUnsupportedFeatureError
    47:53:boolean needsReflectionConfiguration(java.lang.Class) -> needsReflectionConfiguration
    15:16:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ObjectBuffer -> com.fasterxml.jackson.databind.util.y:
# {"fileName":"ObjectBuffer.java","id":"sourceFile"}
    int SMALL_CHUNK -> a
    int MAX_CHUNK -> b
    com.fasterxml.jackson.databind.util.LinkedNode _head -> c
    com.fasterxml.jackson.databind.util.LinkedNode _tail -> d
    int _size -> e
    java.lang.Object[] _freeBuffer -> f
    54:54:void <init>() -> <init>
    68:72:java.lang.Object[] resetAndStart() -> resetAndStart
    80:85:java.lang.Object[] resetAndStart(java.lang.Object[],int) -> resetAndStart
    104:119:java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> appendCompletedChunk
    134:138:java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> completeAndClearBuffer
    151:156:java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> completeAndClearBuffer
    161:172:void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> completeAndClearBuffer
    181:181:int initialCapacity() -> initialCapacity
    188:188:int bufferedSize() -> bufferedSize
    199:205:void _reset() -> _reset
    210:225:void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> _copyTo
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder -> com.fasterxml.jackson.databind.util.z:
# {"fileName":"PrimitiveArrayBuilder.java","id":"sourceFile"}
    int INITIAL_CHUNK_SIZE -> a
    int SMALL_CHUNK_SIZE -> b
    int MAX_CHUNK_SIZE -> c
    java.lang.Object _freeBuffer -> d
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead -> e
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail -> f
    int _bufferedEntryCount -> g
    45:45:void <init>() -> <init>
    53:53:int bufferedSize() -> bufferedSize
    57:59:java.lang.Object resetAndStart() -> resetAndStart
    67:82:java.lang.Object appendCompletedChunk(java.lang.Object,int) -> appendCompletedChunk
    87:102:java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> completeAndClearBuffer
    java.lang.Object _constructArray(int) -> _constructArray
    122:128:void _reset() -> _reset
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node -> com.fasterxml.jackson.databind.util.z$a:
# {"fileName":"PrimitiveArrayBuilder.java","id":"sourceFile"}
    java.lang.Object _data -> a
    int _dataLength -> b
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next -> c
    158:161:void <init>(java.lang.Object,int) -> <init>
    163:163:java.lang.Object getData() -> getData
    167:169:int copyData(java.lang.Object,int) -> copyData
    172:172:com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node next() -> next
    176:180:void linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node) -> linkNext
com.fasterxml.jackson.databind.util.RawValue -> com.fasterxml.jackson.databind.util.aa:
# {"fileName":"RawValue.java","id":"sourceFile"}
    java.lang.Object _value -> a
    29:31:void <init>(java.lang.String) -> <init>
    33:35:void <init>(com.fasterxml.jackson.core.SerializableString) -> <init>
    37:39:void <init>(com.fasterxml.jackson.databind.JsonSerializable) -> <init>
    48:50:void <init>(java.lang.Object,boolean) -> <init>
    57:57:java.lang.Object rawValue() -> rawValue
    63:68:void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    74:82:void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    86:92:void serialize(com.fasterxml.jackson.core.JsonGenerator) -> serialize
    96:101:void _serialize(com.fasterxml.jackson.core.JsonGenerator) -> _serialize
    105:112:boolean equals(java.lang.Object) -> equals
    117:117:int hashCode() -> hashCode
    122:122:java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.RootNameLookup -> com.fasterxml.jackson.databind.util.ab:
# {"fileName":"RootNameLookup.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.util.LRUMap _rootNames -> a
    21:23:void <init>() -> <init>
    26:26:com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig) -> findRootName
    31:46:com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig) -> findRootName
    60:60:java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition -> com.fasterxml.jackson.databind.util.ac:
# {"fileName":"SimpleBeanPropertyDefinition.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> b
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> c
    com.fasterxml.jackson.databind.PropertyMetadata _metadata -> d
    com.fasterxml.jackson.databind.PropertyName _fullName -> e
    com.fasterxml.jackson.annotation.JsonInclude$Value _inclusion -> f
    60:66:void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Value) -> <init>
    74:75:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> construct
    83:83:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName) -> construct
    95:98:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Include) -> construct
    108:108:com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.annotation.JsonInclude$Value) -> construct
    120:123:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withSimpleName(java.lang.String) -> withSimpleName
    129:132:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(com.fasterxml.jackson.databind.PropertyName) -> withName
    140:143:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withMetadata(com.fasterxml.jackson.databind.PropertyMetadata) -> withMetadata
    151:154:com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withInclusion(com.fasterxml.jackson.annotation.JsonInclude$Value) -> withInclusion
    165:165:java.lang.String getName() -> getName
    168:168:com.fasterxml.jackson.databind.PropertyName getFullName() -> getFullName
    172:172:boolean hasName(com.fasterxml.jackson.databind.PropertyName) -> hasName
    176:176:java.lang.String getInternalName() -> getInternalName
    180:183:com.fasterxml.jackson.databind.PropertyName getWrapperName() -> getWrapperName
    188:188:boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    189:189:boolean isExplicitlyNamed() -> isExplicitlyNamed
    197:197:com.fasterxml.jackson.databind.PropertyMetadata getMetadata() -> getMetadata
    202:205:com.fasterxml.jackson.databind.JavaType getPrimaryType() -> getPrimaryType
    210:213:java.lang.Class getRawPrimaryType() -> getRawPrimaryType
    218:218:com.fasterxml.jackson.annotation.JsonInclude$Value findInclusion() -> findInclusion
    228:228:boolean hasGetter() -> hasGetter
    231:231:boolean hasSetter() -> hasSetter
    234:234:boolean hasField() -> hasField
    237:237:boolean hasConstructorParameter() -> hasConstructorParameter
    241:245:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    250:254:com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    259:259:com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    264:264:com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    269:273:java.util.Iterator getConstructorParameters() -> getConstructorParameters
    277:277:com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
com.fasterxml.jackson.databind.util.StdConverter -> com.fasterxml.jackson.databind.util.ad:
# {"fileName":"StdConverter.java","id":"sourceFile"}
    13:13:void <init>() -> <init>
    java.lang.Object convert(java.lang.Object) -> convert
    27:27:com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getInputType
    32:32:com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory) -> getOutputType
    36:41:com.fasterxml.jackson.databind.JavaType _findConverterType(com.fasterxml.jackson.databind.type.TypeFactory) -> _findConverterType
com.fasterxml.jackson.databind.util.StdDateFormat -> com.fasterxml.jackson.databind.util.ae:
# {"fileName":"StdDateFormat.java","id":"sourceFile"}
    java.lang.String PATTERN_PLAIN_STR -> a
    java.util.regex.Pattern PATTERN_PLAIN -> b
    java.util.regex.Pattern PATTERN_ISO8601 -> c
    java.lang.String DATE_FORMAT_STR_ISO8601 -> d
    java.lang.String DATE_FORMAT_STR_PLAIN -> e
    java.lang.String DATE_FORMAT_STR_RFC1123 -> f
    java.lang.String[] ALL_FORMATS -> g
    java.util.TimeZone DEFAULT_TIMEZONE -> h
    java.util.Locale DEFAULT_LOCALE -> i
    java.text.DateFormat DATE_FORMAT_RFC1123 -> j
    com.fasterxml.jackson.databind.util.StdDateFormat instance -> k
    java.util.Calendar CALENDAR -> l
    java.util.TimeZone _timezone -> m
    java.util.Locale _locale -> n
    java.lang.Boolean _lenient -> o
    java.util.Calendar _calendar -> p
    java.text.DateFormat _formatRFC1123 -> q
    boolean _tzSerializedWithColon -> r
    169:179:void <init>() -> <init>
    169:185:void <init>(java.util.TimeZone,java.util.Locale) -> <init>
    188:189:void <init>(java.util.TimeZone,java.util.Locale,java.lang.Boolean) -> <init>
    169:200:void <init>(java.util.TimeZone,java.util.Locale,java.lang.Boolean,boolean) -> <init>
    203:203:java.util.TimeZone getDefaultTimeZone() -> getDefaultTimeZone
    211:217:com.fasterxml.jackson.databind.util.StdDateFormat withTimeZone(java.util.TimeZone) -> withTimeZone
    227:230:com.fasterxml.jackson.databind.util.StdDateFormat withLocale(java.util.Locale) -> withLocale
    241:244:com.fasterxml.jackson.databind.util.StdDateFormat withLenient(java.lang.Boolean) -> withLenient
    261:264:com.fasterxml.jackson.databind.util.StdDateFormat withColonInTimeZone(boolean) -> withColonInTimeZone
    271:271:com.fasterxml.jackson.databind.util.StdDateFormat clone() -> clone
    285:287:java.text.DateFormat getISO8601Format(java.util.TimeZone,java.util.Locale) -> getISO8601Format
    301:301:java.text.DateFormat getRFC1123Format(java.util.TimeZone,java.util.Locale) -> getRFC1123Format
    313:313:java.util.TimeZone getTimeZone() -> getTimeZone
    321:325:void setTimeZone(java.util.TimeZone) -> setTimeZone
    334:340:void setLenient(boolean) -> setLenient
    345:345:boolean isLenient() -> isLenient
    363:363:boolean isColonIncludedInTimeZone() -> isColonIncludedInTimeZone
    375:393:java.util.Date parse(java.lang.String) -> parse
    401:405:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    410:430:java.util.Date _parseDate(java.lang.String,java.text.ParsePosition) -> _parseDate
    443:448:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    454:508:void _format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer) -> _format
    513:523:void _formatBCEYear(java.lang.StringBuffer,int) -> _formatBCEYear
    526:534:void pad2(java.lang.StringBuffer,int) -> pad2
    537:545:void pad3(java.lang.StringBuffer,int) -> pad3
    548:560:void pad4(java.lang.StringBuffer,int) -> pad4
    570:571:java.lang.String toString() -> toString
    575:585:java.lang.String toPattern() -> toPattern
    590:590:boolean equals(java.lang.Object) -> equals
    595:595:int hashCode() -> hashCode
    610:618:boolean looksLikeISO8601(java.lang.String) -> looksLikeISO8601
    625:631:java.util.Date _parseDateFromLong(java.lang.String,java.text.ParsePosition) -> _parseDateFromLong
    638:642:java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> parseAsISO8601
    649:749:java.util.Date _parseAsISO8601(java.lang.String,java.text.ParsePosition) -> _parseAsISO8601
    757:760:int _parse4D(java.lang.String,int) -> _parse4D
    764:765:int _parse2D(java.lang.String,int) -> _parse2D
    770:774:java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> parseAsRFC1123
    786:798:java.text.DateFormat _cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale,java.lang.Boolean) -> _cloneFormat
    802:803:void _clearFormats() -> _clearFormats
    806:814:java.util.Calendar _getCalendar(java.util.TimeZone) -> _getCalendar
    818:821:boolean _equals(java.lang.Object,java.lang.Object) -> _equals
    39:39:java.lang.Object clone() -> clone
    50:132:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer -> com.fasterxml.jackson.databind.util.af:
# {"fileName":"TokenBuffer.java","id":"sourceFile"}
    int DEFAULT_GENERATOR_FEATURES -> e
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> f
    com.fasterxml.jackson.core.JsonStreamContext _parentContext -> g
    int _generatorFeatures -> h
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> i
    boolean _closed -> j
    boolean _hasNativeTypeIds -> k
    boolean _hasNativeObjectIds -> l
    boolean _mayHaveNativeIds -> m
    boolean _forceBigDecimal -> n
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first -> o
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last -> p
    int _appendAt -> q
    java.lang.Object _typeId -> r
    java.lang.Object _objectId -> s
    boolean _hasNativeId -> t
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> u
    64:163:void <init>(com.fasterxml.jackson.core.ObjectCodec,boolean) -> <init>
    169:170:void <init>(com.fasterxml.jackson.core.JsonParser) -> <init>
    64:190:void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> <init>
    206:208:com.fasterxml.jackson.databind.util.TokenBuffer asCopyOfValue(com.fasterxml.jackson.core.JsonParser) -> asCopyOfValue
    220:221:com.fasterxml.jackson.databind.util.TokenBuffer overrideParentContext(com.fasterxml.jackson.core.JsonStreamContext) -> overrideParentContext
    228:229:com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean) -> forceUseOfBigDecimal
    234:234:com.fasterxml.jackson.core.Version version() -> version
    248:248:com.fasterxml.jackson.core.JsonParser asParser() -> asParser
    262:264:com.fasterxml.jackson.core.JsonParser asParserOnFirstToken() -> asParserOnFirstToken
    282:282:com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec) -> asParser
    291:291:com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.StreamReadConstraints) -> asParser
    300:303:com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser) -> asParser
    314:314:com.fasterxml.jackson.core.JsonToken firstToken() -> firstToken
    326:326:boolean isEmpty() -> isEmpty
    345:357:com.fasterxml.jackson.databind.util.TokenBuffer append(com.fasterxml.jackson.databind.util.TokenBuffer) -> append
    372:498:void serialize(com.fasterxml.jackson.core.JsonGenerator) -> serialize
    507:525:com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    533:578:java.lang.String toString() -> toString
    583:591:void _appendNativeIds(java.lang.StringBuilder) -> _appendNativeIds
    601:602:com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    607:608:com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    615:615:boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    620:620:int getFeatureMask() -> getFeatureMask
    627:628:com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int) -> setFeatureMask
    633:635:com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int,int) -> overrideStdFeatures
    641:641:com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    646:647:com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    651:651:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    654:654:com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext() -> getOutputContext
    667:667:boolean canWriteBinaryNatively() -> canWriteBinaryNatively
    676:676:com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities() -> getWriteCapabilities
    686:686:void flush() -> flush
    690:691:void close() -> close
    694:694:boolean isClosed() -> isClosed
    705:708:void writeStartArray() -> writeStartArray
    712:715:void writeStartArray(java.lang.Object) -> writeStartArray
    719:722:void writeStartArray(java.lang.Object,int) -> writeStartArray
    727:733:void writeEndArray() -> writeEndArray
    738:741:void writeStartObject() -> writeStartObject
    746:750:void writeStartObject(java.lang.Object) -> writeStartObject
    755:759:void writeStartObject(java.lang.Object,int) -> writeStartObject
    764:770:void writeEndObject() -> writeEndObject
    775:777:void writeFieldName(java.lang.String) -> writeFieldName
    782:784:void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    794:799:void writeString(java.lang.String) -> writeString
    803:804:void writeString(char[],int,int) -> writeString
    808:813:void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    819:842:void writeString(java.io.Reader,int) -> writeString
    848:849:void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    855:856:void writeUTF8String(byte[],int,int) -> writeUTF8String
    860:861:void writeRaw(java.lang.String) -> writeRaw
    865:866:void writeRaw(java.lang.String,int,int) -> writeRaw
    870:871:void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    875:876:void writeRaw(char[],int,int) -> writeRaw
    880:881:void writeRaw(char) -> writeRaw
    885:886:void writeRawValue(java.lang.String) -> writeRawValue
    890:894:void writeRawValue(java.lang.String,int,int) -> writeRawValue
    898:899:void writeRawValue(char[],int,int) -> writeRawValue
    909:910:void writeNumber(short) -> writeNumber
    914:915:void writeNumber(int) -> writeNumber
    919:920:void writeNumber(long) -> writeNumber
    924:925:void writeNumber(double) -> writeNumber
    929:930:void writeNumber(float) -> writeNumber
    934:939:void writeNumber(java.math.BigDecimal) -> writeNumber
    943:948:void writeNumber(java.math.BigInteger) -> writeNumber
    955:956:void writeNumber(java.lang.String) -> writeNumber
    959:960:void writeLazyInteger(java.lang.Object) -> writeLazyInteger
    963:964:void writeLazyDecimal(java.lang.Object) -> writeLazyDecimal
    968:969:void writeBoolean(boolean) -> writeBoolean
    973:974:void writeNull() -> writeNull
    985:1003:void writeObject(java.lang.Object) -> writeObject
    1008:1019:void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    1036:1039:void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    1049:1049:int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    1060:1060:boolean canWriteTypeId() -> canWriteTypeId
    1065:1065:boolean canWriteObjectId() -> canWriteObjectId
    1070:1072:void writeTypeId(java.lang.Object) -> writeTypeId
    1076:1078:void writeObjectId(java.lang.Object) -> writeObjectId
    1082:1083:void writeEmbeddedObject(java.lang.Object) -> writeEmbeddedObject
    1094:1150:void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    1155:1196:void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    1200:1245:void _copyBufferContents(com.fasterxml.jackson.core.JsonParser) -> _copyBufferContents
    1250:1291:void _copyBufferValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken) -> _copyBufferValue
    1295:1301:void _checkNativeIds(com.fasterxml.jackson.core.JsonParser) -> _checkNativeIds
    1352:1365:void _appendValue(com.fasterxml.jackson.core.JsonToken) -> _appendValue
    1375:1388:void _appendValue(com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> _appendValue
    1400:1411:void _appendFieldName(java.lang.Object) -> _appendFieldName
    1421:1432:void _appendStartMarker(com.fasterxml.jackson.core.JsonToken) -> _appendStartMarker
    1442:1449:void _appendEndMarker(com.fasterxml.jackson.core.JsonToken) -> _appendEndMarker
    1453:1453:void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    24:24:com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    29:29:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer$1 -> com.fasterxml.jackson.databind.util.af$1:
# {"fileName":"TokenBuffer.java","id":"sourceFile"}
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> b
    400:1121:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBuffer$Parser -> com.fasterxml.jackson.databind.util.af$a:
# {"fileName":"TokenBuffer.java","id":"sourceFile"}
    com.fasterxml.jackson.core.ObjectCodec _codec -> d
    com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints -> e
    boolean _hasNativeTypeIds -> f
    boolean _hasNativeObjectIds -> g
    boolean _hasNativeIds -> h
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _segment -> i
    int _segmentPtr -> j
    com.fasterxml.jackson.databind.util.TokenBufferReadContext _parsingContext -> k
    boolean _closed -> l
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteBuilder -> m
    com.fasterxml.jackson.core.JsonLocation _location -> n
    1528:1529:void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean) -> <init>
    1536:1537:void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext) -> <init>
    1516:1555:void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean,com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.StreamReadConstraints) -> <init>
    1558:1559:void setLocation(com.fasterxml.jackson.core.JsonLocation) -> setLocation
    1562:1562:com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    1565:1565:void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    1575:1575:com.fasterxml.jackson.core.Version version() -> version
    1584:1584:com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities() -> getReadCapabilities
    1589:1589:com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints() -> streamReadConstraints
    1601:1608:com.fasterxml.jackson.core.JsonToken peekNextToken() -> peekNextToken
    1619:1622:void close() -> close
    1634:1661:com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    1668:1681:java.lang.String nextFieldName() -> nextFieldName
    1685:1685:boolean isClosed() -> isClosed
    1694:1694:com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    1697:1697:com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    1701:1701:com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    1707:1711:java.lang.String currentName() -> currentName
    1715:1715:java.lang.String getCurrentName() -> getCurrentName
    1721:1732:void overrideCurrentName(java.lang.String) -> overrideCurrentName
    1744:1760:java.lang.String getText() -> getText
    1766:1767:char[] getTextCharacters() -> getTextCharacters
    1772:1773:int getTextLength() -> getTextLength
    1777:1777:int getTextOffset() -> getTextOffset
    1782:1782:boolean hasTextCharacters() -> hasTextCharacters
    1794:1805:boolean isNaN() -> isNaN
    1811:1820:java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    1826:1837:java.math.BigDecimal getDecimalValue() -> getDecimalValue
    1842:1842:double getDoubleValue() -> getDoubleValue
    1847:1847:float getFloatValue() -> getFloatValue
    1853:1858:int getIntValue() -> getIntValue
    1863:1868:long getLongValue() -> getLongValue
    1874:1886:com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    1891:1891:java.lang.Number getNumberValue() -> getNumberValue
    1896:1897:java.lang.Object getNumberValueDeferred() -> getNumberValueDeferred
    1901:1939:java.lang.Number getNumberValue(boolean) -> getNumberValue
    1943:1943:boolean _smallerThanInt(java.lang.Number) -> _smallerThanInt
    1947:1947:boolean _smallerThanLong(java.lang.Number) -> _smallerThanLong
    1954:1984:int _convertNumberToInt(java.lang.Number) -> _convertNumberToInt
    1989:2011:long _convertNumberToLong(java.lang.Number) -> _convertNumberToLong
    2023:2026:java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    2034:2056:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    2062:2067:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    2078:2078:boolean canReadObjectId() -> canReadObjectId
    2083:2083:boolean canReadTypeId() -> canReadTypeId
    2088:2088:java.lang.Object getTypeId() -> getTypeId
    2093:2093:java.lang.Object getObjectId() -> getObjectId
    2103:2103:java.lang.Object _currentObject() -> _currentObject
    2108:2111:void _checkIsNumber() -> _checkIsNumber
    2115:2116:void _handleEOF() -> _handleEOF
com.fasterxml.jackson.databind.util.TokenBuffer$Segment -> com.fasterxml.jackson.databind.util.af$b:
# {"fileName":"TokenBuffer.java","id":"sourceFile"}
    int TOKENS_PER_SEGMENT -> a
    com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX -> f
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next -> b
    long _tokenTypes -> c
    java.lang.Object[] _tokens -> d
    java.util.TreeMap _nativeIds -> e
    2158:2165:void <init>() -> <init>
    2171:2176:com.fasterxml.jackson.core.JsonToken type(int) -> type
    2181:2186:int rawType(int) -> rawType
    2190:2190:java.lang.Object get(int) -> get
    2193:2193:com.fasterxml.jackson.databind.util.TokenBuffer$Segment next() -> next
    2200:2200:boolean hasIds() -> hasIds
    2207:2213:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken) -> append
    2219:2225:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object) -> append
    2230:2236:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> append
    2242:2248:com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object) -> append
    2302:2307:void set(int,com.fasterxml.jackson.core.JsonToken) -> set
    2312:2318:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object) -> set
    2322:2328:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> set
    2333:2340:void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object) -> set
    2344:2353:void assignNativeIds(int,java.lang.Object,java.lang.Object) -> assignNativeIds
    2359:2359:java.lang.Object findObjectId(int) -> findObjectId
    2366:2366:java.lang.Object findTypeId(int) -> findTypeId
    2369:2369:int _typeIdIndex(int) -> _typeIdIndex
    2370:2370:int _objectIdIndex(int) -> _objectIdIndex
    2137:2141:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.TokenBufferReadContext -> com.fasterxml.jackson.databind.util.ag:
# {"fileName":"TokenBufferReadContext.java","id":"sourceFile"}
    com.fasterxml.jackson.core.JsonStreamContext _parent -> g
    com.fasterxml.jackson.core.JsonLocation _startLocation -> h
    java.lang.String _currentName -> i
    java.lang.Object _currentValue -> j
    39:49:void <init>(com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.io.ContentReference) -> <init>
    53:56:void <init>(com.fasterxml.jackson.core.JsonStreamContext,java.lang.Object) -> <init>
    59:64:void <init>(com.fasterxml.jackson.core.JsonStreamContext,com.fasterxml.jackson.core.JsonLocation) -> <init>
    71:74:void <init>() -> <init>
    77:80:void <init>(com.fasterxml.jackson.databind.util.TokenBufferReadContext,int,int) -> <init>
    84:84:java.lang.Object getCurrentValue() -> getCurrentValue
    89:90:void setCurrentValue(java.lang.Object) -> setCurrentValue
    100:103:com.fasterxml.jackson.databind.util.TokenBufferReadContext createRootContext(com.fasterxml.jackson.core.JsonStreamContext) -> createRootContext
    108:109:com.fasterxml.jackson.databind.util.TokenBufferReadContext createChildArrayContext() -> createChildArrayContext
    114:115:com.fasterxml.jackson.databind.util.TokenBufferReadContext createChildObjectContext() -> createChildObjectContext
    126:132:com.fasterxml.jackson.databind.util.TokenBufferReadContext parentOrCopy() -> parentOrCopy
    141:141:java.lang.String getCurrentName() -> getCurrentName
    144:144:boolean hasCurrentName() -> hasCurrentName
    146:146:com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
    149:150:void setCurrentName(java.lang.String) -> setCurrentName
    162:163:void updateForValue() -> updateForValue
com.fasterxml.jackson.databind.util.TypeKey -> com.fasterxml.jackson.databind.util.ah:
# {"fileName":"TypeKey.java","id":"sourceFile"}
    int _hashCode -> a
    java.lang.Class _class -> b
    com.fasterxml.jackson.databind.JavaType _type -> c
    boolean _isTyped -> d
    25:25:void <init>() -> <init>
    27:32:void <init>(com.fasterxml.jackson.databind.util.TypeKey) -> <init>
    34:39:void <init>(java.lang.Class,boolean) -> <init>
    41:46:void <init>(com.fasterxml.jackson.databind.JavaType,boolean) -> <init>
    49:49:int untypedHash(java.lang.Class) -> untypedHash
    53:53:int typedHash(java.lang.Class) -> typedHash
    57:57:int untypedHash(com.fasterxml.jackson.databind.JavaType) -> untypedHash
    61:61:int typedHash(com.fasterxml.jackson.databind.JavaType) -> typedHash
    65:69:void resetTyped(java.lang.Class) -> resetTyped
    72:76:void resetUntyped(java.lang.Class) -> resetUntyped
    79:83:void resetTyped(com.fasterxml.jackson.databind.JavaType) -> resetTyped
    86:90:void resetUntyped(com.fasterxml.jackson.databind.JavaType) -> resetUntyped
    93:93:boolean isTyped() -> isTyped
    97:97:java.lang.Class getRawType() -> getRawType
    101:101:com.fasterxml.jackson.databind.JavaType getType() -> getType
    104:104:int hashCode() -> hashCode
    107:110:java.lang.String toString() -> toString
    116:128:boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.ViewMatcher -> com.fasterxml.jackson.databind.util.ai:
# {"fileName":"ViewMatcher.java","id":"sourceFile"}
    long serialVersionUID -> b
    com.fasterxml.jackson.databind.util.ViewMatcher EMPTY -> a
    7:7:void <init>() -> <init>
    13:13:boolean isVisibleForView(java.lang.Class) -> isVisibleForView
    17:26:com.fasterxml.jackson.databind.util.ViewMatcher construct(java.lang.Class[]) -> construct
    11:11:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.ViewMatcher$Multi -> com.fasterxml.jackson.databind.util.ai$a:
# {"fileName":"ViewMatcher.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.lang.Class[] _views -> c
    54:54:void <init>(java.lang.Class[]) -> <init>
    59:65:boolean isVisibleForView(java.lang.Class) -> isVisibleForView
com.fasterxml.jackson.databind.util.ViewMatcher$Single -> com.fasterxml.jackson.databind.util.ai$b:
# {"fileName":"ViewMatcher.java","id":"sourceFile"}
    long serialVersionUID -> b
    java.lang.Class _view -> c
    40:40:void <init>(java.lang.Class) -> <init>
    43:43:boolean isVisibleForView(java.lang.Class) -> isVisibleForView
com.fasterxml.jackson.databind.util.internal.Linked -> com.fasterxml.jackson.databind.util.internal.a:
# {"fileName":"LinkedDeque.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.Linked getPrevious() -> getPrevious
    void setPrevious(com.fasterxml.jackson.databind.util.internal.Linked) -> setPrevious
    com.fasterxml.jackson.databind.util.internal.Linked getNext() -> getNext
    void setNext(com.fasterxml.jackson.databind.util.internal.Linked) -> setNext
com.fasterxml.jackson.databind.util.internal.LinkedDeque -> com.fasterxml.jackson.databind.util.internal.b:
# {"fileName":"LinkedDeque.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.Linked first -> a
    com.fasterxml.jackson.databind.util.internal.Linked last -> b
    46:46:void <init>() -> <init>
    76:85:void linkFirst(com.fasterxml.jackson.databind.util.internal.Linked) -> linkFirst
    94:103:void linkLast(com.fasterxml.jackson.databind.util.internal.Linked) -> linkLast
    107:117:com.fasterxml.jackson.databind.util.internal.Linked unlinkFirst() -> unlinkFirst
    122:131:com.fasterxml.jackson.databind.util.internal.Linked unlinkLast() -> unlinkLast
    136:152:void unlink(com.fasterxml.jackson.databind.util.internal.Linked) -> unlink
    156:156:boolean isEmpty() -> isEmpty
    160:163:void checkNotEmpty() -> checkNotEmpty
    173:177:int size() -> size
    182:189:void clear() -> clear
    193:193:boolean contains(java.lang.Object) -> contains
    198:199:boolean contains(com.fasterxml.jackson.databind.util.internal.Linked) -> contains
    210:214:void moveToFront(com.fasterxml.jackson.databind.util.internal.Linked) -> moveToFront
    223:227:void moveToBack(com.fasterxml.jackson.databind.util.internal.Linked) -> moveToBack
    231:231:com.fasterxml.jackson.databind.util.internal.Linked peek() -> peek
    236:236:com.fasterxml.jackson.databind.util.internal.Linked peekFirst() -> peekFirst
    241:241:com.fasterxml.jackson.databind.util.internal.Linked peekLast() -> peekLast
    246:247:com.fasterxml.jackson.databind.util.internal.Linked getFirst() -> getFirst
    252:253:com.fasterxml.jackson.databind.util.internal.Linked getLast() -> getLast
    258:258:com.fasterxml.jackson.databind.util.internal.Linked element() -> element
    263:263:boolean offer(com.fasterxml.jackson.databind.util.internal.Linked) -> offer
    268:272:boolean offerFirst(com.fasterxml.jackson.databind.util.internal.Linked) -> offerFirst
    277:281:boolean offerLast(com.fasterxml.jackson.databind.util.internal.Linked) -> offerLast
    286:286:boolean add(com.fasterxml.jackson.databind.util.internal.Linked) -> add
    292:295:void addFirst(com.fasterxml.jackson.databind.util.internal.Linked) -> addFirst
    299:302:void addLast(com.fasterxml.jackson.databind.util.internal.Linked) -> addLast
    306:306:com.fasterxml.jackson.databind.util.internal.Linked poll() -> poll
    311:311:com.fasterxml.jackson.databind.util.internal.Linked pollFirst() -> pollFirst
    316:316:com.fasterxml.jackson.databind.util.internal.Linked pollLast() -> pollLast
    321:321:com.fasterxml.jackson.databind.util.internal.Linked remove() -> remove
    327:327:boolean remove(java.lang.Object) -> remove
    332:336:boolean remove(com.fasterxml.jackson.databind.util.internal.Linked) -> remove
    341:342:com.fasterxml.jackson.databind.util.internal.Linked removeFirst() -> removeFirst
    347:347:boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    352:353:com.fasterxml.jackson.databind.util.internal.Linked removeLast() -> removeLast
    358:358:boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    363:367:boolean removeAll(java.util.Collection) -> removeAll
    372:373:void push(com.fasterxml.jackson.databind.util.internal.Linked) -> push
    377:377:com.fasterxml.jackson.databind.util.internal.Linked pop() -> pop
    382:382:java.util.Iterator iterator() -> iterator
    391:391:java.util.Iterator descendingIterator() -> descendingIterator
    46:46:boolean add(java.lang.Object) -> add
    46:46:java.lang.Object pop() -> pop
    46:46:void push(java.lang.Object) -> push
    46:46:java.lang.Object peek() -> peek
    46:46:java.lang.Object element() -> element
    46:46:java.lang.Object poll() -> poll
    46:46:java.lang.Object remove() -> remove
    46:46:boolean offer(java.lang.Object) -> offer
    46:46:java.lang.Object peekLast() -> peekLast
    46:46:java.lang.Object peekFirst() -> peekFirst
    46:46:java.lang.Object getLast() -> getLast
    46:46:java.lang.Object getFirst() -> getFirst
    46:46:java.lang.Object pollLast() -> pollLast
    46:46:java.lang.Object pollFirst() -> pollFirst
    46:46:java.lang.Object removeLast() -> removeLast
    46:46:java.lang.Object removeFirst() -> removeFirst
    46:46:boolean offerLast(java.lang.Object) -> offerLast
    46:46:boolean offerFirst(java.lang.Object) -> offerFirst
    46:46:void addLast(java.lang.Object) -> addLast
    46:46:void addFirst(java.lang.Object) -> addFirst
com.fasterxml.jackson.databind.util.internal.LinkedDeque$1 -> com.fasterxml.jackson.databind.util.internal.b$1:
# {"fileName":"LinkedDeque.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.LinkedDeque this$0 -> a
    382:382:void <init>(com.fasterxml.jackson.databind.util.internal.LinkedDeque,com.fasterxml.jackson.databind.util.internal.Linked) -> <init>
    384:384:com.fasterxml.jackson.databind.util.internal.Linked computeNext() -> computeNext
com.fasterxml.jackson.databind.util.internal.LinkedDeque$2 -> com.fasterxml.jackson.databind.util.internal.b$2:
# {"fileName":"LinkedDeque.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.LinkedDeque this$0 -> a
    391:391:void <init>(com.fasterxml.jackson.databind.util.internal.LinkedDeque,com.fasterxml.jackson.databind.util.internal.Linked) -> <init>
    393:393:com.fasterxml.jackson.databind.util.internal.Linked computeNext() -> computeNext
com.fasterxml.jackson.databind.util.internal.LinkedDeque$AbstractLinkedIterator -> com.fasterxml.jackson.databind.util.internal.b$a:
# {"fileName":"LinkedDeque.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.Linked cursor -> b
    com.fasterxml.jackson.databind.util.internal.LinkedDeque this$0 -> c
    406:408:void <init>(com.fasterxml.jackson.databind.util.internal.LinkedDeque,com.fasterxml.jackson.databind.util.internal.Linked) -> <init>
    412:412:boolean hasNext() -> hasNext
    417:422:com.fasterxml.jackson.databind.util.internal.Linked next() -> next
    427:427:void remove() -> remove
    com.fasterxml.jackson.databind.util.internal.Linked computeNext() -> computeNext
    398:398:java.lang.Object next() -> next
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap -> com.fasterxml.jackson.databind.util.internal.c:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    int NCPU -> a
    long MAXIMUM_CAPACITY -> b
    int NUMBER_OF_READ_BUFFERS -> c
    int READ_BUFFERS_MASK -> d
    int READ_BUFFER_THRESHOLD -> e
    int READ_BUFFER_DRAIN_THRESHOLD -> f
    int READ_BUFFER_SIZE -> g
    int READ_BUFFER_INDEX_MASK -> h
    int WRITE_BUFFER_DRAIN_THRESHOLD -> i
    java.util.concurrent.ConcurrentMap data -> j
    int concurrencyLevel -> k
    long[] readBufferReadCount -> l
    com.fasterxml.jackson.databind.util.internal.LinkedDeque evictionDeque -> m
    java.util.concurrent.atomic.AtomicLong weightedSize -> n
    java.util.concurrent.atomic.AtomicLong capacity -> o
    java.util.concurrent.locks.Lock evictionLock -> p
    java.util.Queue writeBuffer -> q
    java.util.concurrent.atomic.AtomicLongArray readBufferWriteCount -> r
    java.util.concurrent.atomic.AtomicLongArray readBufferDrainAtWriteCount -> s
    java.util.concurrent.atomic.AtomicReferenceArray readBuffers -> t
    java.util.concurrent.atomic.AtomicReference drainStatus -> u
    java.util.Set keySet -> v
    java.util.Collection values -> w
    java.util.Set entrySet -> x
    long serialVersionUID -> y
    166:166:int ceilingNextPowerOfTwo(int) -> ceilingNextPowerOfTwo
    197:197:int readBufferIndex(int,int) -> readBufferIndex
    204:221:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder) -> <init>
    225:228:void checkNotNull(java.lang.Object) -> checkNotNull
    232:235:void checkArgument(boolean) -> checkArgument
    239:242:void checkState(boolean) -> checkState
    252:252:long capacity() -> capacity
    263:272:void setCapacity(long) -> setCapacity
    277:277:boolean hasOverflowed() -> hasOverflowed
    292:305:void evict() -> evict
    313:316:void afterRead(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> afterRead
    323:323:int readBufferIndex() -> readBufferIndex
    337:343:long recordRead(int,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> recordRead
    354:360:void drainOnReadIfNeeded(int,long) -> drainOnReadIfNeeded
    368:371:void afterWrite(java.lang.Runnable) -> afterWrite
    378:387:void tryToDrainBuffers() -> tryToDrainBuffers
    392:394:void drainBuffers() -> drainBuffers
    399:404:void drainReadBuffers() -> drainReadBuffers
    409:423:void drainReadBuffer(int) -> drainReadBuffer
    432:435:void applyRead(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> applyRead
    440:447:void drainWriteBuffer() -> drainWriteBuffer
    458:462:boolean tryToRetire(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue) -> tryToRetire
    473:481:void makeRetired(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> makeRetired
    493:499:void makeDead(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> makeDead
    565:565:boolean isEmpty() -> isEmpty
    570:570:int size() -> size
    575:597:void clear() -> clear
    601:601:boolean containsKey(java.lang.Object) -> containsKey
    606:613:boolean containsValue(java.lang.Object) -> containsValue
    618:623:java.lang.Object get(java.lang.Object) -> get
    628:628:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    633:633:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    647:679:java.lang.Object put(java.lang.Object,java.lang.Object,boolean) -> put
    684:691:java.lang.Object remove(java.lang.Object) -> remove
    696:718:boolean remove(java.lang.Object,java.lang.Object) -> remove
    724:748:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    753:778:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    783:784:java.util.Set keySet() -> keySet
    789:790:java.util.Collection values() -> values
    795:796:java.util.Set entrySet() -> entrySet
    1108:1108:java.lang.Object writeReplace() -> writeReplace
    1112:1112:void readObject(java.io.ObjectInputStream) -> readObject
    132:144:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$1 -> com.fasterxml.jackson.databind.util.internal.c$1:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$AddTask -> com.fasterxml.jackson.databind.util.internal.c$a:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node -> a
    int weight -> b
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> c
    507:510:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node,int) -> <init>
    515:522:void run() -> run
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder -> com.fasterxml.jackson.databind.util.internal.c$b:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    int DEFAULT_CONCURRENCY_LEVEL -> a
    int DEFAULT_INITIAL_CAPACITY -> b
    int concurrencyLevel -> c
    int initialCapacity -> d
    long capacity -> e
    1164:1168:void <init>() -> <init>
    1180:1182:com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder initialCapacity(int) -> initialCapacity
    1193:1195:com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder maximumCapacity(long) -> maximumCapacity
    1209:1211:com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder concurrencyLevel(int) -> concurrencyLevel
    1221:1222:com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap build() -> build
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus -> com.fasterxml.jackson.databind.util.internal.c$c:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus IDLE -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus REQUIRED -> b
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus PROCESSING -> c
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus[] $VALUES -> d
    800:800:com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus[] values() -> values
    800:800:com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus valueOf(java.lang.String) -> valueOf
    800:800:void <init>(java.lang.String,int) -> <init>
    boolean shouldDrainBuffers(boolean) -> shouldDrainBuffers
    800:800:void <init>(java.lang.String,int,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$1) -> <init>
    800:817:void <clinit>() -> <clinit>
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$1 -> com.fasterxml.jackson.databind.util.internal.c$c$1:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    803:803:void <init>(java.lang.String,int) -> <init>
    805:805:boolean shouldDrainBuffers(boolean) -> shouldDrainBuffers
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$2 -> com.fasterxml.jackson.databind.util.internal.c$c$2:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    810:810:void <init>(java.lang.String,int) -> <init>
    812:812:boolean shouldDrainBuffers(boolean) -> shouldDrainBuffers
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$DrainStatus$3 -> com.fasterxml.jackson.databind.util.internal.c$c$3:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    817:817:void <init>(java.lang.String,int) -> <init>
    819:819:boolean shouldDrainBuffers(boolean) -> shouldDrainBuffers
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntryIterator -> com.fasterxml.jackson.databind.util.internal.c$d:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    java.util.Iterator iterator -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node current -> b
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> c
    1061:1062:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    1067:1067:boolean hasNext() -> hasNext
    1072:1073:java.util.Map$Entry next() -> next
    1078:1081:void remove() -> remove
    1061:1061:java.lang.Object next() -> next
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntrySet -> com.fasterxml.jackson.databind.util.internal.c$e:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> b
    1017:1018:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    1022:1022:int size() -> size
    1027:1028:void clear() -> clear
    1032:1032:java.util.Iterator iterator() -> iterator
    1037:1042:boolean contains(java.lang.Object) -> contains
    1047:1047:boolean add(java.util.Map$Entry) -> add
    1052:1056:boolean remove(java.lang.Object) -> remove
    1017:1017:boolean add(java.lang.Object) -> add
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator -> com.fasterxml.jackson.databind.util.internal.c$f:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    java.util.Iterator iterator -> a
    java.lang.Object current -> b
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> c
    945:946:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    951:951:boolean hasNext() -> hasNext
    956:957:java.lang.Object next() -> next
    962:965:void remove() -> remove
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet -> com.fasterxml.jackson.databind.util.internal.c$g:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> b
    905:906:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    910:910:int size() -> size
    915:916:void clear() -> clear
    920:920:java.util.Iterator iterator() -> iterator
    925:925:boolean contains(java.lang.Object) -> contains
    930:930:boolean remove(java.lang.Object) -> remove
    935:935:java.lang.Object[] toArray() -> toArray
    940:940:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node -> com.fasterxml.jackson.databind.util.internal.c$h:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    java.lang.Object key -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node prev -> b
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node next -> c
    870:872:void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue) -> <init>
    877:877:com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node getPrevious() -> getPrevious
    883:884:void setPrevious(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> setPrevious
    889:889:com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node getNext() -> getNext
    895:896:void setNext(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> setNext
    900:900:java.lang.Object getValue() -> getValue
    859:859:void setNext(com.fasterxml.jackson.databind.util.internal.Linked) -> setNext
    859:859:com.fasterxml.jackson.databind.util.internal.Linked getNext() -> getNext
    859:859:void setPrevious(com.fasterxml.jackson.databind.util.internal.Linked) -> setPrevious
    859:859:com.fasterxml.jackson.databind.util.internal.Linked getPrevious() -> getPrevious
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$RemovalTask -> com.fasterxml.jackson.databind.util.internal.c$i:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> b
    529:531:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> <init>
    537:539:void run() -> run
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$SerializationProxy -> com.fasterxml.jackson.databind.util.internal.c$j:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    int concurrencyLevel -> a
    java.util.Map data -> b
    long capacity -> c
    long serialVersionUID -> d
    1127:1131:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    1134:1138:java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask -> com.fasterxml.jackson.databind.util.internal.c$k:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    int weightDifference -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node -> b
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> c
    547:550:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node,int) -> <init>
    555:558:void run() -> run
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$ValueIterator -> com.fasterxml.jackson.databind.util.internal.c$l:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    java.util.Iterator iterator -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node current -> b
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> c
    993:994:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    999:999:boolean hasNext() -> hasNext
    1004:1005:java.lang.Object next() -> next
    1010:1013:void remove() -> remove
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Values -> com.fasterxml.jackson.databind.util.internal.c$m:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> a
    969:969:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap) -> <init>
    973:973:int size() -> size
    978:979:void clear() -> clear
    983:983:java.util.Iterator iterator() -> iterator
    988:988:boolean contains(java.lang.Object) -> contains
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue -> com.fasterxml.jackson.databind.util.internal.c$n:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    int weight -> a
    java.lang.Object value -> b
    838:841:void <init>(java.lang.Object,int) -> <init>
    844:844:boolean contains(java.lang.Object) -> contains
    851:851:boolean isAlive() -> isAlive
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WriteThroughEntry -> com.fasterxml.jackson.databind.util.internal.c$o:
# {"fileName":"PrivateMaxEntriesMap.java","id":"sourceFile"}
    long serialVersionUID -> a
    com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0 -> b
    1088:1090:void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap,com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node) -> <init>
    1094:1095:java.lang.Object setValue(java.lang.Object) -> setValue
    1099:1099:java.lang.Object writeReplace() -> writeReplace
com.fasterxml.jackson.databind.util.internal.package-info -> com.fasterxml.jackson.databind.util.internal.d:
# {"fileName":"package-info.java","id":"sourceFile"}
com.fasterxml.jackson.databind.util.package-info -> com.fasterxml.jackson.databind.util.aj:
# {"fileName":"package-info.java","id":"sourceFile"}
com_fasterxml_jackson_core.jackson_databind.JacksonConstructorPropertiesTest -> com_fasterxml_jackson_core.jackson_databind.JacksonConstructorPropertiesTest:
# {"fileName":"JacksonConstructorPropertiesTest.java","id":"sourceFile"}
    com.fasterxml.jackson.databind.ObjectMapper mapper -> a
    17:17:void <init>() -> <init>
    29:33:void deserializeConstructorProperties() -> deserializeConstructorProperties
    22:25:void <clinit>() -> <clinit>
module-info -> module-info:
